// Compiled by ClojureScript 0.0-2985 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2985";
cljs.core._STAR_unchecked_if_STAR_ = false;
/**
 * @define {string}
 */
cljs.core._STAR_target_STAR_ = "default";
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
 * Each runtime environment provides a different way to print output.
 * Whatever function *print-fn* is bound to will be passed any
 * Strings which should be printed.
 */
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
 * Set *print-fn* to f.
 */
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
 * Set *print-fn* to console.log
 */
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__6705__delegate = function (args){
return console.log.apply(console,(function (){var G__6704 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__6704) : cljs.core.into_array.call(null,G__6704));
})());
};
var G__6705 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__6706__i = 0, G__6706__a = new Array(arguments.length -  0);
while (G__6706__i < G__6706__a.length) {G__6706__a[G__6706__i] = arguments[G__6706__i + 0]; ++G__6706__i;}
  args = new cljs.core.IndexedSeq(G__6706__a,0);
} 
return G__6705__delegate.call(this,args);};
G__6705.cljs$lang$maxFixedArity = 0;
G__6705.cljs$lang$applyTo = (function (arglist__6707){
var args = cljs.core.seq(arglist__6707);
return G__6705__delegate(args);
});
G__6705.cljs$core$IFn$_invoke$arity$variadic = G__6705__delegate;
return G__6705;
})()
;
});
/**
 * Internal - do not use!
 */
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
 * Tests if 2 arguments are the same object
 */
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
 * Returns true if x is nil, false otherwise.
 */
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
 * Returns true if x is logical false, false otherwise.
 */
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
 * Returns true if x is not nil, false otherwise.
 */
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__6709 = x;
return goog.isString(G__6709);
});
/**
 * Internal - do not use!
 */
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__6711 = x__$1;
return goog.typeOf(G__6711);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
 * When compiled for a command-line target, whatever
 * function *main-fn* is set to will be called with the command-line
 * argv as arguments
 */
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__3914__auto__ = ty;
if(cljs.core.truth_(and__3914__auto__)){
return ty.cljs$lang$type;
} else {
return and__3914__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__6713 = obj;
return goog.typeOf(G__6713);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4404__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4404__auto__)){
var s = temp__4404__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__6715 = Symbol;
return goog.typeOf(G__6715);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
 * Returns a javascript array, cloned from the passed in array
 */
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__4813__auto___6717 = len;
var i_6718 = (0);
while(true){
if((i_6718 < n__4813__auto___6717)){
(new_arr[i_6718] = (arr[i_6718]));

var G__6719 = (i_6718 + (1));
i_6718 = G__6719;
continue;
} else {
}
break;
}

return new_arr;
});
/**
 * Creates a new javascript array.
 * @param {...*} var_args
 */
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__6720 = (i + (1));
i = G__6720;
continue;
} else {
return a;
}
break;
}
});
/**
 * Returns the value at the index.
 * @param {...*} var_args
 */
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__6729__delegate = function (array,i,idxs){
var G__6726 = aget;
var G__6727 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__6728 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__6726,G__6727,G__6728) : cljs.core.apply.call(null,G__6726,G__6727,G__6728));
};
var G__6729 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__6730__i = 0, G__6730__a = new Array(arguments.length -  2);
while (G__6730__i < G__6730__a.length) {G__6730__a[G__6730__i] = arguments[G__6730__i + 2]; ++G__6730__i;}
  idxs = new cljs.core.IndexedSeq(G__6730__a,0);
} 
return G__6729__delegate.call(this,array,i,idxs);};
G__6729.cljs$lang$maxFixedArity = 2;
G__6729.cljs$lang$applyTo = (function (arglist__6731){
var array = cljs.core.first(arglist__6731);
arglist__6731 = cljs.core.next(arglist__6731);
var i = cljs.core.first(arglist__6731);
var idxs = cljs.core.rest(arglist__6731);
return G__6729__delegate(array,i,idxs);
});
G__6729.cljs$core$IFn$_invoke$arity$variadic = G__6729__delegate;
return G__6729;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__6732 = null;
if (arguments.length > 2) {
var G__6733__i = 0, G__6733__a = new Array(arguments.length -  2);
while (G__6733__i < G__6733__a.length) {G__6733__a[G__6733__i] = arguments[G__6733__i + 2]; ++G__6733__i;}
G__6732 = new cljs.core.IndexedSeq(G__6733__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__6732);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
 * Sets the value at the index.
 * @param {...*} var_args
 */
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__6742__delegate = function (array,idx,idx2,idxv){
var G__6738 = aset;
var G__6739 = (array[idx]);
var G__6740 = idx2;
var G__6741 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__6738,G__6739,G__6740,G__6741) : cljs.core.apply.call(null,G__6738,G__6739,G__6740,G__6741));
};
var G__6742 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__6743__i = 0, G__6743__a = new Array(arguments.length -  3);
while (G__6743__i < G__6743__a.length) {G__6743__a[G__6743__i] = arguments[G__6743__i + 3]; ++G__6743__i;}
  idxv = new cljs.core.IndexedSeq(G__6743__a,0);
} 
return G__6742__delegate.call(this,array,idx,idx2,idxv);};
G__6742.cljs$lang$maxFixedArity = 3;
G__6742.cljs$lang$applyTo = (function (arglist__6744){
var array = cljs.core.first(arglist__6744);
arglist__6744 = cljs.core.next(arglist__6744);
var idx = cljs.core.first(arglist__6744);
arglist__6744 = cljs.core.next(arglist__6744);
var idx2 = cljs.core.first(arglist__6744);
var idxv = cljs.core.rest(arglist__6744);
return G__6742__delegate(array,idx,idx2,idxv);
});
G__6742.cljs$core$IFn$_invoke$arity$variadic = G__6742__delegate;
return G__6742;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__6745 = null;
if (arguments.length > 3) {
var G__6746__i = 0, G__6746__a = new Array(arguments.length -  3);
while (G__6746__i < G__6746__a.length) {G__6746__a[G__6746__i] = arguments[G__6746__i + 3]; ++G__6746__i;}
G__6745 = new cljs.core.IndexedSeq(G__6746__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__6745);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
 * Returns the length of the array. Works on arrays of all types.
 */
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__6752 = (function (a,x){
a.push(x);

return a;
});
var G__6753 = [];
var G__6754 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__6752,G__6753,G__6754) : cljs.core.reduce.call(null,G__6752,G__6753,G__6754));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
 * Invoke JavaScript object method via string. Needed when the
 * string is not a valid unquoted property name.
 * @param {...*} var_args
 */
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__6755__i = 0, G__6755__a = new Array(arguments.length -  2);
while (G__6755__i < G__6755__a.length) {G__6755__a[G__6755__i] = arguments[G__6755__i + 2]; ++G__6755__i;}
  args = new cljs.core.IndexedSeq(G__6755__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__6756){
var obj = cljs.core.first(arglist__6756);
arglist__6756 = cljs.core.next(arglist__6756);
var s = cljs.core.first(arglist__6756);
var args = cljs.core.rest(arglist__6756);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj6758 = {};
return obj6758;
})();


cljs.core.IFn = (function (){var obj6760 = {};
return obj6760;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__3914__auto__ = this$;
if(and__3914__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__3914__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__4570__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3926__auto__ = (cljs.core._invoke[(function (){var G__6806 = x__4570__auto__;
return goog.typeOf(G__6806);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._invoke["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__3914__auto__ = this$;
if(and__3914__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__3914__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__4570__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3926__auto__ = (cljs.core._invoke[(function (){var G__6808 = x__4570__auto__;
return goog.typeOf(G__6808);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._invoke["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__3914__auto__ = this$;
if(and__3914__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__3914__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__4570__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3926__auto__ = (cljs.core._invoke[(function (){var G__6810 = x__4570__auto__;
return goog.typeOf(G__6810);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._invoke["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__3914__auto__ = this$;
if(and__3914__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__3914__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__4570__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3926__auto__ = (cljs.core._invoke[(function (){var G__6812 = x__4570__auto__;
return goog.typeOf(G__6812);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._invoke["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__3914__auto__ = this$;
if(and__3914__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__3914__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__4570__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3926__auto__ = (cljs.core._invoke[(function (){var G__6814 = x__4570__auto__;
return goog.typeOf(G__6814);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._invoke["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__3914__auto__ = this$;
if(and__3914__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__3914__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__4570__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3926__auto__ = (cljs.core._invoke[(function (){var G__6816 = x__4570__auto__;
return goog.typeOf(G__6816);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._invoke["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__3914__auto__ = this$;
if(and__3914__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__3914__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__4570__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3926__auto__ = (cljs.core._invoke[(function (){var G__6818 = x__4570__auto__;
return goog.typeOf(G__6818);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._invoke["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__3914__auto__ = this$;
if(and__3914__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__3914__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__4570__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3926__auto__ = (cljs.core._invoke[(function (){var G__6820 = x__4570__auto__;
return goog.typeOf(G__6820);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._invoke["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__3914__auto__ = this$;
if(and__3914__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__3914__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__4570__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3926__auto__ = (cljs.core._invoke[(function (){var G__6822 = x__4570__auto__;
return goog.typeOf(G__6822);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._invoke["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__3914__auto__ = this$;
if(and__3914__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__3914__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__4570__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3926__auto__ = (cljs.core._invoke[(function (){var G__6824 = x__4570__auto__;
return goog.typeOf(G__6824);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._invoke["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__3914__auto__ = this$;
if(and__3914__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__3914__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__4570__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3926__auto__ = (cljs.core._invoke[(function (){var G__6826 = x__4570__auto__;
return goog.typeOf(G__6826);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._invoke["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__3914__auto__ = this$;
if(and__3914__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__3914__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__4570__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3926__auto__ = (cljs.core._invoke[(function (){var G__6828 = x__4570__auto__;
return goog.typeOf(G__6828);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._invoke["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__3914__auto__ = this$;
if(and__3914__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__3914__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__4570__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3926__auto__ = (cljs.core._invoke[(function (){var G__6830 = x__4570__auto__;
return goog.typeOf(G__6830);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._invoke["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__3914__auto__ = this$;
if(and__3914__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__3914__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__4570__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3926__auto__ = (cljs.core._invoke[(function (){var G__6832 = x__4570__auto__;
return goog.typeOf(G__6832);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._invoke["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__3914__auto__ = this$;
if(and__3914__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__3914__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__4570__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3926__auto__ = (cljs.core._invoke[(function (){var G__6834 = x__4570__auto__;
return goog.typeOf(G__6834);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._invoke["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__3914__auto__ = this$;
if(and__3914__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__3914__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__4570__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3926__auto__ = (cljs.core._invoke[(function (){var G__6836 = x__4570__auto__;
return goog.typeOf(G__6836);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._invoke["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__3914__auto__ = this$;
if(and__3914__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__3914__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__4570__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3926__auto__ = (cljs.core._invoke[(function (){var G__6838 = x__4570__auto__;
return goog.typeOf(G__6838);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._invoke["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__3914__auto__ = this$;
if(and__3914__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__3914__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__4570__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3926__auto__ = (cljs.core._invoke[(function (){var G__6840 = x__4570__auto__;
return goog.typeOf(G__6840);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._invoke["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__3914__auto__ = this$;
if(and__3914__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__3914__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__4570__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3926__auto__ = (cljs.core._invoke[(function (){var G__6842 = x__4570__auto__;
return goog.typeOf(G__6842);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._invoke["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__3914__auto__ = this$;
if(and__3914__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__3914__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__4570__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3926__auto__ = (cljs.core._invoke[(function (){var G__6844 = x__4570__auto__;
return goog.typeOf(G__6844);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._invoke["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__3914__auto__ = this$;
if(and__3914__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__3914__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__4570__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3926__auto__ = (cljs.core._invoke[(function (){var G__6846 = x__4570__auto__;
return goog.typeOf(G__6846);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._invoke["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__3914__auto__ = this$;
if(and__3914__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__3914__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__4570__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3926__auto__ = (cljs.core._invoke[(function (){var G__6848 = x__4570__auto__;
return goog.typeOf(G__6848);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._invoke["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj6850 = {};
return obj6850;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__3914__auto__ = value;
if(and__3914__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__3914__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__4570__auto__ = (((value == null))?null:value);
return (function (){var or__3926__auto__ = (cljs.core._clone[(function (){var G__6854 = x__4570__auto__;
return goog.typeOf(G__6854);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._clone["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj6856 = {};
return obj6856;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__3914__auto__ = coll;
if(and__3914__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__3914__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__4570__auto__ = (((coll == null))?null:coll);
return (function (){var or__3926__auto__ = (cljs.core._count[(function (){var G__6860 = x__4570__auto__;
return goog.typeOf(G__6860);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._count["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj6862 = {};
return obj6862;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__3914__auto__ = coll;
if(and__3914__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__3914__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__4570__auto__ = (((coll == null))?null:coll);
return (function (){var or__3926__auto__ = (cljs.core._empty[(function (){var G__6866 = x__4570__auto__;
return goog.typeOf(G__6866);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._empty["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj6868 = {};
return obj6868;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__3914__auto__ = coll;
if(and__3914__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__3914__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__4570__auto__ = (((coll == null))?null:coll);
return (function (){var or__3926__auto__ = (cljs.core._conj[(function (){var G__6872 = x__4570__auto__;
return goog.typeOf(G__6872);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._conj["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj6874 = {};
return obj6874;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__3914__auto__ = coll;
if(and__3914__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__3914__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__4570__auto__ = (((coll == null))?null:coll);
return (function (){var or__3926__auto__ = (cljs.core._nth[(function (){var G__6880 = x__4570__auto__;
return goog.typeOf(G__6880);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._nth["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__3914__auto__ = coll;
if(and__3914__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__3914__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__4570__auto__ = (((coll == null))?null:coll);
return (function (){var or__3926__auto__ = (cljs.core._nth[(function (){var G__6882 = x__4570__auto__;
return goog.typeOf(G__6882);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._nth["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj6884 = {};
return obj6884;
})();


cljs.core.ISeq = (function (){var obj6886 = {};
return obj6886;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__3914__auto__ = coll;
if(and__3914__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__3914__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__4570__auto__ = (((coll == null))?null:coll);
return (function (){var or__3926__auto__ = (cljs.core._first[(function (){var G__6890 = x__4570__auto__;
return goog.typeOf(G__6890);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._first["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__3914__auto__ = coll;
if(and__3914__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__3914__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__4570__auto__ = (((coll == null))?null:coll);
return (function (){var or__3926__auto__ = (cljs.core._rest[(function (){var G__6894 = x__4570__auto__;
return goog.typeOf(G__6894);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._rest["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj6896 = {};
return obj6896;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__3914__auto__ = coll;
if(and__3914__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__3914__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__4570__auto__ = (((coll == null))?null:coll);
return (function (){var or__3926__auto__ = (cljs.core._next[(function (){var G__6900 = x__4570__auto__;
return goog.typeOf(G__6900);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._next["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj6902 = {};
return obj6902;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__3914__auto__ = o;
if(and__3914__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__3914__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__4570__auto__ = (((o == null))?null:o);
return (function (){var or__3926__auto__ = (cljs.core._lookup[(function (){var G__6908 = x__4570__auto__;
return goog.typeOf(G__6908);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._lookup["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__3914__auto__ = o;
if(and__3914__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__3914__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__4570__auto__ = (((o == null))?null:o);
return (function (){var or__3926__auto__ = (cljs.core._lookup[(function (){var G__6910 = x__4570__auto__;
return goog.typeOf(G__6910);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._lookup["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj6912 = {};
return obj6912;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__3914__auto__ = coll;
if(and__3914__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__3914__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__4570__auto__ = (((coll == null))?null:coll);
return (function (){var or__3926__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__6916 = x__4570__auto__;
return goog.typeOf(G__6916);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__3914__auto__ = coll;
if(and__3914__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__3914__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__4570__auto__ = (((coll == null))?null:coll);
return (function (){var or__3926__auto__ = (cljs.core._assoc[(function (){var G__6920 = x__4570__auto__;
return goog.typeOf(G__6920);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._assoc["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj6922 = {};
return obj6922;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__3914__auto__ = coll;
if(and__3914__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__3914__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__4570__auto__ = (((coll == null))?null:coll);
return (function (){var or__3926__auto__ = (cljs.core._dissoc[(function (){var G__6926 = x__4570__auto__;
return goog.typeOf(G__6926);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._dissoc["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj6928 = {};
return obj6928;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__3914__auto__ = coll;
if(and__3914__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__3914__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__4570__auto__ = (((coll == null))?null:coll);
return (function (){var or__3926__auto__ = (cljs.core._key[(function (){var G__6932 = x__4570__auto__;
return goog.typeOf(G__6932);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._key["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__3914__auto__ = coll;
if(and__3914__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__3914__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__4570__auto__ = (((coll == null))?null:coll);
return (function (){var or__3926__auto__ = (cljs.core._val[(function (){var G__6936 = x__4570__auto__;
return goog.typeOf(G__6936);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._val["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj6938 = {};
return obj6938;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__3914__auto__ = coll;
if(and__3914__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__3914__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__4570__auto__ = (((coll == null))?null:coll);
return (function (){var or__3926__auto__ = (cljs.core._disjoin[(function (){var G__6942 = x__4570__auto__;
return goog.typeOf(G__6942);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._disjoin["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj6944 = {};
return obj6944;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__3914__auto__ = coll;
if(and__3914__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__3914__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__4570__auto__ = (((coll == null))?null:coll);
return (function (){var or__3926__auto__ = (cljs.core._peek[(function (){var G__6948 = x__4570__auto__;
return goog.typeOf(G__6948);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._peek["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__3914__auto__ = coll;
if(and__3914__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__3914__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__4570__auto__ = (((coll == null))?null:coll);
return (function (){var or__3926__auto__ = (cljs.core._pop[(function (){var G__6952 = x__4570__auto__;
return goog.typeOf(G__6952);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._pop["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj6954 = {};
return obj6954;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__3914__auto__ = coll;
if(and__3914__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__3914__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__4570__auto__ = (((coll == null))?null:coll);
return (function (){var or__3926__auto__ = (cljs.core._assoc_n[(function (){var G__6958 = x__4570__auto__;
return goog.typeOf(G__6958);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj6960 = {};
return obj6960;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__3914__auto__ = o;
if(and__3914__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__3914__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__4570__auto__ = (((o == null))?null:o);
return (function (){var or__3926__auto__ = (cljs.core._deref[(function (){var G__6964 = x__4570__auto__;
return goog.typeOf(G__6964);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._deref["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj6966 = {};
return obj6966;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__3914__auto__ = o;
if(and__3914__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__3914__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__4570__auto__ = (((o == null))?null:o);
return (function (){var or__3926__auto__ = (cljs.core._deref_with_timeout[(function (){var G__6970 = x__4570__auto__;
return goog.typeOf(G__6970);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj6972 = {};
return obj6972;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__3914__auto__ = o;
if(and__3914__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__3914__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__4570__auto__ = (((o == null))?null:o);
return (function (){var or__3926__auto__ = (cljs.core._meta[(function (){var G__6976 = x__4570__auto__;
return goog.typeOf(G__6976);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._meta["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj6978 = {};
return obj6978;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__3914__auto__ = o;
if(and__3914__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__3914__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__4570__auto__ = (((o == null))?null:o);
return (function (){var or__3926__auto__ = (cljs.core._with_meta[(function (){var G__6982 = x__4570__auto__;
return goog.typeOf(G__6982);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._with_meta["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj6984 = {};
return obj6984;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__3914__auto__ = coll;
if(and__3914__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__3914__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__4570__auto__ = (((coll == null))?null:coll);
return (function (){var or__3926__auto__ = (cljs.core._reduce[(function (){var G__6990 = x__4570__auto__;
return goog.typeOf(G__6990);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._reduce["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__3914__auto__ = coll;
if(and__3914__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__3914__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__4570__auto__ = (((coll == null))?null:coll);
return (function (){var or__3926__auto__ = (cljs.core._reduce[(function (){var G__6992 = x__4570__auto__;
return goog.typeOf(G__6992);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._reduce["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj6994 = {};
return obj6994;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__3914__auto__ = coll;
if(and__3914__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__3914__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__4570__auto__ = (((coll == null))?null:coll);
return (function (){var or__3926__auto__ = (cljs.core._kv_reduce[(function (){var G__6998 = x__4570__auto__;
return goog.typeOf(G__6998);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj7000 = {};
return obj7000;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__3914__auto__ = o;
if(and__3914__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__3914__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__4570__auto__ = (((o == null))?null:o);
return (function (){var or__3926__auto__ = (cljs.core._equiv[(function (){var G__7004 = x__4570__auto__;
return goog.typeOf(G__7004);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._equiv["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj7006 = {};
return obj7006;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__3914__auto__ = o;
if(and__3914__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__3914__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__4570__auto__ = (((o == null))?null:o);
return (function (){var or__3926__auto__ = (cljs.core._hash[(function (){var G__7010 = x__4570__auto__;
return goog.typeOf(G__7010);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._hash["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj7012 = {};
return obj7012;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__3914__auto__ = o;
if(and__3914__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__3914__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__4570__auto__ = (((o == null))?null:o);
return (function (){var or__3926__auto__ = (cljs.core._seq[(function (){var G__7016 = x__4570__auto__;
return goog.typeOf(G__7016);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._seq["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj7018 = {};
return obj7018;
})();


cljs.core.IList = (function (){var obj7020 = {};
return obj7020;
})();


cljs.core.IRecord = (function (){var obj7022 = {};
return obj7022;
})();


cljs.core.IReversible = (function (){var obj7024 = {};
return obj7024;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__3914__auto__ = coll;
if(and__3914__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__3914__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__4570__auto__ = (((coll == null))?null:coll);
return (function (){var or__3926__auto__ = (cljs.core._rseq[(function (){var G__7028 = x__4570__auto__;
return goog.typeOf(G__7028);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._rseq["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj7030 = {};
return obj7030;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__3914__auto__ = coll;
if(and__3914__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__3914__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__4570__auto__ = (((coll == null))?null:coll);
return (function (){var or__3926__auto__ = (cljs.core._sorted_seq[(function (){var G__7034 = x__4570__auto__;
return goog.typeOf(G__7034);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__3914__auto__ = coll;
if(and__3914__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__3914__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__4570__auto__ = (((coll == null))?null:coll);
return (function (){var or__3926__auto__ = (cljs.core._sorted_seq_from[(function (){var G__7038 = x__4570__auto__;
return goog.typeOf(G__7038);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__3914__auto__ = coll;
if(and__3914__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__3914__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__4570__auto__ = (((coll == null))?null:coll);
return (function (){var or__3926__auto__ = (cljs.core._entry_key[(function (){var G__7042 = x__4570__auto__;
return goog.typeOf(G__7042);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._entry_key["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__3914__auto__ = coll;
if(and__3914__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__3914__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__4570__auto__ = (((coll == null))?null:coll);
return (function (){var or__3926__auto__ = (cljs.core._comparator[(function (){var G__7046 = x__4570__auto__;
return goog.typeOf(G__7046);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._comparator["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj7048 = {};
return obj7048;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__3914__auto__ = writer;
if(and__3914__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__3914__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__4570__auto__ = (((writer == null))?null:writer);
return (function (){var or__3926__auto__ = (cljs.core._write[(function (){var G__7052 = x__4570__auto__;
return goog.typeOf(G__7052);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._write["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__3914__auto__ = writer;
if(and__3914__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__3914__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__4570__auto__ = (((writer == null))?null:writer);
return (function (){var or__3926__auto__ = (cljs.core._flush[(function (){var G__7056 = x__4570__auto__;
return goog.typeOf(G__7056);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._flush["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj7058 = {};
return obj7058;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__3914__auto__ = o;
if(and__3914__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__3914__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__4570__auto__ = (((o == null))?null:o);
return (function (){var or__3926__auto__ = (cljs.core._pr_writer[(function (){var G__7062 = x__4570__auto__;
return goog.typeOf(G__7062);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj7064 = {};
return obj7064;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__3914__auto__ = d;
if(and__3914__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__3914__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__4570__auto__ = (((d == null))?null:d);
return (function (){var or__3926__auto__ = (cljs.core._realized_QMARK_[(function (){var G__7068 = x__4570__auto__;
return goog.typeOf(G__7068);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj7070 = {};
return obj7070;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__3914__auto__ = this$;
if(and__3914__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__3914__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__4570__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3926__auto__ = (cljs.core._notify_watches[(function (){var G__7074 = x__4570__auto__;
return goog.typeOf(G__7074);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__3914__auto__ = this$;
if(and__3914__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__3914__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__4570__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3926__auto__ = (cljs.core._add_watch[(function (){var G__7078 = x__4570__auto__;
return goog.typeOf(G__7078);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._add_watch["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__3914__auto__ = this$;
if(and__3914__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__3914__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__4570__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3926__auto__ = (cljs.core._remove_watch[(function (){var G__7082 = x__4570__auto__;
return goog.typeOf(G__7082);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj7084 = {};
return obj7084;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__3914__auto__ = coll;
if(and__3914__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__3914__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__4570__auto__ = (((coll == null))?null:coll);
return (function (){var or__3926__auto__ = (cljs.core._as_transient[(function (){var G__7088 = x__4570__auto__;
return goog.typeOf(G__7088);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._as_transient["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj7090 = {};
return obj7090;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__3914__auto__ = tcoll;
if(and__3914__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__3914__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__4570__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3926__auto__ = (cljs.core._conj_BANG_[(function (){var G__7094 = x__4570__auto__;
return goog.typeOf(G__7094);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__3914__auto__ = tcoll;
if(and__3914__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__3914__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__4570__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3926__auto__ = (cljs.core._persistent_BANG_[(function (){var G__7098 = x__4570__auto__;
return goog.typeOf(G__7098);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj7100 = {};
return obj7100;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__3914__auto__ = tcoll;
if(and__3914__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__3914__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__4570__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3926__auto__ = (cljs.core._assoc_BANG_[(function (){var G__7104 = x__4570__auto__;
return goog.typeOf(G__7104);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj7106 = {};
return obj7106;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__3914__auto__ = tcoll;
if(and__3914__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__3914__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__4570__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3926__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__7110 = x__4570__auto__;
return goog.typeOf(G__7110);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj7112 = {};
return obj7112;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__3914__auto__ = tcoll;
if(and__3914__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__3914__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__4570__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3926__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__7116 = x__4570__auto__;
return goog.typeOf(G__7116);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__3914__auto__ = tcoll;
if(and__3914__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__3914__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__4570__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3926__auto__ = (cljs.core._pop_BANG_[(function (){var G__7120 = x__4570__auto__;
return goog.typeOf(G__7120);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj7122 = {};
return obj7122;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__3914__auto__ = tcoll;
if(and__3914__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__3914__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__4570__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3926__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__7126 = x__4570__auto__;
return goog.typeOf(G__7126);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj7128 = {};
return obj7128;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__3914__auto__ = x;
if(and__3914__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__3914__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__4570__auto__ = (((x == null))?null:x);
return (function (){var or__3926__auto__ = (cljs.core._compare[(function (){var G__7132 = x__4570__auto__;
return goog.typeOf(G__7132);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._compare["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj7134 = {};
return obj7134;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__3914__auto__ = coll;
if(and__3914__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__3914__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__4570__auto__ = (((coll == null))?null:coll);
return (function (){var or__3926__auto__ = (cljs.core._drop_first[(function (){var G__7138 = x__4570__auto__;
return goog.typeOf(G__7138);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._drop_first["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj7140 = {};
return obj7140;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__3914__auto__ = coll;
if(and__3914__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__3914__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__4570__auto__ = (((coll == null))?null:coll);
return (function (){var or__3926__auto__ = (cljs.core._chunked_first[(function (){var G__7144 = x__4570__auto__;
return goog.typeOf(G__7144);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__3914__auto__ = coll;
if(and__3914__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__3914__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__4570__auto__ = (((coll == null))?null:coll);
return (function (){var or__3926__auto__ = (cljs.core._chunked_rest[(function (){var G__7148 = x__4570__auto__;
return goog.typeOf(G__7148);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj7150 = {};
return obj7150;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__3914__auto__ = coll;
if(and__3914__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__3914__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__4570__auto__ = (((coll == null))?null:coll);
return (function (){var or__3926__auto__ = (cljs.core._chunked_next[(function (){var G__7154 = x__4570__auto__;
return goog.typeOf(G__7154);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj7156 = {};
return obj7156;
})();

cljs.core._name = (function _name(x){
if((function (){var and__3914__auto__ = x;
if(and__3914__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__3914__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__4570__auto__ = (((x == null))?null:x);
return (function (){var or__3926__auto__ = (cljs.core._name[(function (){var G__7160 = x__4570__auto__;
return goog.typeOf(G__7160);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._name["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__3914__auto__ = x;
if(and__3914__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__3914__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__4570__auto__ = (((x == null))?null:x);
return (function (){var or__3926__auto__ = (cljs.core._namespace[(function (){var G__7164 = x__4570__auto__;
return goog.typeOf(G__7164);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._namespace["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj7166 = {};
return obj7166;
})();


cljs.core.IReset = (function (){var obj7168 = {};
return obj7168;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__3914__auto__ = o;
if(and__3914__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__3914__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__4570__auto__ = (((o == null))?null:o);
return (function (){var or__3926__auto__ = (cljs.core._reset_BANG_[(function (){var G__7172 = x__4570__auto__;
return goog.typeOf(G__7172);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj7174 = {};
return obj7174;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__3914__auto__ = o;
if(and__3914__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__3914__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__4570__auto__ = (((o == null))?null:o);
return (function (){var or__3926__auto__ = (cljs.core._swap_BANG_[(function (){var G__7184 = x__4570__auto__;
return goog.typeOf(G__7184);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__3914__auto__ = o;
if(and__3914__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__3914__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__4570__auto__ = (((o == null))?null:o);
return (function (){var or__3926__auto__ = (cljs.core._swap_BANG_[(function (){var G__7186 = x__4570__auto__;
return goog.typeOf(G__7186);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__3914__auto__ = o;
if(and__3914__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__3914__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__4570__auto__ = (((o == null))?null:o);
return (function (){var or__3926__auto__ = (cljs.core._swap_BANG_[(function (){var G__7188 = x__4570__auto__;
return goog.typeOf(G__7188);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__3914__auto__ = o;
if(and__3914__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__3914__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__4570__auto__ = (((o == null))?null:o);
return (function (){var or__3926__auto__ = (cljs.core._swap_BANG_[(function (){var G__7190 = x__4570__auto__;
return goog.typeOf(G__7190);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj7192 = {};
return obj7192;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__3914__auto__ = o;
if(and__3914__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__3914__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__4570__auto__ = (((o == null))?null:o);
return (function (){var or__3926__auto__ = (cljs.core._vreset_BANG_[(function (){var G__7196 = x__4570__auto__;
return goog.typeOf(G__7196);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj7198 = {};
return obj7198;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__3914__auto__ = coll;
if(and__3914__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__3914__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__4570__auto__ = (((coll == null))?null:coll);
return (function (){var or__3926__auto__ = (cljs.core._iterator[(function (){var G__7202 = x__4570__auto__;
return goog.typeOf(G__7202);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._iterator["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__4513__auto__,writer__4514__auto__,opt__4515__auto__){
return cljs.core._write(writer__4514__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
 * Support so that collections can implement toString without
 * loading all the printing machinery.
 */
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__7205 = (4294967295);
var G__7206 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__7205,G__7206) : Math.imul.call(null,G__7205,G__7206));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__7209 = a;
var G__7210 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__7209,G__7210) : Math.imul.call(null,G__7209,G__7210));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = ((3432918353) | (0));
cljs.core.m3_C2 = ((461845907) | (0));
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul((k1 | (0)),cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return ((cljs.core.imul(cljs.core.int_rotate_left(((h1 | (0)) ^ (k1 | (0))),(13)),(5)) + ((3864292196) | (0))) | (0));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = (h1 | (0));
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,((2246822507) | (0)));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,((3266489909) | (0)));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__7211 = (i + (2));
var G__7212 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__7211;
h1 = G__7212;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj7214 = {};
return obj7214;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__7215 = (i + (1));
var G__7216 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__7215;
hash = G__7216;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj7220 = {};
return obj7220;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__7223 = o;
if(G__7223){
var bit__4600__auto__ = (G__7223.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__4600__auto__) || (G__7223.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__7224 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__7224) : Math.floor.call(null,G__7224));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3914__auto__ = cljs.core.not(a.ns);
if(and__3914__auto__){
return b.ns;
} else {
return and__3914__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__7231 = a.ns;
var G__7232 = b.ns;
return goog.array.defaultCompare(G__7231,G__7232);
})();
if(((0) === nsc)){
var G__7233 = a.name;
var G__7234 = b.name;
return goog.array.defaultCompare(G__7233,G__7234);
} else {
return nsc;
}
}
} else {
var G__7235 = a.name;
var G__7236 = b.name;
return goog.array.defaultCompare(G__7235,G__7236);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__4347__auto__ = self__._hash;
if(!((h__4347__auto__ == null))){
return h__4347__auto__;
} else {
var h__4347__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__4347__auto____$1;

return h__4347__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__7238 = null;
var G__7238__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__7238__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__7238 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__7238__2.call(this,self__,coll);
case 3:
return G__7238__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7238.cljs$core$IFn$_invoke$arity$2 = G__7238__2;
G__7238.cljs$core$IFn$_invoke$arity$3 = G__7238__3;
return G__7238;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args7237){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args7237)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__4513__auto__,writer__4514__auto__,opt__4515__auto__){
return cljs.core._write(writer__4514__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__7286 = null;
var G__7286__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__7286__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__7286__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__7286__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__7286__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__7286__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__7286__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__7286__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__7286__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__7286__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__7286__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__7286__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__7286__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__7286__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__7286__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__7286__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__7286__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__7286__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__7286__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__7286__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__7286__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__7286__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7242 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__7243 = a;
var G__7244 = b;
var G__7245 = c;
var G__7246 = d;
var G__7247 = e;
var G__7248 = f;
var G__7249 = g;
var G__7250 = h;
var G__7251 = i;
var G__7252 = j;
var G__7253 = k;
var G__7254 = l;
var G__7255 = m;
var G__7256 = n;
var G__7257 = o;
var G__7258 = p;
var G__7259 = q;
var G__7260 = r;
var G__7261 = s;
var G__7262 = t;
var G__7263 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__7242,G__7243,G__7244,G__7245,G__7246,G__7247,G__7248,G__7249,G__7250,G__7251,G__7252,G__7253,G__7254,G__7255,G__7256,G__7257,G__7258,G__7259,G__7260,G__7261,G__7262,G__7263) : cljs.core.apply.call(null,G__7242,G__7243,G__7244,G__7245,G__7246,G__7247,G__7248,G__7249,G__7250,G__7251,G__7252,G__7253,G__7254,G__7255,G__7256,G__7257,G__7258,G__7259,G__7260,G__7261,G__7262,G__7263));
});
G__7286 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__7286__1.call(this,self__);
case 2:
return G__7286__2.call(this,self__,a);
case 3:
return G__7286__3.call(this,self__,a,b);
case 4:
return G__7286__4.call(this,self__,a,b,c);
case 5:
return G__7286__5.call(this,self__,a,b,c,d);
case 6:
return G__7286__6.call(this,self__,a,b,c,d,e);
case 7:
return G__7286__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__7286__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__7286__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__7286__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__7286__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__7286__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__7286__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__7286__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__7286__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__7286__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__7286__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__7286__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__7286__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__7286__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__7286__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__7286__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7286.cljs$core$IFn$_invoke$arity$1 = G__7286__1;
G__7286.cljs$core$IFn$_invoke$arity$2 = G__7286__2;
G__7286.cljs$core$IFn$_invoke$arity$3 = G__7286__3;
G__7286.cljs$core$IFn$_invoke$arity$4 = G__7286__4;
G__7286.cljs$core$IFn$_invoke$arity$5 = G__7286__5;
G__7286.cljs$core$IFn$_invoke$arity$6 = G__7286__6;
G__7286.cljs$core$IFn$_invoke$arity$7 = G__7286__7;
G__7286.cljs$core$IFn$_invoke$arity$8 = G__7286__8;
G__7286.cljs$core$IFn$_invoke$arity$9 = G__7286__9;
G__7286.cljs$core$IFn$_invoke$arity$10 = G__7286__10;
G__7286.cljs$core$IFn$_invoke$arity$11 = G__7286__11;
G__7286.cljs$core$IFn$_invoke$arity$12 = G__7286__12;
G__7286.cljs$core$IFn$_invoke$arity$13 = G__7286__13;
G__7286.cljs$core$IFn$_invoke$arity$14 = G__7286__14;
G__7286.cljs$core$IFn$_invoke$arity$15 = G__7286__15;
G__7286.cljs$core$IFn$_invoke$arity$16 = G__7286__16;
G__7286.cljs$core$IFn$_invoke$arity$17 = G__7286__17;
G__7286.cljs$core$IFn$_invoke$arity$18 = G__7286__18;
G__7286.cljs$core$IFn$_invoke$arity$19 = G__7286__19;
G__7286.cljs$core$IFn$_invoke$arity$20 = G__7286__20;
G__7286.cljs$core$IFn$_invoke$arity$21 = G__7286__21;
G__7286.cljs$core$IFn$_invoke$arity$22 = G__7286__22;
return G__7286;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args7241){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args7241)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__7264 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__7265 = a;
var G__7266 = b;
var G__7267 = c;
var G__7268 = d;
var G__7269 = e;
var G__7270 = f;
var G__7271 = g;
var G__7272 = h;
var G__7273 = i;
var G__7274 = j;
var G__7275 = k;
var G__7276 = l;
var G__7277 = m;
var G__7278 = n;
var G__7279 = o;
var G__7280 = p;
var G__7281 = q;
var G__7282 = r;
var G__7283 = s;
var G__7284 = t;
var G__7285 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__7264,G__7265,G__7266,G__7267,G__7268,G__7269,G__7270,G__7271,G__7272,G__7273,G__7274,G__7275,G__7276,G__7277,G__7278,G__7279,G__7280,G__7281,G__7282,G__7283,G__7284,G__7285) : cljs.core.apply.call(null,G__7264,G__7265,G__7266,G__7267,G__7268,G__7269,G__7270,G__7271,G__7272,G__7273,G__7274,G__7275,G__7276,G__7277,G__7278,G__7279,G__7280,G__7281,G__7282,G__7283,G__7284,G__7285));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__4513__auto__,writer__4514__auto__,opt__4515__auto__){
return cljs.core._write(writer__4514__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__7288 = x;
if(G__7288){
var bit__4607__auto__ = null;
if(cljs.core.truth_((function (){var or__3926__auto__ = bit__4607__auto__;
if(cljs.core.truth_(or__3926__auto__)){
return or__3926__auto__;
} else {
return G__7288.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__7288.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__7288);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__7288);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__7290 = value;
if(G__7290){
var bit__4607__auto__ = (G__7290.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__4607__auto__) || (G__7290.cljs$core$ICloneable$)){
return true;
} else {
if((!G__7290.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__7290);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__7290);
}
});
/**
 * Returns a seq on the collection. If the collection is
 * empty, returns nil.  (seq nil) returns nil. seq also works on
 * Strings.
 */
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__7292 = coll;
if(G__7292){
var bit__4600__auto__ = (G__7292.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4600__auto__) || (G__7292.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
 * Returns the first item in the collection. Calls seq on its
 * argument. If coll is nil, returns nil.
 */
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__7294 = coll;
if(G__7294){
var bit__4600__auto__ = (G__7294.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4600__auto__) || (G__7294.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
 * Returns a possibly empty seq of the items after the first. Calls seq on its
 * argument.
 */
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__7296 = coll;
if(G__7296){
var bit__4600__auto__ = (G__7296.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4600__auto__) || (G__7296.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
 * Returns a seq of the items after the first. Calls seq on its
 * argument.  If there are no more items, returns nil
 */
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__7298 = coll;
if(G__7298){
var bit__4600__auto__ = (G__7298.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4600__auto__) || (G__7298.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
 * Equality. Returns true if x equals y, false if not. Compares
 * numbers and collections in a type-independent manner.  Clojure's immutable data
 * structures define -equiv (and thus =) as a value, not an identity,
 * comparison.
 * @param {...*} var_args
 */
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__7303__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__7304 = y;
var G__7305 = cljs.core.first(more);
var G__7306 = cljs.core.next(more);
x = G__7304;
y = G__7305;
more = G__7306;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__7303 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7307__i = 0, G__7307__a = new Array(arguments.length -  2);
while (G__7307__i < G__7307__a.length) {G__7307__a[G__7307__i] = arguments[G__7307__i + 2]; ++G__7307__i;}
  more = new cljs.core.IndexedSeq(G__7307__a,0);
} 
return G__7303__delegate.call(this,x,y,more);};
G__7303.cljs$lang$maxFixedArity = 2;
G__7303.cljs$lang$applyTo = (function (arglist__7308){
var x = cljs.core.first(arglist__7308);
arglist__7308 = cljs.core.next(arglist__7308);
var y = cljs.core.first(arglist__7308);
var more = cljs.core.rest(arglist__7308);
return G__7303__delegate(x,y,more);
});
G__7303.cljs$core$IFn$_invoke$arity$variadic = G__7303__delegate;
return G__7303;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__7309 = null;
if (arguments.length > 2) {
var G__7310__i = 0, G__7310__a = new Array(arguments.length -  2);
while (G__7310__i < G__7310__a.length) {G__7310__a[G__7310__i] = arguments[G__7310__i + 2]; ++G__7310__i;}
G__7309 = new cljs.core.IndexedSeq(G__7310__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7309);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__4513__auto__,writer__4514__auto__,opt__4515__auto__){
return cljs.core._write(writer__4514__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__7311 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__7311) : cljs.core.es6_iterator_seq.call(null,G__7311));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__4513__auto__,writer__4514__auto__,opt__4515__auto__){
return cljs.core._write(writer__4514__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
 * Mix final collection hash for ordered or unordered collections.
 * hash-basis is the combined collection hash, count is the number
 * of elements included in the basis. Note this is the hash code
 * consistent with =, different from .hashCode.
 * See http://clojure.org/data_structures#hash for full algorithms.
 */
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
 * Returns the hash code, consistent with =, for an external ordered
 * collection implementing Iterable.
 * See http://clojure.org/data_structures#hash for full algorithms.
 */
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__7312 = (n + (1));
var G__7313 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__7314 = cljs.core.next(coll__$1);
n = G__7312;
hash_code = G__7313;
coll__$1 = G__7314;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
 * Returns the hash code, consistent with =, for an external unordered
 * collection implementing Iterable. For maps, the iterator should
 * return map entries whose hash is computed as
 * (hash-ordered-coll [k v]).
 * See http://clojure.org/data_structures#hash for full algorithms.
 */
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__7315 = (n + (1));
var G__7316 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__7317 = cljs.core.next(coll__$1);
n = G__7315;
hash_code = G__7316;
coll__$1 = G__7317;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__7318 = o;
return goog.getUid(G__7318);
}));
/**
 * Returns a number one greater than num.
 */
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__4513__auto__,writer__4514__auto__,opt__4515__auto__){
return cljs.core._write(writer__4514__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
 * Wraps x in a way such that a reduce will terminate with the value x
 */
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
 * Returns true if x is the result of a call to reduced
 */
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
 * If x is already reduced?, returns it, else returns (reduced x)
 */
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
 * If x is reduced?, returns (deref x), else returns x
 */
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__7320 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__7320) : cljs.core.deref.call(null,G__7320));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
 * Accepts any collection which satisfies the ICount and IIndexed protocols and
 * reduces them without incurring seq initialization
 */
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__7327 = val;
var G__7328 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7327,G__7328) : f.call(null,G__7327,G__7328));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__7333 = nval;
var G__7334 = (n + (1));
val = G__7333;
n = G__7334;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__7329 = val__$1;
var G__7330 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7329,G__7330) : f.call(null,G__7329,G__7330));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__7335 = nval;
var G__7336 = (n + (1));
val__$1 = G__7335;
n = G__7336;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__7331 = val__$1;
var G__7332 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7331,G__7332) : f.call(null,G__7331,G__7332));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__7337 = nval;
var G__7338 = (n + (1));
val__$1 = G__7337;
n = G__7338;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__7345 = val;
var G__7346 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7345,G__7346) : f.call(null,G__7345,G__7346));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__7351 = nval;
var G__7352 = (n + (1));
val = G__7351;
n = G__7352;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__7347 = val__$1;
var G__7348 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7347,G__7348) : f.call(null,G__7347,G__7348));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__7353 = nval;
var G__7354 = (n + (1));
val__$1 = G__7353;
n = G__7354;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__7349 = val__$1;
var G__7350 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7349,G__7350) : f.call(null,G__7349,G__7350));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__7355 = nval;
var G__7356 = (n + (1));
val__$1 = G__7355;
n = G__7356;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
 * Returns true if coll implements count in constant time
 */
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__7358 = x;
if(G__7358){
var bit__4607__auto__ = (G__7358.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4607__auto__) || (G__7358.cljs$core$ICounted$)){
return true;
} else {
if((!G__7358.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__7358);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__7358);
}
});
/**
 * Returns true if coll implements nth in constant time
 */
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__7360 = x;
if(G__7360){
var bit__4607__auto__ = (G__7360.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4607__auto__) || (G__7360.cljs$core$IIndexed$)){
return true;
} else {
if((!G__7360.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__7360);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__7360);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__4513__auto__,writer__4514__auto__,opt__4515__auto__){
return cljs.core._write(writer__4514__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__7361 = coll__$1;
var G__7362 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__7361,G__7362) : cljs.core.equiv_sequential.call(null,G__7361,G__7362));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__7363 = o;
var G__7364 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__7363,G__7364) : cljs.core.cons.call(null,G__7363,G__7364));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__4513__auto__,writer__4514__auto__,opt__4515__auto__){
return cljs.core._write(writer__4514__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4904__auto__ = this;
return cljs.core.es6_iterator(this__4904__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__7367 = coll__$1;
var G__7368 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__7367,G__7368) : cljs.core.equiv_sequential.call(null,G__7367,G__7368));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__7369 = cljs.core.List.EMPTY;
var G__7370 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__7369,G__7370) : cljs.core.with_meta.call(null,G__7369,G__7370));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__7371 = f;
var G__7372 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__7371,G__7372) : cljs.core.seq_reduce.call(null,G__7371,G__7372));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__7373 = f;
var G__7374 = start;
var G__7375 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__7373,G__7374,G__7375) : cljs.core.seq_reduce.call(null,G__7373,G__7374,G__7375));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__7376 = o;
var G__7377 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__7376,G__7377) : cljs.core.cons.call(null,G__7376,G__7377));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__4513__auto__,writer__4514__auto__,opt__4515__auto__){
return cljs.core._write(writer__4514__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4904__auto__ = this;
return cljs.core.es6_iterator(this__4904__auto__);
}));
/**
 * Same as (first (next x))
 */
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
 * Same as (first (first x))
 */
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
 * Same as (next (first x))
 */
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
 * Same as (first (next x))
 */
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
 * Same as (next (next x))
 */
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
 * Return the last item in coll, in linear time
 */
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__7378 = sn;
s = G__7378;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
 * conj[oin]. Returns a new collection with the xs
 * 'added'. (conj nil item) returns (item).  The 'addition' may
 * happen at different 'places' depending on the concrete type.
 * @param {...*} var_args
 */
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__7383__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__7384 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__7385 = cljs.core.first(xs);
var G__7386 = cljs.core.next(xs);
coll = G__7384;
x = G__7385;
xs = G__7386;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__7383 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__7387__i = 0, G__7387__a = new Array(arguments.length -  2);
while (G__7387__i < G__7387__a.length) {G__7387__a[G__7387__i] = arguments[G__7387__i + 2]; ++G__7387__i;}
  xs = new cljs.core.IndexedSeq(G__7387__a,0);
} 
return G__7383__delegate.call(this,coll,x,xs);};
G__7383.cljs$lang$maxFixedArity = 2;
G__7383.cljs$lang$applyTo = (function (arglist__7388){
var coll = cljs.core.first(arglist__7388);
arglist__7388 = cljs.core.next(arglist__7388);
var x = cljs.core.first(arglist__7388);
var xs = cljs.core.rest(arglist__7388);
return G__7383__delegate(coll,x,xs);
});
G__7383.cljs$core$IFn$_invoke$arity$variadic = G__7383__delegate;
return G__7383;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__7389 = null;
if (arguments.length > 2) {
var G__7390__i = 0, G__7390__a = new Array(arguments.length -  2);
while (G__7390__i < G__7390__a.length) {G__7390__a[G__7390__i] = arguments[G__7390__i + 2]; ++G__7390__i;}
G__7389 = new cljs.core.IndexedSeq(G__7390__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__7389);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
 * Returns an empty collection of the same category as coll, or nil
 */
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__7391 = cljs.core.next(s);
var G__7392 = (acc + (1));
s = G__7391;
acc = G__7392;
continue;
}
break;
}
});
/**
 * Returns the number of items in the collection. (count nil) returns
 * 0.  Also works on strings, arrays, and Maps
 */
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__7394 = coll;
if(G__7394){
var bit__4600__auto__ = (G__7394.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4600__auto__) || (G__7394.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__7395 = cljs.core.next(coll);
var G__7396 = (n - (1));
coll = G__7395;
n = G__7396;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__7397 = cljs.core.next(coll);
var G__7398 = (n - (1));
var G__7399 = not_found;
coll = G__7397;
n = G__7398;
not_found = G__7399;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
 * Returns the value at the index. get returns nil if index out of
 * bounds, nth throws an exception unless not-found is supplied.  nth
 * also works for strings, arrays, regex Matchers and Lists, and,
 * in O(n) time, for sequences.
 */
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__7404 = coll;
if(G__7404){
var bit__4600__auto__ = (G__7404.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4600__auto__) || (G__7404.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__7405 = coll;
if(G__7405){
var bit__4607__auto__ = (G__7405.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4607__auto__) || (G__7405.cljs$core$ISeq$)){
return true;
} else {
if((!G__7405.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__7405);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__7405);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__7406 = coll;
if(G__7406){
var bit__4600__auto__ = (G__7406.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4600__auto__) || (G__7406.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__7407 = coll;
if(G__7407){
var bit__4607__auto__ = (G__7407.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4607__auto__) || (G__7407.cljs$core$ISeq$)){
return true;
} else {
if((!G__7407.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__7407);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__7407);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
 * Returns the nth rest of coll, coll when n is 0.
 */
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__7408 = (n__$1 - (1));
var G__7409 = cljs.core.rest(xs);
n__$1 = G__7408;
xs = G__7409;
continue;
} else {
return xs;
}
break;
}
});
/**
 * Returns the value mapped to key, not-found or nil if key not present.
 */
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__7412 = o;
if(G__7412){
var bit__4600__auto__ = (G__7412.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4600__auto__) || (G__7412.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__7413 = o;
if(G__7413){
var bit__4600__auto__ = (G__7413.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4600__auto__) || (G__7413.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
 * assoc[iate]. When applied to a map, returns a new map of the
 * same (hashed/sorted) type, that contains the mapping of key(s) to
 * val(s). When applied to a vector, returns a new vector that
 * contains val at index.
 * @param {...*} var_args
 */
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__7417__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__7418 = ret;
var G__7419 = cljs.core.first(kvs);
var G__7420 = cljs.core.second(kvs);
var G__7421 = cljs.core.nnext(kvs);
coll = G__7418;
k = G__7419;
v = G__7420;
kvs = G__7421;
continue;
} else {
return ret;
}
break;
}
};
var G__7417 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__7422__i = 0, G__7422__a = new Array(arguments.length -  3);
while (G__7422__i < G__7422__a.length) {G__7422__a[G__7422__i] = arguments[G__7422__i + 3]; ++G__7422__i;}
  kvs = new cljs.core.IndexedSeq(G__7422__a,0);
} 
return G__7417__delegate.call(this,coll,k,v,kvs);};
G__7417.cljs$lang$maxFixedArity = 3;
G__7417.cljs$lang$applyTo = (function (arglist__7423){
var coll = cljs.core.first(arglist__7423);
arglist__7423 = cljs.core.next(arglist__7423);
var k = cljs.core.first(arglist__7423);
arglist__7423 = cljs.core.next(arglist__7423);
var v = cljs.core.first(arglist__7423);
var kvs = cljs.core.rest(arglist__7423);
return G__7417__delegate(coll,k,v,kvs);
});
G__7417.cljs$core$IFn$_invoke$arity$variadic = G__7417__delegate;
return G__7417;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__7424 = null;
if (arguments.length > 3) {
var G__7425__i = 0, G__7425__a = new Array(arguments.length -  3);
while (G__7425__i < G__7425__a.length) {G__7425__a[G__7425__i] = arguments[G__7425__i + 3]; ++G__7425__i;}
G__7424 = new cljs.core.IndexedSeq(G__7425__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__7424);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
 * dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
 * that does not contain a mapping for key(s).
 * @param {...*} var_args
 */
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__7428__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__7429 = ret;
var G__7430 = cljs.core.first(ks);
var G__7431 = cljs.core.next(ks);
coll = G__7429;
k = G__7430;
ks = G__7431;
continue;
} else {
return ret;
}
}
break;
}
};
var G__7428 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__7432__i = 0, G__7432__a = new Array(arguments.length -  2);
while (G__7432__i < G__7432__a.length) {G__7432__a[G__7432__i] = arguments[G__7432__i + 2]; ++G__7432__i;}
  ks = new cljs.core.IndexedSeq(G__7432__a,0);
} 
return G__7428__delegate.call(this,coll,k,ks);};
G__7428.cljs$lang$maxFixedArity = 2;
G__7428.cljs$lang$applyTo = (function (arglist__7433){
var coll = cljs.core.first(arglist__7433);
arglist__7433 = cljs.core.next(arglist__7433);
var k = cljs.core.first(arglist__7433);
var ks = cljs.core.rest(arglist__7433);
return G__7428__delegate(coll,k,ks);
});
G__7428.cljs$core$IFn$_invoke$arity$variadic = G__7428__delegate;
return G__7428;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__7434 = null;
if (arguments.length > 2) {
var G__7435__i = 0, G__7435__a = new Array(arguments.length -  2);
while (G__7435__i < G__7435__a.length) {G__7435__a[G__7435__i] = arguments[G__7435__i + 2]; ++G__7435__i;}
G__7434 = new cljs.core.IndexedSeq(G__7435__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__7434);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__3926__auto__ = (function (){var G__7440 = f;
return goog.isFunction(G__7440);
})();
if(cljs.core.truth_(or__3926__auto__)){
return or__3926__auto__;
} else {
var G__7441 = f;
if(G__7441){
var bit__4607__auto__ = null;
if(cljs.core.truth_((function (){var or__3926__auto____$1 = bit__4607__auto__;
if(cljs.core.truth_(or__3926__auto____$1)){
return or__3926__auto____$1;
} else {
return G__7441.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__7441.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__7441);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__7441);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__7907 = null;
var G__7907__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__7907__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7443 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__7443) : self__.afn.call(null,G__7443));
});
var G__7907__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7444 = a;
var G__7445 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__7444,G__7445) : self__.afn.call(null,G__7444,G__7445));
});
var G__7907__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7446 = a;
var G__7447 = b;
var G__7448 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__7446,G__7447,G__7448) : self__.afn.call(null,G__7446,G__7447,G__7448));
});
var G__7907__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7449 = a;
var G__7450 = b;
var G__7451 = c;
var G__7452 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__7449,G__7450,G__7451,G__7452) : self__.afn.call(null,G__7449,G__7450,G__7451,G__7452));
});
var G__7907__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7453 = a;
var G__7454 = b;
var G__7455 = c;
var G__7456 = d;
var G__7457 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__7453,G__7454,G__7455,G__7456,G__7457) : self__.afn.call(null,G__7453,G__7454,G__7455,G__7456,G__7457));
});
var G__7907__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7458 = a;
var G__7459 = b;
var G__7460 = c;
var G__7461 = d;
var G__7462 = e;
var G__7463 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__7458,G__7459,G__7460,G__7461,G__7462,G__7463) : self__.afn.call(null,G__7458,G__7459,G__7460,G__7461,G__7462,G__7463));
});
var G__7907__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7464 = a;
var G__7465 = b;
var G__7466 = c;
var G__7467 = d;
var G__7468 = e;
var G__7469 = f;
var G__7470 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__7464,G__7465,G__7466,G__7467,G__7468,G__7469,G__7470) : self__.afn.call(null,G__7464,G__7465,G__7466,G__7467,G__7468,G__7469,G__7470));
});
var G__7907__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7471 = a;
var G__7472 = b;
var G__7473 = c;
var G__7474 = d;
var G__7475 = e;
var G__7476 = f;
var G__7477 = g;
var G__7478 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__7471,G__7472,G__7473,G__7474,G__7475,G__7476,G__7477,G__7478) : self__.afn.call(null,G__7471,G__7472,G__7473,G__7474,G__7475,G__7476,G__7477,G__7478));
});
var G__7907__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7479 = a;
var G__7480 = b;
var G__7481 = c;
var G__7482 = d;
var G__7483 = e;
var G__7484 = f;
var G__7485 = g;
var G__7486 = h;
var G__7487 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__7479,G__7480,G__7481,G__7482,G__7483,G__7484,G__7485,G__7486,G__7487) : self__.afn.call(null,G__7479,G__7480,G__7481,G__7482,G__7483,G__7484,G__7485,G__7486,G__7487));
});
var G__7907__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7488 = a;
var G__7489 = b;
var G__7490 = c;
var G__7491 = d;
var G__7492 = e;
var G__7493 = f;
var G__7494 = g;
var G__7495 = h;
var G__7496 = i;
var G__7497 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__7488,G__7489,G__7490,G__7491,G__7492,G__7493,G__7494,G__7495,G__7496,G__7497) : self__.afn.call(null,G__7488,G__7489,G__7490,G__7491,G__7492,G__7493,G__7494,G__7495,G__7496,G__7497));
});
var G__7907__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7498 = a;
var G__7499 = b;
var G__7500 = c;
var G__7501 = d;
var G__7502 = e;
var G__7503 = f;
var G__7504 = g;
var G__7505 = h;
var G__7506 = i;
var G__7507 = j;
var G__7508 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__7498,G__7499,G__7500,G__7501,G__7502,G__7503,G__7504,G__7505,G__7506,G__7507,G__7508) : self__.afn.call(null,G__7498,G__7499,G__7500,G__7501,G__7502,G__7503,G__7504,G__7505,G__7506,G__7507,G__7508));
});
var G__7907__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7509 = a;
var G__7510 = b;
var G__7511 = c;
var G__7512 = d;
var G__7513 = e;
var G__7514 = f;
var G__7515 = g;
var G__7516 = h;
var G__7517 = i;
var G__7518 = j;
var G__7519 = k;
var G__7520 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__7509,G__7510,G__7511,G__7512,G__7513,G__7514,G__7515,G__7516,G__7517,G__7518,G__7519,G__7520) : self__.afn.call(null,G__7509,G__7510,G__7511,G__7512,G__7513,G__7514,G__7515,G__7516,G__7517,G__7518,G__7519,G__7520));
});
var G__7907__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7521 = a;
var G__7522 = b;
var G__7523 = c;
var G__7524 = d;
var G__7525 = e;
var G__7526 = f;
var G__7527 = g;
var G__7528 = h;
var G__7529 = i;
var G__7530 = j;
var G__7531 = k;
var G__7532 = l;
var G__7533 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__7521,G__7522,G__7523,G__7524,G__7525,G__7526,G__7527,G__7528,G__7529,G__7530,G__7531,G__7532,G__7533) : self__.afn.call(null,G__7521,G__7522,G__7523,G__7524,G__7525,G__7526,G__7527,G__7528,G__7529,G__7530,G__7531,G__7532,G__7533));
});
var G__7907__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7534 = a;
var G__7535 = b;
var G__7536 = c;
var G__7537 = d;
var G__7538 = e;
var G__7539 = f;
var G__7540 = g;
var G__7541 = h;
var G__7542 = i;
var G__7543 = j;
var G__7544 = k;
var G__7545 = l;
var G__7546 = m;
var G__7547 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__7534,G__7535,G__7536,G__7537,G__7538,G__7539,G__7540,G__7541,G__7542,G__7543,G__7544,G__7545,G__7546,G__7547) : self__.afn.call(null,G__7534,G__7535,G__7536,G__7537,G__7538,G__7539,G__7540,G__7541,G__7542,G__7543,G__7544,G__7545,G__7546,G__7547));
});
var G__7907__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7548 = a;
var G__7549 = b;
var G__7550 = c;
var G__7551 = d;
var G__7552 = e;
var G__7553 = f;
var G__7554 = g;
var G__7555 = h;
var G__7556 = i;
var G__7557 = j;
var G__7558 = k;
var G__7559 = l;
var G__7560 = m;
var G__7561 = n;
var G__7562 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__7548,G__7549,G__7550,G__7551,G__7552,G__7553,G__7554,G__7555,G__7556,G__7557,G__7558,G__7559,G__7560,G__7561,G__7562) : self__.afn.call(null,G__7548,G__7549,G__7550,G__7551,G__7552,G__7553,G__7554,G__7555,G__7556,G__7557,G__7558,G__7559,G__7560,G__7561,G__7562));
});
var G__7907__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7563 = a;
var G__7564 = b;
var G__7565 = c;
var G__7566 = d;
var G__7567 = e;
var G__7568 = f;
var G__7569 = g;
var G__7570 = h;
var G__7571 = i;
var G__7572 = j;
var G__7573 = k;
var G__7574 = l;
var G__7575 = m;
var G__7576 = n;
var G__7577 = o;
var G__7578 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__7563,G__7564,G__7565,G__7566,G__7567,G__7568,G__7569,G__7570,G__7571,G__7572,G__7573,G__7574,G__7575,G__7576,G__7577,G__7578) : self__.afn.call(null,G__7563,G__7564,G__7565,G__7566,G__7567,G__7568,G__7569,G__7570,G__7571,G__7572,G__7573,G__7574,G__7575,G__7576,G__7577,G__7578));
});
var G__7907__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7579 = a;
var G__7580 = b;
var G__7581 = c;
var G__7582 = d;
var G__7583 = e;
var G__7584 = f;
var G__7585 = g;
var G__7586 = h;
var G__7587 = i;
var G__7588 = j;
var G__7589 = k;
var G__7590 = l;
var G__7591 = m;
var G__7592 = n;
var G__7593 = o;
var G__7594 = p;
var G__7595 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__7579,G__7580,G__7581,G__7582,G__7583,G__7584,G__7585,G__7586,G__7587,G__7588,G__7589,G__7590,G__7591,G__7592,G__7593,G__7594,G__7595) : self__.afn.call(null,G__7579,G__7580,G__7581,G__7582,G__7583,G__7584,G__7585,G__7586,G__7587,G__7588,G__7589,G__7590,G__7591,G__7592,G__7593,G__7594,G__7595));
});
var G__7907__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7596 = a;
var G__7597 = b;
var G__7598 = c;
var G__7599 = d;
var G__7600 = e;
var G__7601 = f;
var G__7602 = g;
var G__7603 = h;
var G__7604 = i;
var G__7605 = j;
var G__7606 = k;
var G__7607 = l;
var G__7608 = m;
var G__7609 = n;
var G__7610 = o;
var G__7611 = p;
var G__7612 = q;
var G__7613 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__7596,G__7597,G__7598,G__7599,G__7600,G__7601,G__7602,G__7603,G__7604,G__7605,G__7606,G__7607,G__7608,G__7609,G__7610,G__7611,G__7612,G__7613) : self__.afn.call(null,G__7596,G__7597,G__7598,G__7599,G__7600,G__7601,G__7602,G__7603,G__7604,G__7605,G__7606,G__7607,G__7608,G__7609,G__7610,G__7611,G__7612,G__7613));
});
var G__7907__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7614 = a;
var G__7615 = b;
var G__7616 = c;
var G__7617 = d;
var G__7618 = e;
var G__7619 = f;
var G__7620 = g;
var G__7621 = h;
var G__7622 = i;
var G__7623 = j;
var G__7624 = k;
var G__7625 = l;
var G__7626 = m;
var G__7627 = n;
var G__7628 = o;
var G__7629 = p;
var G__7630 = q;
var G__7631 = r;
var G__7632 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__7614,G__7615,G__7616,G__7617,G__7618,G__7619,G__7620,G__7621,G__7622,G__7623,G__7624,G__7625,G__7626,G__7627,G__7628,G__7629,G__7630,G__7631,G__7632) : self__.afn.call(null,G__7614,G__7615,G__7616,G__7617,G__7618,G__7619,G__7620,G__7621,G__7622,G__7623,G__7624,G__7625,G__7626,G__7627,G__7628,G__7629,G__7630,G__7631,G__7632));
});
var G__7907__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7633 = a;
var G__7634 = b;
var G__7635 = c;
var G__7636 = d;
var G__7637 = e;
var G__7638 = f;
var G__7639 = g;
var G__7640 = h;
var G__7641 = i;
var G__7642 = j;
var G__7643 = k;
var G__7644 = l;
var G__7645 = m;
var G__7646 = n;
var G__7647 = o;
var G__7648 = p;
var G__7649 = q;
var G__7650 = r;
var G__7651 = s;
var G__7652 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__7633,G__7634,G__7635,G__7636,G__7637,G__7638,G__7639,G__7640,G__7641,G__7642,G__7643,G__7644,G__7645,G__7646,G__7647,G__7648,G__7649,G__7650,G__7651,G__7652) : self__.afn.call(null,G__7633,G__7634,G__7635,G__7636,G__7637,G__7638,G__7639,G__7640,G__7641,G__7642,G__7643,G__7644,G__7645,G__7646,G__7647,G__7648,G__7649,G__7650,G__7651,G__7652));
});
var G__7907__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7653 = self__.afn;
var G__7654 = a;
var G__7655 = b;
var G__7656 = c;
var G__7657 = d;
var G__7658 = e;
var G__7659 = f;
var G__7660 = g;
var G__7661 = h;
var G__7662 = i;
var G__7663 = j;
var G__7664 = k;
var G__7665 = l;
var G__7666 = m;
var G__7667 = n;
var G__7668 = o;
var G__7669 = p;
var G__7670 = q;
var G__7671 = r;
var G__7672 = s;
var G__7673 = t;
var G__7674 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__7653,G__7654,G__7655,G__7656,G__7657,G__7658,G__7659,G__7660,G__7661,G__7662,G__7663,G__7664,G__7665,G__7666,G__7667,G__7668,G__7669,G__7670,G__7671,G__7672,G__7673,G__7674) : cljs.core.apply.call(null,G__7653,G__7654,G__7655,G__7656,G__7657,G__7658,G__7659,G__7660,G__7661,G__7662,G__7663,G__7664,G__7665,G__7666,G__7667,G__7668,G__7669,G__7670,G__7671,G__7672,G__7673,G__7674));
});
G__7907 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__7907__1.call(this,self__);
case 2:
return G__7907__2.call(this,self__,a);
case 3:
return G__7907__3.call(this,self__,a,b);
case 4:
return G__7907__4.call(this,self__,a,b,c);
case 5:
return G__7907__5.call(this,self__,a,b,c,d);
case 6:
return G__7907__6.call(this,self__,a,b,c,d,e);
case 7:
return G__7907__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__7907__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__7907__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__7907__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__7907__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__7907__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__7907__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__7907__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__7907__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__7907__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__7907__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__7907__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__7907__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__7907__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__7907__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__7907__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7907.cljs$core$IFn$_invoke$arity$1 = G__7907__1;
G__7907.cljs$core$IFn$_invoke$arity$2 = G__7907__2;
G__7907.cljs$core$IFn$_invoke$arity$3 = G__7907__3;
G__7907.cljs$core$IFn$_invoke$arity$4 = G__7907__4;
G__7907.cljs$core$IFn$_invoke$arity$5 = G__7907__5;
G__7907.cljs$core$IFn$_invoke$arity$6 = G__7907__6;
G__7907.cljs$core$IFn$_invoke$arity$7 = G__7907__7;
G__7907.cljs$core$IFn$_invoke$arity$8 = G__7907__8;
G__7907.cljs$core$IFn$_invoke$arity$9 = G__7907__9;
G__7907.cljs$core$IFn$_invoke$arity$10 = G__7907__10;
G__7907.cljs$core$IFn$_invoke$arity$11 = G__7907__11;
G__7907.cljs$core$IFn$_invoke$arity$12 = G__7907__12;
G__7907.cljs$core$IFn$_invoke$arity$13 = G__7907__13;
G__7907.cljs$core$IFn$_invoke$arity$14 = G__7907__14;
G__7907.cljs$core$IFn$_invoke$arity$15 = G__7907__15;
G__7907.cljs$core$IFn$_invoke$arity$16 = G__7907__16;
G__7907.cljs$core$IFn$_invoke$arity$17 = G__7907__17;
G__7907.cljs$core$IFn$_invoke$arity$18 = G__7907__18;
G__7907.cljs$core$IFn$_invoke$arity$19 = G__7907__19;
G__7907.cljs$core$IFn$_invoke$arity$20 = G__7907__20;
G__7907.cljs$core$IFn$_invoke$arity$21 = G__7907__21;
G__7907.cljs$core$IFn$_invoke$arity$22 = G__7907__22;
return G__7907;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args7442){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args7442)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__7675 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__7675) : self__.afn.call(null,G__7675));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__7676 = a;
var G__7677 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__7676,G__7677) : self__.afn.call(null,G__7676,G__7677));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__7678 = a;
var G__7679 = b;
var G__7680 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__7678,G__7679,G__7680) : self__.afn.call(null,G__7678,G__7679,G__7680));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__7681 = a;
var G__7682 = b;
var G__7683 = c;
var G__7684 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__7681,G__7682,G__7683,G__7684) : self__.afn.call(null,G__7681,G__7682,G__7683,G__7684));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__7685 = a;
var G__7686 = b;
var G__7687 = c;
var G__7688 = d;
var G__7689 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__7685,G__7686,G__7687,G__7688,G__7689) : self__.afn.call(null,G__7685,G__7686,G__7687,G__7688,G__7689));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__7690 = a;
var G__7691 = b;
var G__7692 = c;
var G__7693 = d;
var G__7694 = e;
var G__7695 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__7690,G__7691,G__7692,G__7693,G__7694,G__7695) : self__.afn.call(null,G__7690,G__7691,G__7692,G__7693,G__7694,G__7695));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__7696 = a;
var G__7697 = b;
var G__7698 = c;
var G__7699 = d;
var G__7700 = e;
var G__7701 = f;
var G__7702 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__7696,G__7697,G__7698,G__7699,G__7700,G__7701,G__7702) : self__.afn.call(null,G__7696,G__7697,G__7698,G__7699,G__7700,G__7701,G__7702));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__7703 = a;
var G__7704 = b;
var G__7705 = c;
var G__7706 = d;
var G__7707 = e;
var G__7708 = f;
var G__7709 = g;
var G__7710 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__7703,G__7704,G__7705,G__7706,G__7707,G__7708,G__7709,G__7710) : self__.afn.call(null,G__7703,G__7704,G__7705,G__7706,G__7707,G__7708,G__7709,G__7710));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__7711 = a;
var G__7712 = b;
var G__7713 = c;
var G__7714 = d;
var G__7715 = e;
var G__7716 = f;
var G__7717 = g;
var G__7718 = h;
var G__7719 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__7711,G__7712,G__7713,G__7714,G__7715,G__7716,G__7717,G__7718,G__7719) : self__.afn.call(null,G__7711,G__7712,G__7713,G__7714,G__7715,G__7716,G__7717,G__7718,G__7719));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__7720 = a;
var G__7721 = b;
var G__7722 = c;
var G__7723 = d;
var G__7724 = e;
var G__7725 = f;
var G__7726 = g;
var G__7727 = h;
var G__7728 = i;
var G__7729 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__7720,G__7721,G__7722,G__7723,G__7724,G__7725,G__7726,G__7727,G__7728,G__7729) : self__.afn.call(null,G__7720,G__7721,G__7722,G__7723,G__7724,G__7725,G__7726,G__7727,G__7728,G__7729));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__7730 = a;
var G__7731 = b;
var G__7732 = c;
var G__7733 = d;
var G__7734 = e;
var G__7735 = f;
var G__7736 = g;
var G__7737 = h;
var G__7738 = i;
var G__7739 = j;
var G__7740 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__7730,G__7731,G__7732,G__7733,G__7734,G__7735,G__7736,G__7737,G__7738,G__7739,G__7740) : self__.afn.call(null,G__7730,G__7731,G__7732,G__7733,G__7734,G__7735,G__7736,G__7737,G__7738,G__7739,G__7740));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__7741 = a;
var G__7742 = b;
var G__7743 = c;
var G__7744 = d;
var G__7745 = e;
var G__7746 = f;
var G__7747 = g;
var G__7748 = h;
var G__7749 = i;
var G__7750 = j;
var G__7751 = k;
var G__7752 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__7741,G__7742,G__7743,G__7744,G__7745,G__7746,G__7747,G__7748,G__7749,G__7750,G__7751,G__7752) : self__.afn.call(null,G__7741,G__7742,G__7743,G__7744,G__7745,G__7746,G__7747,G__7748,G__7749,G__7750,G__7751,G__7752));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__7753 = a;
var G__7754 = b;
var G__7755 = c;
var G__7756 = d;
var G__7757 = e;
var G__7758 = f;
var G__7759 = g;
var G__7760 = h;
var G__7761 = i;
var G__7762 = j;
var G__7763 = k;
var G__7764 = l;
var G__7765 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__7753,G__7754,G__7755,G__7756,G__7757,G__7758,G__7759,G__7760,G__7761,G__7762,G__7763,G__7764,G__7765) : self__.afn.call(null,G__7753,G__7754,G__7755,G__7756,G__7757,G__7758,G__7759,G__7760,G__7761,G__7762,G__7763,G__7764,G__7765));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__7766 = a;
var G__7767 = b;
var G__7768 = c;
var G__7769 = d;
var G__7770 = e;
var G__7771 = f;
var G__7772 = g;
var G__7773 = h;
var G__7774 = i;
var G__7775 = j;
var G__7776 = k;
var G__7777 = l;
var G__7778 = m;
var G__7779 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__7766,G__7767,G__7768,G__7769,G__7770,G__7771,G__7772,G__7773,G__7774,G__7775,G__7776,G__7777,G__7778,G__7779) : self__.afn.call(null,G__7766,G__7767,G__7768,G__7769,G__7770,G__7771,G__7772,G__7773,G__7774,G__7775,G__7776,G__7777,G__7778,G__7779));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__7780 = a;
var G__7781 = b;
var G__7782 = c;
var G__7783 = d;
var G__7784 = e;
var G__7785 = f;
var G__7786 = g;
var G__7787 = h;
var G__7788 = i;
var G__7789 = j;
var G__7790 = k;
var G__7791 = l;
var G__7792 = m;
var G__7793 = n;
var G__7794 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__7780,G__7781,G__7782,G__7783,G__7784,G__7785,G__7786,G__7787,G__7788,G__7789,G__7790,G__7791,G__7792,G__7793,G__7794) : self__.afn.call(null,G__7780,G__7781,G__7782,G__7783,G__7784,G__7785,G__7786,G__7787,G__7788,G__7789,G__7790,G__7791,G__7792,G__7793,G__7794));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__7795 = a;
var G__7796 = b;
var G__7797 = c;
var G__7798 = d;
var G__7799 = e;
var G__7800 = f;
var G__7801 = g;
var G__7802 = h;
var G__7803 = i;
var G__7804 = j;
var G__7805 = k;
var G__7806 = l;
var G__7807 = m;
var G__7808 = n;
var G__7809 = o;
var G__7810 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__7795,G__7796,G__7797,G__7798,G__7799,G__7800,G__7801,G__7802,G__7803,G__7804,G__7805,G__7806,G__7807,G__7808,G__7809,G__7810) : self__.afn.call(null,G__7795,G__7796,G__7797,G__7798,G__7799,G__7800,G__7801,G__7802,G__7803,G__7804,G__7805,G__7806,G__7807,G__7808,G__7809,G__7810));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__7811 = a;
var G__7812 = b;
var G__7813 = c;
var G__7814 = d;
var G__7815 = e;
var G__7816 = f;
var G__7817 = g;
var G__7818 = h;
var G__7819 = i;
var G__7820 = j;
var G__7821 = k;
var G__7822 = l;
var G__7823 = m;
var G__7824 = n;
var G__7825 = o;
var G__7826 = p;
var G__7827 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__7811,G__7812,G__7813,G__7814,G__7815,G__7816,G__7817,G__7818,G__7819,G__7820,G__7821,G__7822,G__7823,G__7824,G__7825,G__7826,G__7827) : self__.afn.call(null,G__7811,G__7812,G__7813,G__7814,G__7815,G__7816,G__7817,G__7818,G__7819,G__7820,G__7821,G__7822,G__7823,G__7824,G__7825,G__7826,G__7827));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__7828 = a;
var G__7829 = b;
var G__7830 = c;
var G__7831 = d;
var G__7832 = e;
var G__7833 = f;
var G__7834 = g;
var G__7835 = h;
var G__7836 = i;
var G__7837 = j;
var G__7838 = k;
var G__7839 = l;
var G__7840 = m;
var G__7841 = n;
var G__7842 = o;
var G__7843 = p;
var G__7844 = q;
var G__7845 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__7828,G__7829,G__7830,G__7831,G__7832,G__7833,G__7834,G__7835,G__7836,G__7837,G__7838,G__7839,G__7840,G__7841,G__7842,G__7843,G__7844,G__7845) : self__.afn.call(null,G__7828,G__7829,G__7830,G__7831,G__7832,G__7833,G__7834,G__7835,G__7836,G__7837,G__7838,G__7839,G__7840,G__7841,G__7842,G__7843,G__7844,G__7845));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__7846 = a;
var G__7847 = b;
var G__7848 = c;
var G__7849 = d;
var G__7850 = e;
var G__7851 = f;
var G__7852 = g;
var G__7853 = h;
var G__7854 = i;
var G__7855 = j;
var G__7856 = k;
var G__7857 = l;
var G__7858 = m;
var G__7859 = n;
var G__7860 = o;
var G__7861 = p;
var G__7862 = q;
var G__7863 = r;
var G__7864 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__7846,G__7847,G__7848,G__7849,G__7850,G__7851,G__7852,G__7853,G__7854,G__7855,G__7856,G__7857,G__7858,G__7859,G__7860,G__7861,G__7862,G__7863,G__7864) : self__.afn.call(null,G__7846,G__7847,G__7848,G__7849,G__7850,G__7851,G__7852,G__7853,G__7854,G__7855,G__7856,G__7857,G__7858,G__7859,G__7860,G__7861,G__7862,G__7863,G__7864));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__7865 = a;
var G__7866 = b;
var G__7867 = c;
var G__7868 = d;
var G__7869 = e;
var G__7870 = f;
var G__7871 = g;
var G__7872 = h;
var G__7873 = i;
var G__7874 = j;
var G__7875 = k;
var G__7876 = l;
var G__7877 = m;
var G__7878 = n;
var G__7879 = o;
var G__7880 = p;
var G__7881 = q;
var G__7882 = r;
var G__7883 = s;
var G__7884 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__7865,G__7866,G__7867,G__7868,G__7869,G__7870,G__7871,G__7872,G__7873,G__7874,G__7875,G__7876,G__7877,G__7878,G__7879,G__7880,G__7881,G__7882,G__7883,G__7884) : self__.afn.call(null,G__7865,G__7866,G__7867,G__7868,G__7869,G__7870,G__7871,G__7872,G__7873,G__7874,G__7875,G__7876,G__7877,G__7878,G__7879,G__7880,G__7881,G__7882,G__7883,G__7884));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__7885 = self__.afn;
var G__7886 = a;
var G__7887 = b;
var G__7888 = c;
var G__7889 = d;
var G__7890 = e;
var G__7891 = f;
var G__7892 = g;
var G__7893 = h;
var G__7894 = i;
var G__7895 = j;
var G__7896 = k;
var G__7897 = l;
var G__7898 = m;
var G__7899 = n;
var G__7900 = o;
var G__7901 = p;
var G__7902 = q;
var G__7903 = r;
var G__7904 = s;
var G__7905 = t;
var G__7906 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__7885,G__7886,G__7887,G__7888,G__7889,G__7890,G__7891,G__7892,G__7893,G__7894,G__7895,G__7896,G__7897,G__7898,G__7899,G__7900,G__7901,G__7902,G__7903,G__7904,G__7905,G__7906) : cljs.core.apply.call(null,G__7885,G__7886,G__7887,G__7888,G__7889,G__7890,G__7891,G__7892,G__7893,G__7894,G__7895,G__7896,G__7897,G__7898,G__7899,G__7900,G__7901,G__7902,G__7903,G__7904,G__7905,G__7906));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__4513__auto__,writer__4514__auto__,opt__4515__auto__){
return cljs.core._write(writer__4514__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
 * Returns an object of the same type and value as obj, with
 * map m as its metadata.
 */
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__7911 = o;
if(G__7911){
var bit__4607__auto__ = (G__7911.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__4607__auto__) || (G__7911.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__7911.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__7911);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__7911);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
 * Returns the metadata of obj, returns nil if there is no metadata.
 */
cljs.core.meta = (function meta(o){
if((function (){var and__3914__auto__ = !((o == null));
if(and__3914__auto__){
var G__7915 = o;
if(G__7915){
var bit__4607__auto__ = (G__7915.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4607__auto__) || (G__7915.cljs$core$IMeta$)){
return true;
} else {
if((!G__7915.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__7915);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__7915);
}
} else {
return and__3914__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
 * For a list or queue, same as first, for a vector, same as, but much
 * more efficient than, last. If the collection is empty, returns nil.
 */
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
 * For a list or queue, returns a new list/queue without the first
 * item, for a vector, returns a new vector without the last item.
 * Note - not the same as next/butlast.
 */
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
 * disj[oin]. Returns a new set of the same (hashed/sorted) type, that
 * does not contain key(s).
 * @param {...*} var_args
 */
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__7918__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__7919 = ret;
var G__7920 = cljs.core.first(ks);
var G__7921 = cljs.core.next(ks);
coll = G__7919;
k = G__7920;
ks = G__7921;
continue;
} else {
return ret;
}
}
break;
}
};
var G__7918 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__7922__i = 0, G__7922__a = new Array(arguments.length -  2);
while (G__7922__i < G__7922__a.length) {G__7922__a[G__7922__i] = arguments[G__7922__i + 2]; ++G__7922__i;}
  ks = new cljs.core.IndexedSeq(G__7922__a,0);
} 
return G__7918__delegate.call(this,coll,k,ks);};
G__7918.cljs$lang$maxFixedArity = 2;
G__7918.cljs$lang$applyTo = (function (arglist__7923){
var coll = cljs.core.first(arglist__7923);
arglist__7923 = cljs.core.next(arglist__7923);
var k = cljs.core.first(arglist__7923);
var ks = cljs.core.rest(arglist__7923);
return G__7918__delegate(coll,k,ks);
});
G__7918.cljs$core$IFn$_invoke$arity$variadic = G__7918__delegate;
return G__7918;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__7924 = null;
if (arguments.length > 2) {
var G__7925__i = 0, G__7925__a = new Array(arguments.length -  2);
while (G__7925__i < G__7925__a.length) {G__7925__a[G__7925__i] = arguments[G__7925__i + 2]; ++G__7925__i;}
G__7924 = new cljs.core.IndexedSeq(G__7925__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__7924);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
 * Returns true if coll has no items - same as (not (seq coll)).
 * Please use the idiom (seq x) rather than (not (empty? x))
 */
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
 * Returns true if x satisfies ICollection
 */
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__7927 = x;
if(G__7927){
var bit__4607__auto__ = (G__7927.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__4607__auto__) || (G__7927.cljs$core$ICollection$)){
return true;
} else {
if((!G__7927.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__7927);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__7927);
}
}
});
/**
 * Returns true if x satisfies ISet
 */
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__7929 = x;
if(G__7929){
var bit__4607__auto__ = (G__7929.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__4607__auto__) || (G__7929.cljs$core$ISet$)){
return true;
} else {
if((!G__7929.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__7929);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__7929);
}
}
});
/**
 * Returns true if coll implements Associative
 */
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__7931 = x;
if(G__7931){
var bit__4607__auto__ = (G__7931.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__4607__auto__) || (G__7931.cljs$core$IAssociative$)){
return true;
} else {
if((!G__7931.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__7931);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__7931);
}
});
/**
 * Returns true if coll satisfies ISequential
 */
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__7933 = x;
if(G__7933){
var bit__4607__auto__ = (G__7933.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__4607__auto__) || (G__7933.cljs$core$ISequential$)){
return true;
} else {
if((!G__7933.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__7933);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__7933);
}
});
/**
 * Returns true if coll satisfies ISorted
 */
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__7935 = x;
if(G__7935){
var bit__4607__auto__ = (G__7935.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__4607__auto__) || (G__7935.cljs$core$ISorted$)){
return true;
} else {
if((!G__7935.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__7935);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__7935);
}
});
/**
 * Returns true if coll satisfies IReduce
 */
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__7937 = x;
if(G__7937){
var bit__4607__auto__ = (G__7937.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4607__auto__) || (G__7937.cljs$core$IReduce$)){
return true;
} else {
if((!G__7937.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__7937);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__7937);
}
});
/**
 * Return true if x satisfies IMap
 */
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__7939 = x;
if(G__7939){
var bit__4607__auto__ = (G__7939.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4607__auto__) || (G__7939.cljs$core$IMap$)){
return true;
} else {
if((!G__7939.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__7939);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__7939);
}
}
});
/**
 * Return true if x satisfies IVector
 */
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__7941 = x;
if(G__7941){
var bit__4607__auto__ = (G__7941.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__4607__auto__) || (G__7941.cljs$core$IVector$)){
return true;
} else {
if((!G__7941.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__7941);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__7941);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__7943 = x;
if(G__7943){
var bit__4600__auto__ = (G__7943.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__4600__auto__) || (G__7943.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
 * @param {...*} var_args
 */
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj7949 = {};
return obj7949;
});
var js_obj__1 = (function() { 
var G__7952__delegate = function (keyvals){
var G__7950 = goog.object.create;
var G__7951 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__7950,G__7951) : cljs.core.apply.call(null,G__7950,G__7951));
};
var G__7952 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__7953__i = 0, G__7953__a = new Array(arguments.length -  0);
while (G__7953__i < G__7953__a.length) {G__7953__a[G__7953__i] = arguments[G__7953__i + 0]; ++G__7953__i;}
  keyvals = new cljs.core.IndexedSeq(G__7953__a,0);
} 
return G__7952__delegate.call(this,keyvals);};
G__7952.cljs$lang$maxFixedArity = 0;
G__7952.cljs$lang$applyTo = (function (arglist__7954){
var keyvals = cljs.core.seq(arglist__7954);
return G__7952__delegate(keyvals);
});
G__7952.cljs$core$IFn$_invoke$arity$variadic = G__7952__delegate;
return G__7952;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__7955 = null;
if (arguments.length > 0) {
var G__7956__i = 0, G__7956__a = new Array(arguments.length -  0);
while (G__7956__i < G__7956__a.length) {G__7956__a[G__7956__i] = arguments[G__7956__i + 0]; ++G__7956__i;}
G__7955 = new cljs.core.IndexedSeq(G__7956__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__7955);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__7959_7961 = obj;
var G__7960_7962 = ((function (G__7959_7961,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__7959_7961,keys))
;
goog.object.forEach(G__7959_7961,G__7960_7962);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__7963 = (i__$1 + (1));
var G__7964 = (j__$1 + (1));
var G__7965 = (len__$1 - (1));
i__$1 = G__7963;
j__$1 = G__7964;
len__$1 = G__7965;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__7966 = (i__$1 - (1));
var G__7967 = (j__$1 - (1));
var G__7968 = (len__$1 - (1));
i__$1 = G__7966;
j__$1 = G__7967;
len__$1 = G__7968;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj7970 = {};
return obj7970;
})();
/**
 * Returns true if x is the value false, false otherwise.
 */
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
 * Returns true if x is the value true, false otherwise.
 */
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
 * Return true if s satisfies ISeq
 */
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__7972 = s;
if(G__7972){
var bit__4607__auto__ = (G__7972.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4607__auto__) || (G__7972.cljs$core$ISeq$)){
return true;
} else {
if((!G__7972.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__7972);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__7972);
}
}
});
/**
 * Return true if s satisfies ISeqable
 */
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__7974 = s;
if(G__7974){
var bit__4607__auto__ = (G__7974.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4607__auto__) || (G__7974.cljs$core$ISeqable$)){
return true;
} else {
if((!G__7974.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__7974);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__7974);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__3926__auto__ = cljs.core.fn_QMARK_(f);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var G__7978 = f;
if(G__7978){
var bit__4607__auto__ = (G__7978.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__4607__auto__) || (G__7978.cljs$core$IFn$)){
return true;
} else {
if((!G__7978.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__7978);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__7978);
}
}
});
/**
 * Returns true if n is an integer.
 */
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__7991 = n;
return isNaN(G__7991);
})())) && (!((n === Infinity))) && (((function (){var G__7992 = n;
return parseFloat(G__7992);
})() === (function (){var G__7993 = n;
var G__7994 = (10);
return parseInt(G__7993,G__7994);
})()));
});
/**
 * Returns true if key is present in the given collection, otherwise
 * returns false.  Note that for numerically indexed collections like
 * vectors and arrays, this tests if the numeric key is within the
 * range of indexes. 'contains?' operates constant or logarithmic time;
 * it will not perform a linear search for a value.  See also 'some'.
 */
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
 * Returns the map entry for key, or nil if key not present.
 */
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
 * Returns true if no two of the arguments are =
 * @param {...*} var_args
 */
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__7995__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__7996 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__7997 = etc;
s = G__7996;
xs = G__7997;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__7995 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7998__i = 0, G__7998__a = new Array(arguments.length -  2);
while (G__7998__i < G__7998__a.length) {G__7998__a[G__7998__i] = arguments[G__7998__i + 2]; ++G__7998__i;}
  more = new cljs.core.IndexedSeq(G__7998__a,0);
} 
return G__7995__delegate.call(this,x,y,more);};
G__7995.cljs$lang$maxFixedArity = 2;
G__7995.cljs$lang$applyTo = (function (arglist__7999){
var x = cljs.core.first(arglist__7999);
arglist__7999 = cljs.core.next(arglist__7999);
var y = cljs.core.first(arglist__7999);
var more = cljs.core.rest(arglist__7999);
return G__7995__delegate(x,y,more);
});
G__7995.cljs$core$IFn$_invoke$arity$variadic = G__7995__delegate;
return G__7995;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__8000 = null;
if (arguments.length > 2) {
var G__8001__i = 0, G__8001__a = new Array(arguments.length -  2);
while (G__8001__i < G__8001__a.length) {G__8001__a[G__8001__i] = arguments[G__8001__i + 2]; ++G__8001__i;}
G__8000 = new cljs.core.IndexedSeq(G__8001__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8000);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
 * Comparator. Returns a negative number, zero, or a positive number
 * when x is logically 'less than', 'equal to', or 'greater than'
 * y. Uses IComparable if available and google.array.defaultCompare for objects
 * of the same type and special-cases nil to be less than any other object.
 */
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__8005 = x;
if(G__8005){
var bit__4600__auto__ = (G__8005.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__4600__auto__) || (G__8005.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__8006 = x;
var G__8007 = y;
return goog.array.defaultCompare(G__8006,G__8007);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
 * Compare indexed collection.
 */
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__8012 = xs;
var G__8013 = ys;
var G__8014 = len;
var G__8015 = (n + (1));
xs = G__8012;
ys = G__8013;
len = G__8014;
n = G__8015;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
 * Given a fn that might be boolean valued or a comparator,
 * return a fn that is a comparator.
 */
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__8020 = x;
var G__8021 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8020,G__8021) : f.call(null,G__8020,G__8021));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__8022 = y;
var G__8023 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8022,G__8023) : f.call(null,G__8022,G__8023));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
 * Returns a sorted sequence of the items in coll. Comp can be
 * boolean-valued comparison function, or a -/0/+ valued comparator.
 * Comp defaults to compare.
 */
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__8029 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__8029) : cljs.core.to_array.call(null,G__8029));
})();
var G__8030_8032 = a;
var G__8031_8033 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__8030_8032,G__8031_8033);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
 * Returns a sorted sequence of the items in coll, where the sort
 * order is determined by comparing (keyfn item).  Comp can be
 * boolean-valued comparison funcion, or a -/0/+ valued comparator.
 * Comp defaults to compare.
 */
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__8039 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__8039) : keyfn.call(null,G__8039));
})(),(function (){var G__8040 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__8040) : keyfn.call(null,G__8040));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4404__auto__ = cljs.core.seq(coll);
if(temp__4404__auto__){
var s = temp__4404__auto__;
var G__8046 = f;
var G__8047 = cljs.core.first(s);
var G__8048 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__8046,G__8047,G__8048) : cljs.core.reduce.call(null,G__8046,G__8047,G__8048));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__8049 = val__$1;
var G__8050 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8049,G__8050) : f.call(null,G__8049,G__8050));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__8051 = nval;
var G__8052 = cljs.core.next(coll__$1);
val__$1 = G__8051;
coll__$1 = G__8052;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
 * Return a random permutation of coll
 */
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__8056 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__8056) : cljs.core.to_array.call(null,G__8056));
})();
var G__8057_8059 = a;
goog.array.shuffle(G__8057_8059);

var G__8058 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__8058) : cljs.core.vec.call(null,G__8058));
});
/**
 * f should be a function of 2 arguments. If val is not supplied,
 * returns the result of applying f to the first 2 items in coll, then
 * applying f to that result and the 3rd item, etc. If coll contains no
 * items, f must accept no arguments as well, and reduce returns the
 * result of calling f with no arguments.  If coll has only 1 item, it
 * is returned and f is not called.  If val is supplied, returns the
 * result of applying f to val and the first item in coll, then
 * applying f to that result and the 2nd item, etc. If coll contains no
 * items, returns val and f is not called.
 */
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__8062 = coll;
if(G__8062){
var bit__4600__auto__ = (G__8062.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4600__auto__) || (G__8062.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__8063 = coll;
if(G__8063){
var bit__4600__auto__ = (G__8063.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4600__auto__) || (G__8063.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
 * Reduces an associative collection. f should be a function of 3
 * arguments. Returns the result of applying f to init, the first key
 * and the first value in coll, then applying f to that result and the
 * 2nd key and value, etc. If coll contains no entries, returns init
 * and f is not called. Note that reduce-kv is supported on vectors,
 * where the keys will be the ordinals.
 */
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__8072 = null;
var G__8072__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__8072__1 = (function (x){
var G__8069 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__8069) : cf.call(null,G__8069));
});
var G__8072__2 = (function (x,y){
var G__8070 = x;
var G__8071 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8070,G__8071) : f.call(null,G__8070,G__8071));
});
G__8072 = function(x,y){
switch(arguments.length){
case 0:
return G__8072__0.call(this);
case 1:
return G__8072__1.call(this,x);
case 2:
return G__8072__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8072.cljs$core$IFn$_invoke$arity$0 = G__8072__0;
G__8072.cljs$core$IFn$_invoke$arity$1 = G__8072__1;
G__8072.cljs$core$IFn$_invoke$arity$2 = G__8072__2;
return G__8072;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
 * reduce with a transformation of f (xf). If init is not
 * supplied, (f) will be called to produce it. f should be a reducing
 * step function that accepts both 1 and 2 arguments, if it accepts
 * only 2 you can add the arity-1 with 'completing'. Returns the result
 * of applying (the transformed) xf to init and the first item in coll,
 * then applying xf to that result and the 2nd item, etc. If coll
 * contains no items, returns init and f is not called. Note that
 * certain transforms may inject or skip items.
 */
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__8079 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__8079) : xform.call(null,G__8079));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__8080 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__8080) : f__$1.call(null,G__8080));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
 * Returns the sum of nums. (+) returns 0.
 * @param {...*} var_args
 */
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__8081__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__8081 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8082__i = 0, G__8082__a = new Array(arguments.length -  2);
while (G__8082__i < G__8082__a.length) {G__8082__a[G__8082__i] = arguments[G__8082__i + 2]; ++G__8082__i;}
  more = new cljs.core.IndexedSeq(G__8082__a,0);
} 
return G__8081__delegate.call(this,x,y,more);};
G__8081.cljs$lang$maxFixedArity = 2;
G__8081.cljs$lang$applyTo = (function (arglist__8083){
var x = cljs.core.first(arglist__8083);
arglist__8083 = cljs.core.next(arglist__8083);
var y = cljs.core.first(arglist__8083);
var more = cljs.core.rest(arglist__8083);
return G__8081__delegate(x,y,more);
});
G__8081.cljs$core$IFn$_invoke$arity$variadic = G__8081__delegate;
return G__8081;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__8084 = null;
if (arguments.length > 2) {
var G__8085__i = 0, G__8085__a = new Array(arguments.length -  2);
while (G__8085__i < G__8085__a.length) {G__8085__a[G__8085__i] = arguments[G__8085__i + 2]; ++G__8085__i;}
G__8084 = new cljs.core.IndexedSeq(G__8085__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8084);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
 * If no ys are supplied, returns the negation of x, else subtracts
 * the ys from x and returns the result.
 * @param {...*} var_args
 */
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__8086__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__8086 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8087__i = 0, G__8087__a = new Array(arguments.length -  2);
while (G__8087__i < G__8087__a.length) {G__8087__a[G__8087__i] = arguments[G__8087__i + 2]; ++G__8087__i;}
  more = new cljs.core.IndexedSeq(G__8087__a,0);
} 
return G__8086__delegate.call(this,x,y,more);};
G__8086.cljs$lang$maxFixedArity = 2;
G__8086.cljs$lang$applyTo = (function (arglist__8088){
var x = cljs.core.first(arglist__8088);
arglist__8088 = cljs.core.next(arglist__8088);
var y = cljs.core.first(arglist__8088);
var more = cljs.core.rest(arglist__8088);
return G__8086__delegate(x,y,more);
});
G__8086.cljs$core$IFn$_invoke$arity$variadic = G__8086__delegate;
return G__8086;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__8089 = null;
if (arguments.length > 2) {
var G__8090__i = 0, G__8090__a = new Array(arguments.length -  2);
while (G__8090__i < G__8090__a.length) {G__8090__a[G__8090__i] = arguments[G__8090__i + 2]; ++G__8090__i;}
G__8089 = new cljs.core.IndexedSeq(G__8090__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8089);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
 * Returns the product of nums. (*) returns 1.
 * @param {...*} var_args
 */
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__8091__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__8091 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8092__i = 0, G__8092__a = new Array(arguments.length -  2);
while (G__8092__i < G__8092__a.length) {G__8092__a[G__8092__i] = arguments[G__8092__i + 2]; ++G__8092__i;}
  more = new cljs.core.IndexedSeq(G__8092__a,0);
} 
return G__8091__delegate.call(this,x,y,more);};
G__8091.cljs$lang$maxFixedArity = 2;
G__8091.cljs$lang$applyTo = (function (arglist__8093){
var x = cljs.core.first(arglist__8093);
arglist__8093 = cljs.core.next(arglist__8093);
var y = cljs.core.first(arglist__8093);
var more = cljs.core.rest(arglist__8093);
return G__8091__delegate(x,y,more);
});
G__8091.cljs$core$IFn$_invoke$arity$variadic = G__8091__delegate;
return G__8091;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__8094 = null;
if (arguments.length > 2) {
var G__8095__i = 0, G__8095__a = new Array(arguments.length -  2);
while (G__8095__i < G__8095__a.length) {G__8095__a[G__8095__i] = arguments[G__8095__i + 2]; ++G__8095__i;}
G__8094 = new cljs.core.IndexedSeq(G__8095__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8094);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
 * If no denominators are supplied, returns 1/numerator,
 * else returns numerator divided by all of the denominators.
 * @param {...*} var_args
 */
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__8100__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__8100 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8101__i = 0, G__8101__a = new Array(arguments.length -  2);
while (G__8101__i < G__8101__a.length) {G__8101__a[G__8101__i] = arguments[G__8101__i + 2]; ++G__8101__i;}
  more = new cljs.core.IndexedSeq(G__8101__a,0);
} 
return G__8100__delegate.call(this,x,y,more);};
G__8100.cljs$lang$maxFixedArity = 2;
G__8100.cljs$lang$applyTo = (function (arglist__8102){
var x = cljs.core.first(arglist__8102);
arglist__8102 = cljs.core.next(arglist__8102);
var y = cljs.core.first(arglist__8102);
var more = cljs.core.rest(arglist__8102);
return G__8100__delegate(x,y,more);
});
G__8100.cljs$core$IFn$_invoke$arity$variadic = G__8100__delegate;
return G__8100;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__8103 = null;
if (arguments.length > 2) {
var G__8104__i = 0, G__8104__a = new Array(arguments.length -  2);
while (G__8104__i < G__8104__a.length) {G__8104__a[G__8104__i] = arguments[G__8104__i + 2]; ++G__8104__i;}
G__8103 = new cljs.core.IndexedSeq(G__8104__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8103);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
 * Returns non-nil if nums are in monotonically increasing order,
 * otherwise false.
 * @param {...*} var_args
 */
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__8105__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__8106 = y;
var G__8107 = cljs.core.first(more);
var G__8108 = cljs.core.next(more);
x = G__8106;
y = G__8107;
more = G__8108;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__8105 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8109__i = 0, G__8109__a = new Array(arguments.length -  2);
while (G__8109__i < G__8109__a.length) {G__8109__a[G__8109__i] = arguments[G__8109__i + 2]; ++G__8109__i;}
  more = new cljs.core.IndexedSeq(G__8109__a,0);
} 
return G__8105__delegate.call(this,x,y,more);};
G__8105.cljs$lang$maxFixedArity = 2;
G__8105.cljs$lang$applyTo = (function (arglist__8110){
var x = cljs.core.first(arglist__8110);
arglist__8110 = cljs.core.next(arglist__8110);
var y = cljs.core.first(arglist__8110);
var more = cljs.core.rest(arglist__8110);
return G__8105__delegate(x,y,more);
});
G__8105.cljs$core$IFn$_invoke$arity$variadic = G__8105__delegate;
return G__8105;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__8111 = null;
if (arguments.length > 2) {
var G__8112__i = 0, G__8112__a = new Array(arguments.length -  2);
while (G__8112__i < G__8112__a.length) {G__8112__a[G__8112__i] = arguments[G__8112__i + 2]; ++G__8112__i;}
G__8111 = new cljs.core.IndexedSeq(G__8112__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8111);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
 * Returns non-nil if nums are in monotonically non-decreasing order,
 * otherwise false.
 * @param {...*} var_args
 */
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__8113__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__8114 = y;
var G__8115 = cljs.core.first(more);
var G__8116 = cljs.core.next(more);
x = G__8114;
y = G__8115;
more = G__8116;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__8113 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8117__i = 0, G__8117__a = new Array(arguments.length -  2);
while (G__8117__i < G__8117__a.length) {G__8117__a[G__8117__i] = arguments[G__8117__i + 2]; ++G__8117__i;}
  more = new cljs.core.IndexedSeq(G__8117__a,0);
} 
return G__8113__delegate.call(this,x,y,more);};
G__8113.cljs$lang$maxFixedArity = 2;
G__8113.cljs$lang$applyTo = (function (arglist__8118){
var x = cljs.core.first(arglist__8118);
arglist__8118 = cljs.core.next(arglist__8118);
var y = cljs.core.first(arglist__8118);
var more = cljs.core.rest(arglist__8118);
return G__8113__delegate(x,y,more);
});
G__8113.cljs$core$IFn$_invoke$arity$variadic = G__8113__delegate;
return G__8113;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__8119 = null;
if (arguments.length > 2) {
var G__8120__i = 0, G__8120__a = new Array(arguments.length -  2);
while (G__8120__i < G__8120__a.length) {G__8120__a[G__8120__i] = arguments[G__8120__i + 2]; ++G__8120__i;}
G__8119 = new cljs.core.IndexedSeq(G__8120__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8119);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
 * Returns non-nil if nums are in monotonically decreasing order,
 * otherwise false.
 * @param {...*} var_args
 */
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__8121__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__8122 = y;
var G__8123 = cljs.core.first(more);
var G__8124 = cljs.core.next(more);
x = G__8122;
y = G__8123;
more = G__8124;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__8121 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8125__i = 0, G__8125__a = new Array(arguments.length -  2);
while (G__8125__i < G__8125__a.length) {G__8125__a[G__8125__i] = arguments[G__8125__i + 2]; ++G__8125__i;}
  more = new cljs.core.IndexedSeq(G__8125__a,0);
} 
return G__8121__delegate.call(this,x,y,more);};
G__8121.cljs$lang$maxFixedArity = 2;
G__8121.cljs$lang$applyTo = (function (arglist__8126){
var x = cljs.core.first(arglist__8126);
arglist__8126 = cljs.core.next(arglist__8126);
var y = cljs.core.first(arglist__8126);
var more = cljs.core.rest(arglist__8126);
return G__8121__delegate(x,y,more);
});
G__8121.cljs$core$IFn$_invoke$arity$variadic = G__8121__delegate;
return G__8121;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__8127 = null;
if (arguments.length > 2) {
var G__8128__i = 0, G__8128__a = new Array(arguments.length -  2);
while (G__8128__i < G__8128__a.length) {G__8128__a[G__8128__i] = arguments[G__8128__i + 2]; ++G__8128__i;}
G__8127 = new cljs.core.IndexedSeq(G__8128__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8127);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
 * Returns non-nil if nums are in monotonically non-increasing order,
 * otherwise false.
 * @param {...*} var_args
 */
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__8129__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__8130 = y;
var G__8131 = cljs.core.first(more);
var G__8132 = cljs.core.next(more);
x = G__8130;
y = G__8131;
more = G__8132;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__8129 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8133__i = 0, G__8133__a = new Array(arguments.length -  2);
while (G__8133__i < G__8133__a.length) {G__8133__a[G__8133__i] = arguments[G__8133__i + 2]; ++G__8133__i;}
  more = new cljs.core.IndexedSeq(G__8133__a,0);
} 
return G__8129__delegate.call(this,x,y,more);};
G__8129.cljs$lang$maxFixedArity = 2;
G__8129.cljs$lang$applyTo = (function (arglist__8134){
var x = cljs.core.first(arglist__8134);
arglist__8134 = cljs.core.next(arglist__8134);
var y = cljs.core.first(arglist__8134);
var more = cljs.core.rest(arglist__8134);
return G__8129__delegate(x,y,more);
});
G__8129.cljs$core$IFn$_invoke$arity$variadic = G__8129__delegate;
return G__8129;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__8135 = null;
if (arguments.length > 2) {
var G__8136__i = 0, G__8136__a = new Array(arguments.length -  2);
while (G__8136__i < G__8136__a.length) {G__8136__a[G__8136__i] = arguments[G__8136__i + 2]; ++G__8136__i;}
G__8135 = new cljs.core.IndexedSeq(G__8136__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8135);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
 * Returns a number one less than num.
 */
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
 * Returns the greatest of the nums.
 * @param {...*} var_args
 */
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__4243__auto__ = x;
var y__4244__auto__ = y;
return ((x__4243__auto__ > y__4244__auto__) ? x__4243__auto__ : y__4244__auto__);
});
var max__3 = (function() { 
var G__8137__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__4243__auto__ = x;
var y__4244__auto__ = y;
return ((x__4243__auto__ > y__4244__auto__) ? x__4243__auto__ : y__4244__auto__);
})(),more);
};
var G__8137 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8138__i = 0, G__8138__a = new Array(arguments.length -  2);
while (G__8138__i < G__8138__a.length) {G__8138__a[G__8138__i] = arguments[G__8138__i + 2]; ++G__8138__i;}
  more = new cljs.core.IndexedSeq(G__8138__a,0);
} 
return G__8137__delegate.call(this,x,y,more);};
G__8137.cljs$lang$maxFixedArity = 2;
G__8137.cljs$lang$applyTo = (function (arglist__8139){
var x = cljs.core.first(arglist__8139);
arglist__8139 = cljs.core.next(arglist__8139);
var y = cljs.core.first(arglist__8139);
var more = cljs.core.rest(arglist__8139);
return G__8137__delegate(x,y,more);
});
G__8137.cljs$core$IFn$_invoke$arity$variadic = G__8137__delegate;
return G__8137;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__8140 = null;
if (arguments.length > 2) {
var G__8141__i = 0, G__8141__a = new Array(arguments.length -  2);
while (G__8141__i < G__8141__a.length) {G__8141__a[G__8141__i] = arguments[G__8141__i + 2]; ++G__8141__i;}
G__8140 = new cljs.core.IndexedSeq(G__8141__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8140);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
 * Returns the least of the nums.
 * @param {...*} var_args
 */
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__4250__auto__ = x;
var y__4251__auto__ = y;
return ((x__4250__auto__ < y__4251__auto__) ? x__4250__auto__ : y__4251__auto__);
});
var min__3 = (function() { 
var G__8142__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__4250__auto__ = x;
var y__4251__auto__ = y;
return ((x__4250__auto__ < y__4251__auto__) ? x__4250__auto__ : y__4251__auto__);
})(),more);
};
var G__8142 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8143__i = 0, G__8143__a = new Array(arguments.length -  2);
while (G__8143__i < G__8143__a.length) {G__8143__a[G__8143__i] = arguments[G__8143__i + 2]; ++G__8143__i;}
  more = new cljs.core.IndexedSeq(G__8143__a,0);
} 
return G__8142__delegate.call(this,x,y,more);};
G__8142.cljs$lang$maxFixedArity = 2;
G__8142.cljs$lang$applyTo = (function (arglist__8144){
var x = cljs.core.first(arglist__8144);
arglist__8144 = cljs.core.next(arglist__8144);
var y = cljs.core.first(arglist__8144);
var more = cljs.core.rest(arglist__8144);
return G__8142__delegate(x,y,more);
});
G__8142.cljs$core$IFn$_invoke$arity$variadic = G__8142__delegate;
return G__8142;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__8145 = null;
if (arguments.length > 2) {
var G__8146__i = 0, G__8146__a = new Array(arguments.length -  2);
while (G__8146__i < G__8146__a.length) {G__8146__a[G__8146__i] = arguments[G__8146__i + 2]; ++G__8146__i;}
G__8145 = new cljs.core.IndexedSeq(G__8146__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8145);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
 * Coerce to char
 */
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
 * Returns the sum of nums. (+) returns 0.
 * @param {...*} var_args
 */
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__8147__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__8147 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8148__i = 0, G__8148__a = new Array(arguments.length -  2);
while (G__8148__i < G__8148__a.length) {G__8148__a[G__8148__i] = arguments[G__8148__i + 2]; ++G__8148__i;}
  more = new cljs.core.IndexedSeq(G__8148__a,0);
} 
return G__8147__delegate.call(this,x,y,more);};
G__8147.cljs$lang$maxFixedArity = 2;
G__8147.cljs$lang$applyTo = (function (arglist__8149){
var x = cljs.core.first(arglist__8149);
arglist__8149 = cljs.core.next(arglist__8149);
var y = cljs.core.first(arglist__8149);
var more = cljs.core.rest(arglist__8149);
return G__8147__delegate(x,y,more);
});
G__8147.cljs$core$IFn$_invoke$arity$variadic = G__8147__delegate;
return G__8147;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__8150 = null;
if (arguments.length > 2) {
var G__8151__i = 0, G__8151__a = new Array(arguments.length -  2);
while (G__8151__i < G__8151__a.length) {G__8151__a[G__8151__i] = arguments[G__8151__i + 2]; ++G__8151__i;}
G__8150 = new cljs.core.IndexedSeq(G__8151__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8150);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
 * Returns the sum of nums. (+) returns 0.
 * @param {...*} var_args
 */
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__8152__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__8152 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8153__i = 0, G__8153__a = new Array(arguments.length -  2);
while (G__8153__i < G__8153__a.length) {G__8153__a[G__8153__i] = arguments[G__8153__i + 2]; ++G__8153__i;}
  more = new cljs.core.IndexedSeq(G__8153__a,0);
} 
return G__8152__delegate.call(this,x,y,more);};
G__8152.cljs$lang$maxFixedArity = 2;
G__8152.cljs$lang$applyTo = (function (arglist__8154){
var x = cljs.core.first(arglist__8154);
arglist__8154 = cljs.core.next(arglist__8154);
var y = cljs.core.first(arglist__8154);
var more = cljs.core.rest(arglist__8154);
return G__8152__delegate(x,y,more);
});
G__8152.cljs$core$IFn$_invoke$arity$variadic = G__8152__delegate;
return G__8152;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__8155 = null;
if (arguments.length > 2) {
var G__8156__i = 0, G__8156__a = new Array(arguments.length -  2);
while (G__8156__i < G__8156__a.length) {G__8156__a[G__8156__i] = arguments[G__8156__i + 2]; ++G__8156__i;}
G__8155 = new cljs.core.IndexedSeq(G__8156__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8155);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
 * If no denominators are supplied, returns 1/numerator,
 * else returns numerator divided by all of the denominators.
 * @param {...*} var_args
 */
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__8161__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__8161 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8162__i = 0, G__8162__a = new Array(arguments.length -  2);
while (G__8162__i < G__8162__a.length) {G__8162__a[G__8162__i] = arguments[G__8162__i + 2]; ++G__8162__i;}
  more = new cljs.core.IndexedSeq(G__8162__a,0);
} 
return G__8161__delegate.call(this,x,y,more);};
G__8161.cljs$lang$maxFixedArity = 2;
G__8161.cljs$lang$applyTo = (function (arglist__8163){
var x = cljs.core.first(arglist__8163);
arglist__8163 = cljs.core.next(arglist__8163);
var y = cljs.core.first(arglist__8163);
var more = cljs.core.rest(arglist__8163);
return G__8161__delegate(x,y,more);
});
G__8161.cljs$core$IFn$_invoke$arity$variadic = G__8161__delegate;
return G__8161;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__8164 = null;
if (arguments.length > 2) {
var G__8165__i = 0, G__8165__a = new Array(arguments.length -  2);
while (G__8165__i < G__8165__a.length) {G__8165__a[G__8165__i] = arguments[G__8165__i + 2]; ++G__8165__i;}
G__8164 = new cljs.core.IndexedSeq(G__8165__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8164);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
 * Returns the product of nums. (*) returns 1.
 * @param {...*} var_args
 */
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__8166__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__8166 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8167__i = 0, G__8167__a = new Array(arguments.length -  2);
while (G__8167__i < G__8167__a.length) {G__8167__a[G__8167__i] = arguments[G__8167__i + 2]; ++G__8167__i;}
  more = new cljs.core.IndexedSeq(G__8167__a,0);
} 
return G__8166__delegate.call(this,x,y,more);};
G__8166.cljs$lang$maxFixedArity = 2;
G__8166.cljs$lang$applyTo = (function (arglist__8168){
var x = cljs.core.first(arglist__8168);
arglist__8168 = cljs.core.next(arglist__8168);
var y = cljs.core.first(arglist__8168);
var more = cljs.core.rest(arglist__8168);
return G__8166__delegate(x,y,more);
});
G__8166.cljs$core$IFn$_invoke$arity$variadic = G__8166__delegate;
return G__8166;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__8169 = null;
if (arguments.length > 2) {
var G__8170__i = 0, G__8170__a = new Array(arguments.length -  2);
while (G__8170__i < G__8170__a.length) {G__8170__a[G__8170__i] = arguments[G__8170__i + 2]; ++G__8170__i;}
G__8169 = new cljs.core.IndexedSeq(G__8170__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8169);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
 * Returns the product of nums. (*) returns 1.
 * @param {...*} var_args
 */
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__8171__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__8171 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8172__i = 0, G__8172__a = new Array(arguments.length -  2);
while (G__8172__i < G__8172__a.length) {G__8172__a[G__8172__i] = arguments[G__8172__i + 2]; ++G__8172__i;}
  more = new cljs.core.IndexedSeq(G__8172__a,0);
} 
return G__8171__delegate.call(this,x,y,more);};
G__8171.cljs$lang$maxFixedArity = 2;
G__8171.cljs$lang$applyTo = (function (arglist__8173){
var x = cljs.core.first(arglist__8173);
arglist__8173 = cljs.core.next(arglist__8173);
var y = cljs.core.first(arglist__8173);
var more = cljs.core.rest(arglist__8173);
return G__8171__delegate(x,y,more);
});
G__8171.cljs$core$IFn$_invoke$arity$variadic = G__8171__delegate;
return G__8171;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__8174 = null;
if (arguments.length > 2) {
var G__8175__i = 0, G__8175__a = new Array(arguments.length -  2);
while (G__8175__i < G__8175__a.length) {G__8175__a[G__8175__i] = arguments[G__8175__i + 2]; ++G__8175__i;}
G__8174 = new cljs.core.IndexedSeq(G__8175__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8174);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__8178 = x;
var G__8179 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__8178,G__8179) : cljs.core.mod.call(null,G__8178,G__8179));
});
/**
 * If no ys are supplied, returns the negation of x, else subtracts
 * the ys from x and returns the result.
 * @param {...*} var_args
 */
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__8180__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__8180 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8181__i = 0, G__8181__a = new Array(arguments.length -  2);
while (G__8181__i < G__8181__a.length) {G__8181__a[G__8181__i] = arguments[G__8181__i + 2]; ++G__8181__i;}
  more = new cljs.core.IndexedSeq(G__8181__a,0);
} 
return G__8180__delegate.call(this,x,y,more);};
G__8180.cljs$lang$maxFixedArity = 2;
G__8180.cljs$lang$applyTo = (function (arglist__8182){
var x = cljs.core.first(arglist__8182);
arglist__8182 = cljs.core.next(arglist__8182);
var y = cljs.core.first(arglist__8182);
var more = cljs.core.rest(arglist__8182);
return G__8180__delegate(x,y,more);
});
G__8180.cljs$core$IFn$_invoke$arity$variadic = G__8180__delegate;
return G__8180;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__8183 = null;
if (arguments.length > 2) {
var G__8184__i = 0, G__8184__a = new Array(arguments.length -  2);
while (G__8184__i < G__8184__a.length) {G__8184__a[G__8184__i] = arguments[G__8184__i + 2]; ++G__8184__i;}
G__8183 = new cljs.core.IndexedSeq(G__8184__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8183);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
 * If no ys are supplied, returns the negation of x, else subtracts
 * the ys from x and returns the result.
 * @param {...*} var_args
 */
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__8185__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__8185 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8186__i = 0, G__8186__a = new Array(arguments.length -  2);
while (G__8186__i < G__8186__a.length) {G__8186__a[G__8186__i] = arguments[G__8186__i + 2]; ++G__8186__i;}
  more = new cljs.core.IndexedSeq(G__8186__a,0);
} 
return G__8185__delegate.call(this,x,y,more);};
G__8185.cljs$lang$maxFixedArity = 2;
G__8185.cljs$lang$applyTo = (function (arglist__8187){
var x = cljs.core.first(arglist__8187);
arglist__8187 = cljs.core.next(arglist__8187);
var y = cljs.core.first(arglist__8187);
var more = cljs.core.rest(arglist__8187);
return G__8185__delegate(x,y,more);
});
G__8185.cljs$core$IFn$_invoke$arity$variadic = G__8185__delegate;
return G__8185;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__8188 = null;
if (arguments.length > 2) {
var G__8189__i = 0, G__8189__a = new Array(arguments.length -  2);
while (G__8189__i < G__8189__a.length) {G__8189__a[G__8189__i] = arguments[G__8189__i + 2]; ++G__8189__i;}
G__8188 = new cljs.core.IndexedSeq(G__8189__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8188);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__8192 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__8192) : Math.floor.call(null,G__8192));
} else {
var G__8193 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__8193) : Math.ceil.call(null,G__8193));
}
});
/**
 * Coerce to int by stripping decimal places.
 */
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
 * Coerce to int by stripping decimal places.
 */
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
 * Coerce to long by stripping decimal places. Identical to `int'.
 */
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
 * Coerce to long by stripping decimal places. Identical to `int'.
 */
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
 * Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
 */
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
 * Modulus of num and div. Truncates toward negative infinity.
 */
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
 * quot[ient] of dividing numerator by denominator.
 */
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
 * remainder of dividing numerator by denominator.
 */
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
 * Bitwise exclusive or
 * @param {...*} var_args
 */
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__8194__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__8194 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8195__i = 0, G__8195__a = new Array(arguments.length -  2);
while (G__8195__i < G__8195__a.length) {G__8195__a[G__8195__i] = arguments[G__8195__i + 2]; ++G__8195__i;}
  more = new cljs.core.IndexedSeq(G__8195__a,0);
} 
return G__8194__delegate.call(this,x,y,more);};
G__8194.cljs$lang$maxFixedArity = 2;
G__8194.cljs$lang$applyTo = (function (arglist__8196){
var x = cljs.core.first(arglist__8196);
arglist__8196 = cljs.core.next(arglist__8196);
var y = cljs.core.first(arglist__8196);
var more = cljs.core.rest(arglist__8196);
return G__8194__delegate(x,y,more);
});
G__8194.cljs$core$IFn$_invoke$arity$variadic = G__8194__delegate;
return G__8194;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__8197 = null;
if (arguments.length > 2) {
var G__8198__i = 0, G__8198__a = new Array(arguments.length -  2);
while (G__8198__i < G__8198__a.length) {G__8198__a[G__8198__i] = arguments[G__8198__i + 2]; ++G__8198__i;}
G__8197 = new cljs.core.IndexedSeq(G__8198__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8197);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
 * Bitwise and
 * @param {...*} var_args
 */
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__8199__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__8199 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8200__i = 0, G__8200__a = new Array(arguments.length -  2);
while (G__8200__i < G__8200__a.length) {G__8200__a[G__8200__i] = arguments[G__8200__i + 2]; ++G__8200__i;}
  more = new cljs.core.IndexedSeq(G__8200__a,0);
} 
return G__8199__delegate.call(this,x,y,more);};
G__8199.cljs$lang$maxFixedArity = 2;
G__8199.cljs$lang$applyTo = (function (arglist__8201){
var x = cljs.core.first(arglist__8201);
arglist__8201 = cljs.core.next(arglist__8201);
var y = cljs.core.first(arglist__8201);
var more = cljs.core.rest(arglist__8201);
return G__8199__delegate(x,y,more);
});
G__8199.cljs$core$IFn$_invoke$arity$variadic = G__8199__delegate;
return G__8199;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__8202 = null;
if (arguments.length > 2) {
var G__8203__i = 0, G__8203__a = new Array(arguments.length -  2);
while (G__8203__i < G__8203__a.length) {G__8203__a[G__8203__i] = arguments[G__8203__i + 2]; ++G__8203__i;}
G__8202 = new cljs.core.IndexedSeq(G__8203__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8202);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
 * Bitwise or
 * @param {...*} var_args
 */
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__8204__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__8204 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8205__i = 0, G__8205__a = new Array(arguments.length -  2);
while (G__8205__i < G__8205__a.length) {G__8205__a[G__8205__i] = arguments[G__8205__i + 2]; ++G__8205__i;}
  more = new cljs.core.IndexedSeq(G__8205__a,0);
} 
return G__8204__delegate.call(this,x,y,more);};
G__8204.cljs$lang$maxFixedArity = 2;
G__8204.cljs$lang$applyTo = (function (arglist__8206){
var x = cljs.core.first(arglist__8206);
arglist__8206 = cljs.core.next(arglist__8206);
var y = cljs.core.first(arglist__8206);
var more = cljs.core.rest(arglist__8206);
return G__8204__delegate(x,y,more);
});
G__8204.cljs$core$IFn$_invoke$arity$variadic = G__8204__delegate;
return G__8204;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__8207 = null;
if (arguments.length > 2) {
var G__8208__i = 0, G__8208__a = new Array(arguments.length -  2);
while (G__8208__i < G__8208__a.length) {G__8208__a[G__8208__i] = arguments[G__8208__i + 2]; ++G__8208__i;}
G__8207 = new cljs.core.IndexedSeq(G__8208__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8207);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
 * Bitwise and
 * @param {...*} var_args
 */
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__8209__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__8209 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8210__i = 0, G__8210__a = new Array(arguments.length -  2);
while (G__8210__i < G__8210__a.length) {G__8210__a[G__8210__i] = arguments[G__8210__i + 2]; ++G__8210__i;}
  more = new cljs.core.IndexedSeq(G__8210__a,0);
} 
return G__8209__delegate.call(this,x,y,more);};
G__8209.cljs$lang$maxFixedArity = 2;
G__8209.cljs$lang$applyTo = (function (arglist__8211){
var x = cljs.core.first(arglist__8211);
arglist__8211 = cljs.core.next(arglist__8211);
var y = cljs.core.first(arglist__8211);
var more = cljs.core.rest(arglist__8211);
return G__8209__delegate(x,y,more);
});
G__8209.cljs$core$IFn$_invoke$arity$variadic = G__8209__delegate;
return G__8209;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__8212 = null;
if (arguments.length > 2) {
var G__8213__i = 0, G__8213__a = new Array(arguments.length -  2);
while (G__8213__i < G__8213__a.length) {G__8213__a[G__8213__i] = arguments[G__8213__i + 2]; ++G__8213__i;}
G__8212 = new cljs.core.IndexedSeq(G__8213__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8212);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
 * Clear bit at index n
 */
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
 * Flip bit at index n
 */
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
 * Bitwise complement
 */
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
 * Set bit at index n
 */
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
 * Test bit at index n
 */
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
 * Bitwise shift left
 */
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
 * Bitwise shift right
 */
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
 * DEPRECATED: Bitwise shift right with zero fill
 */
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
 * Bitwise shift right with zero fill
 */
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
 * Counts the number of bits set in n
 */
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
 * Returns non-nil if nums all have the equivalent
 * value, otherwise false. Behavior on non nums is
 * undefined.
 * @param {...*} var_args
 */
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__8218__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__8219 = y;
var G__8220 = cljs.core.first(more);
var G__8221 = cljs.core.next(more);
x = G__8219;
y = G__8220;
more = G__8221;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__8218 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8222__i = 0, G__8222__a = new Array(arguments.length -  2);
while (G__8222__i < G__8222__a.length) {G__8222__a[G__8222__i] = arguments[G__8222__i + 2]; ++G__8222__i;}
  more = new cljs.core.IndexedSeq(G__8222__a,0);
} 
return G__8218__delegate.call(this,x,y,more);};
G__8218.cljs$lang$maxFixedArity = 2;
G__8218.cljs$lang$applyTo = (function (arglist__8223){
var x = cljs.core.first(arglist__8223);
arglist__8223 = cljs.core.next(arglist__8223);
var y = cljs.core.first(arglist__8223);
var more = cljs.core.rest(arglist__8223);
return G__8218__delegate(x,y,more);
});
G__8218.cljs$core$IFn$_invoke$arity$variadic = G__8218__delegate;
return G__8218;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__8224 = null;
if (arguments.length > 2) {
var G__8225__i = 0, G__8225__a = new Array(arguments.length -  2);
while (G__8225__i < G__8225__a.length) {G__8225__a[G__8225__i] = arguments[G__8225__i + 2]; ++G__8225__i;}
G__8224 = new cljs.core.IndexedSeq(G__8225__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8224);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
 * Returns true if num is greater than zero, else false
 */
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
 * Returns true if num is less than zero, else false
 */
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
 * Returns the nth next of coll, (seq coll) when n is 0.
 */
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__8226 = (n__$1 - (1));
var G__8227 = cljs.core.next(xs);
n__$1 = G__8226;
xs = G__8227;
continue;
} else {
return xs;
}
break;
}
});
/**
 * With no args, returns the empty string. With one arg x, returns
 * x.toString().  (str nil) returns the empty string. With more than
 * one arg, returns the concatenation of the str values of the args.
 * @param {...*} var_args
 */
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__8231 = x;
return goog.string.buildString(G__8231);
}
});
var str__2 = (function() { 
var G__8232__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__8233 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__8234 = cljs.core.next(more);
sb = G__8233;
more = G__8234;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__8232 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__8235__i = 0, G__8235__a = new Array(arguments.length -  1);
while (G__8235__i < G__8235__a.length) {G__8235__a[G__8235__i] = arguments[G__8235__i + 1]; ++G__8235__i;}
  ys = new cljs.core.IndexedSeq(G__8235__a,0);
} 
return G__8232__delegate.call(this,x,ys);};
G__8232.cljs$lang$maxFixedArity = 1;
G__8232.cljs$lang$applyTo = (function (arglist__8236){
var x = cljs.core.first(arglist__8236);
var ys = cljs.core.rest(arglist__8236);
return G__8232__delegate(x,ys);
});
G__8232.cljs$core$IFn$_invoke$arity$variadic = G__8232__delegate;
return G__8232;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__8237 = null;
if (arguments.length > 1) {
var G__8238__i = 0, G__8238__a = new Array(arguments.length -  1);
while (G__8238__i < G__8238__a.length) {G__8238__a[G__8238__i] = arguments[G__8238__i + 1]; ++G__8238__i;}
G__8237 = new cljs.core.IndexedSeq(G__8238__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__8237);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
 * Returns the substring of s beginning at start inclusive, and ending
 * at end (defaults to length of string), exclusive.
 */
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
 * Assumes x is sequential. Returns true if x equals y, otherwise
 * returns false.
 */
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__8239 = cljs.core.next(xs);
var G__8240 = cljs.core.next(ys);
xs = G__8239;
ys = G__8240;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__8241 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__8242 = cljs.core.next(s);
res = G__8241;
s = G__8242;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__8247 = ((h + (cljs.core.hash((function (){var G__8245 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__8245) : cljs.core.key.call(null,G__8245));
})()) ^ cljs.core.hash((function (){var G__8246 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__8246) : cljs.core.val.call(null,G__8246));
})()))) % (4503599627370496));
var G__8248 = cljs.core.next(s);
h = G__8247;
s = G__8248;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__8249 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__8250 = cljs.core.next(s__$1);
h = G__8249;
s__$1 = G__8250;
continue;
} else {
return h;
}
break;
}
});


/**
 * Takes a JavaScript object and a map of names to functions and
 * attaches said functions as methods on the object.  Any references to
 * JavaScript's implicit this (via the this-as macro) will resolve to the
 * object that the function is attached.
 */
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__8261_8271 = cljs.core.seq(fn_map);
var chunk__8262_8272 = null;
var count__8263_8273 = (0);
var i__8264_8274 = (0);
while(true){
if((i__8264_8274 < count__8263_8273)){
var vec__8265_8275 = chunk__8262_8272.cljs$core$IIndexed$_nth$arity$2(null,i__8264_8274);
var key_name_8276 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8265_8275,(0),null);
var f_8277 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8265_8275,(1),null);
var str_name_8278 = (function (){var G__8266 = key_name_8276;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__8266) : cljs.core.name.call(null,G__8266));
})();
(obj[str_name_8278] = f_8277);

var G__8279 = seq__8261_8271;
var G__8280 = chunk__8262_8272;
var G__8281 = count__8263_8273;
var G__8282 = (i__8264_8274 + (1));
seq__8261_8271 = G__8279;
chunk__8262_8272 = G__8280;
count__8263_8273 = G__8281;
i__8264_8274 = G__8282;
continue;
} else {
var temp__4406__auto___8283 = cljs.core.seq(seq__8261_8271);
if(temp__4406__auto___8283){
var seq__8261_8284__$1 = temp__4406__auto___8283;
if(cljs.core.chunked_seq_QMARK_(seq__8261_8284__$1)){
var c__4713__auto___8285 = (function (){var G__8267 = seq__8261_8284__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__8267) : cljs.core.chunk_first.call(null,G__8267));
})();
var G__8286 = (function (){var G__8268 = seq__8261_8284__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__8268) : cljs.core.chunk_rest.call(null,G__8268));
})();
var G__8287 = c__4713__auto___8285;
var G__8288 = cljs.core.count(c__4713__auto___8285);
var G__8289 = (0);
seq__8261_8271 = G__8286;
chunk__8262_8272 = G__8287;
count__8263_8273 = G__8288;
i__8264_8274 = G__8289;
continue;
} else {
var vec__8269_8290 = cljs.core.first(seq__8261_8284__$1);
var key_name_8291 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8269_8290,(0),null);
var f_8292 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8269_8290,(1),null);
var str_name_8293 = (function (){var G__8270 = key_name_8291;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__8270) : cljs.core.name.call(null,G__8270));
})();
(obj[str_name_8293] = f_8292);

var G__8294 = cljs.core.next(seq__8261_8284__$1);
var G__8295 = null;
var G__8296 = (0);
var G__8297 = (0);
seq__8261_8271 = G__8294;
chunk__8262_8272 = G__8295;
count__8263_8273 = G__8296;
i__8264_8274 = G__8297;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4347__auto__ = self__.__hash;
if(!((h__4347__auto__ == null))){
return h__4347__auto__;
} else {
var h__4347__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4347__auto____$1;

return h__4347__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__4513__auto__,writer__4514__auto__,opt__4515__auto__){
return cljs.core._write(writer__4514__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4904__auto__ = this;
return cljs.core.es6_iterator(this__4904__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__4513__auto__,writer__4514__auto__,opt__4515__auto__){
return cljs.core._write(writer__4514__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4904__auto__ = this;
return cljs.core.es6_iterator(this__4904__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__8299 = coll;
if(G__8299){
var bit__4607__auto__ = (G__8299.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__4607__auto__) || (G__8299.cljs$core$IReversible$)){
return true;
} else {
if((!G__8299.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__8299);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__8299);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
 * Returns a seq of the items in coll in reverse order. Not lazy.
 */
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
 * @param {...*} var_args
 */
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__8300 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__8300;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__8301 = (i - (1));
var G__8302 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__8301;
r = G__8302;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__8303__i = 0, G__8303__a = new Array(arguments.length -  0);
while (G__8303__i < G__8303__a.length) {G__8303__a[G__8303__i] = arguments[G__8303__i + 0]; ++G__8303__i;}
  xs = new cljs.core.IndexedSeq(G__8303__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__8304){
var xs = cljs.core.seq(arglist__8304);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4347__auto__ = self__.__hash;
if(!((h__4347__auto__ == null))){
return h__4347__auto__;
} else {
var h__4347__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4347__auto____$1;

return h__4347__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__4513__auto__,writer__4514__auto__,opt__4515__auto__){
return cljs.core._write(writer__4514__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4904__auto__ = this;
return cljs.core.es6_iterator(this__4904__auto__);
}));
/**
 * Returns a new seq where x is the first element and seq is the rest.
 */
cljs.core.cons = (function cons(x,coll){
if((function (){var or__3926__auto__ = (coll == null);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var G__8308 = coll;
if(G__8308){
var bit__4600__auto__ = (G__8308.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4600__auto__) || (G__8308.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__8310 = x;
if(G__8310){
var bit__4607__auto__ = (G__8310.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__4607__auto__) || (G__8310.cljs$core$IList$)){
return true;
} else {
if((!G__8310.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__8310);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__8310);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3914__auto__ = cljs.core.not(a.ns);
if(and__3914__auto__){
return b.ns;
} else {
return and__3914__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__8317 = a.ns;
var G__8318 = b.ns;
return goog.array.defaultCompare(G__8317,G__8318);
})();
if(((0) === nsc)){
var G__8319 = a.name;
var G__8320 = b.name;
return goog.array.defaultCompare(G__8319,G__8320);
} else {
return nsc;
}
}
} else {
var G__8321 = a.name;
var G__8322 = b.name;
return goog.array.defaultCompare(G__8321,G__8322);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__4347__auto__ = self__._hash;
if(!((h__4347__auto__ == null))){
return h__4347__auto__;
} else {
var h__4347__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__4347__auto____$1;

return h__4347__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__8324 = null;
var G__8324__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__8324__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__8324 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__8324__2.call(this,self__,coll);
case 3:
return G__8324__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8324.cljs$core$IFn$_invoke$arity$2 = G__8324__2;
G__8324.cljs$core$IFn$_invoke$arity$3 = G__8324__3;
return G__8324;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args8323){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args8323)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__4513__auto__,writer__4514__auto__,opt__4515__auto__){
return cljs.core._write(writer__4514__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
 * Returns the namespace String of a symbol or keyword, or nil if not present.
 */
cljs.core.namespace = (function namespace(x){
if((function (){var G__8326 = x;
if(G__8326){
var bit__4600__auto__ = (G__8326.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4600__auto__) || (G__8326.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
 * Returns a Keyword with the given namespace and name.  Do not use :
 * in the keyword strings, it will be added automatically.
 */
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__8328 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__8328) : cljs.core.name.call(null,G__8328));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4347__auto__ = self__.__hash;
if(!((h__4347__auto__ == null))){
return h__4347__auto__;
} else {
var h__4347__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4347__auto____$1;

return h__4347__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__8329 = ls.sval();
ls = G__8329;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__4513__auto__,writer__4514__auto__,opt__4515__auto__){
return cljs.core._write(writer__4514__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4904__auto__ = this;
return cljs.core.es6_iterator(this__4904__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__4513__auto__,writer__4514__auto__,opt__4515__auto__){
return cljs.core._write(writer__4514__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__4513__auto__,writer__4514__auto__,opt__4515__auto__){
return cljs.core._write(writer__4514__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4347__auto__ = self__.__hash;
if(!((h__4347__auto__ == null))){
return h__4347__auto__;
} else {
var h__4347__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4347__auto____$1;

return h__4347__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__4513__auto__,writer__4514__auto__,opt__4515__auto__){
return cljs.core._write(writer__4514__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4904__auto__ = this;
return cljs.core.es6_iterator(this__4904__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__8331 = s;
if(G__8331){
var bit__4600__auto__ = (G__8331.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__4600__auto__) || (G__8331.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
 * Naive impl of to-array as a start.
 */
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__8332 = cljs.core.next(s__$1);
s__$1 = G__8332;
continue;
} else {
return ary;
}
break;
}
});
/**
 * Returns a (potentially-ragged) 2-dimensional array
 * containing the contents of coll.
 */
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_8333 = (0);
var xs_8334 = cljs.core.seq(coll);
while(true){
if(xs_8334){
(ret[i_8333] = cljs.core.to_array(cljs.core.first(xs_8334)));

var G__8335 = (i_8333 + (1));
var G__8336 = cljs.core.next(xs_8334);
i_8333 = G__8335;
xs_8334 = G__8336;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__8339 = (i + (1));
var G__8340 = cljs.core.next(s__$1);
i = G__8339;
s__$1 = G__8340;
continue;
} else {
return a;
}
break;
}
} else {
var n__4813__auto___8341 = size;
var i_8342 = (0);
while(true){
if((i_8342 < n__4813__auto___8341)){
(a[i_8342] = init_val_or_seq);

var G__8343 = (i_8342 + (1));
i_8342 = G__8343;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__8346 = (i + (1));
var G__8347 = cljs.core.next(s__$1);
i = G__8346;
s__$1 = G__8347;
continue;
} else {
return a;
}
break;
}
} else {
var n__4813__auto___8348 = size;
var i_8349 = (0);
while(true){
if((i_8349 < n__4813__auto___8348)){
(a[i_8349] = init_val_or_seq);

var G__8350 = (i_8349 + (1));
i_8349 = G__8350;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__8353 = (i + (1));
var G__8354 = cljs.core.next(s__$1);
i = G__8353;
s__$1 = G__8354;
continue;
} else {
return a;
}
break;
}
} else {
var n__4813__auto___8355 = size;
var i_8356 = (0);
while(true){
if((i_8356 < n__4813__auto___8355)){
(a[i_8356] = init_val_or_seq);

var G__8357 = (i_8356 + (1));
i_8356 = G__8357;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__8360 = (i + (1));
var G__8361 = cljs.core.next(s__$1);
i = G__8360;
s__$1 = G__8361;
continue;
} else {
return a;
}
break;
}
} else {
var n__4813__auto___8362 = size;
var i_8363 = (0);
while(true){
if((i_8363 < n__4813__auto___8362)){
(a[i_8363] = init_val_or_seq);

var G__8364 = (i_8363 + (1));
i_8363 = G__8364;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__8365 = cljs.core.next(s__$1);
var G__8366 = (i - (1));
var G__8367 = (sum + (1));
s__$1 = G__8365;
i = G__8366;
sum = G__8367;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
 * Returns a lazy seq representing the concatenation of the elements in the supplied colls.
 * @param {...*} var_args
 */
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__8387__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__8387 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__8388__i = 0, G__8388__a = new Array(arguments.length -  2);
while (G__8388__i < G__8388__a.length) {G__8388__a[G__8388__i] = arguments[G__8388__i + 2]; ++G__8388__i;}
  zs = new cljs.core.IndexedSeq(G__8388__a,0);
} 
return G__8387__delegate.call(this,x,y,zs);};
G__8387.cljs$lang$maxFixedArity = 2;
G__8387.cljs$lang$applyTo = (function (arglist__8389){
var x = cljs.core.first(arglist__8389);
arglist__8389 = cljs.core.next(arglist__8389);
var y = cljs.core.first(arglist__8389);
var zs = cljs.core.rest(arglist__8389);
return G__8387__delegate(x,y,zs);
});
G__8387.cljs$core$IFn$_invoke$arity$variadic = G__8387__delegate;
return G__8387;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__8390 = null;
if (arguments.length > 2) {
var G__8391__i = 0, G__8391__a = new Array(arguments.length -  2);
while (G__8391__i < G__8391__a.length) {G__8391__a[G__8391__i] = arguments[G__8391__i + 2]; ++G__8391__i;}
G__8390 = new cljs.core.IndexedSeq(G__8391__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8390);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
 * Creates a new list containing the items prepended to the rest, the
 * last of which will be treated as a sequence.
 * @param {...*} var_args
 */
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__8392__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__8392 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__8393__i = 0, G__8393__a = new Array(arguments.length -  4);
while (G__8393__i < G__8393__a.length) {G__8393__a[G__8393__i] = arguments[G__8393__i + 4]; ++G__8393__i;}
  more = new cljs.core.IndexedSeq(G__8393__a,0);
} 
return G__8392__delegate.call(this,a,b,c,d,more);};
G__8392.cljs$lang$maxFixedArity = 4;
G__8392.cljs$lang$applyTo = (function (arglist__8394){
var a = cljs.core.first(arglist__8394);
arglist__8394 = cljs.core.next(arglist__8394);
var b = cljs.core.first(arglist__8394);
arglist__8394 = cljs.core.next(arglist__8394);
var c = cljs.core.first(arglist__8394);
arglist__8394 = cljs.core.next(arglist__8394);
var d = cljs.core.first(arglist__8394);
var more = cljs.core.rest(arglist__8394);
return G__8392__delegate(a,b,c,d,more);
});
G__8392.cljs$core$IFn$_invoke$arity$variadic = G__8392__delegate;
return G__8392;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__8395 = null;
if (arguments.length > 4) {
var G__8396__i = 0, G__8396__a = new Array(arguments.length -  4);
while (G__8396__i < G__8396__a.length) {G__8396__a[G__8396__i] = arguments[G__8396__i + 4]; ++G__8396__i;}
G__8395 = new cljs.core.IndexedSeq(G__8396__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__8395);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
 * Returns a new, transient version of the collection, in constant time.
 */
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
 * Returns a new, persistent version of the transient collection, in
 * constant time. The transient collection cannot be used after this
 * call, any such use will throw an exception.
 */
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
 * Adds x to the transient collection, and return coll. The 'addition'
 * may happen at different 'places' depending on the concrete type.
 * @param {...*} var_args
 */
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__8397__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__8398 = ntcoll;
var G__8399 = cljs.core.first(vals);
var G__8400 = cljs.core.next(vals);
tcoll = G__8398;
val = G__8399;
vals = G__8400;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__8397 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__8401__i = 0, G__8401__a = new Array(arguments.length -  2);
while (G__8401__i < G__8401__a.length) {G__8401__a[G__8401__i] = arguments[G__8401__i + 2]; ++G__8401__i;}
  vals = new cljs.core.IndexedSeq(G__8401__a,0);
} 
return G__8397__delegate.call(this,tcoll,val,vals);};
G__8397.cljs$lang$maxFixedArity = 2;
G__8397.cljs$lang$applyTo = (function (arglist__8402){
var tcoll = cljs.core.first(arglist__8402);
arglist__8402 = cljs.core.next(arglist__8402);
var val = cljs.core.first(arglist__8402);
var vals = cljs.core.rest(arglist__8402);
return G__8397__delegate(tcoll,val,vals);
});
G__8397.cljs$core$IFn$_invoke$arity$variadic = G__8397__delegate;
return G__8397;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__8403 = null;
if (arguments.length > 2) {
var G__8404__i = 0, G__8404__a = new Array(arguments.length -  2);
while (G__8404__i < G__8404__a.length) {G__8404__a[G__8404__i] = arguments[G__8404__i + 2]; ++G__8404__i;}
G__8403 = new cljs.core.IndexedSeq(G__8404__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__8403);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
 * When applied to a transient map, adds mapping of key(s) to
 * val(s). When applied to a transient vector, sets the val at index.
 * Note - index must be <= (count vector). Returns coll.
 * @param {...*} var_args
 */
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__8405__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__8406 = ntcoll;
var G__8407 = cljs.core.first(kvs);
var G__8408 = cljs.core.second(kvs);
var G__8409 = cljs.core.nnext(kvs);
tcoll = G__8406;
key = G__8407;
val = G__8408;
kvs = G__8409;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__8405 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__8410__i = 0, G__8410__a = new Array(arguments.length -  3);
while (G__8410__i < G__8410__a.length) {G__8410__a[G__8410__i] = arguments[G__8410__i + 3]; ++G__8410__i;}
  kvs = new cljs.core.IndexedSeq(G__8410__a,0);
} 
return G__8405__delegate.call(this,tcoll,key,val,kvs);};
G__8405.cljs$lang$maxFixedArity = 3;
G__8405.cljs$lang$applyTo = (function (arglist__8411){
var tcoll = cljs.core.first(arglist__8411);
arglist__8411 = cljs.core.next(arglist__8411);
var key = cljs.core.first(arglist__8411);
arglist__8411 = cljs.core.next(arglist__8411);
var val = cljs.core.first(arglist__8411);
var kvs = cljs.core.rest(arglist__8411);
return G__8405__delegate(tcoll,key,val,kvs);
});
G__8405.cljs$core$IFn$_invoke$arity$variadic = G__8405__delegate;
return G__8405;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__8412 = null;
if (arguments.length > 3) {
var G__8413__i = 0, G__8413__a = new Array(arguments.length -  3);
while (G__8413__i < G__8413__a.length) {G__8413__a[G__8413__i] = arguments[G__8413__i + 3]; ++G__8413__i;}
G__8412 = new cljs.core.IndexedSeq(G__8413__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__8412);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
 * Returns a transient map that doesn't contain a mapping for key(s).
 * @param {...*} var_args
 */
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__8414__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__8415 = ntcoll;
var G__8416 = cljs.core.first(ks);
var G__8417 = cljs.core.next(ks);
tcoll = G__8415;
key = G__8416;
ks = G__8417;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__8414 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__8418__i = 0, G__8418__a = new Array(arguments.length -  2);
while (G__8418__i < G__8418__a.length) {G__8418__a[G__8418__i] = arguments[G__8418__i + 2]; ++G__8418__i;}
  ks = new cljs.core.IndexedSeq(G__8418__a,0);
} 
return G__8414__delegate.call(this,tcoll,key,ks);};
G__8414.cljs$lang$maxFixedArity = 2;
G__8414.cljs$lang$applyTo = (function (arglist__8419){
var tcoll = cljs.core.first(arglist__8419);
arglist__8419 = cljs.core.next(arglist__8419);
var key = cljs.core.first(arglist__8419);
var ks = cljs.core.rest(arglist__8419);
return G__8414__delegate(tcoll,key,ks);
});
G__8414.cljs$core$IFn$_invoke$arity$variadic = G__8414__delegate;
return G__8414;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__8420 = null;
if (arguments.length > 2) {
var G__8421__i = 0, G__8421__a = new Array(arguments.length -  2);
while (G__8421__i < G__8421__a.length) {G__8421__a[G__8421__i] = arguments[G__8421__i + 2]; ++G__8421__i;}
G__8420 = new cljs.core.IndexedSeq(G__8421__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__8420);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
 * Removes the last item from a transient vector. If
 * the collection is empty, throws an exception. Returns coll
 */
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
 * disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
 * does not contain key(s).
 * @param {...*} var_args
 */
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__8422__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__8423 = ntcoll;
var G__8424 = cljs.core.first(vals);
var G__8425 = cljs.core.next(vals);
tcoll = G__8423;
val = G__8424;
vals = G__8425;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__8422 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__8426__i = 0, G__8426__a = new Array(arguments.length -  2);
while (G__8426__i < G__8426__a.length) {G__8426__a[G__8426__i] = arguments[G__8426__i + 2]; ++G__8426__i;}
  vals = new cljs.core.IndexedSeq(G__8426__a,0);
} 
return G__8422__delegate.call(this,tcoll,val,vals);};
G__8422.cljs$lang$maxFixedArity = 2;
G__8422.cljs$lang$applyTo = (function (arglist__8427){
var tcoll = cljs.core.first(arglist__8427);
arglist__8427 = cljs.core.next(arglist__8427);
var val = cljs.core.first(arglist__8427);
var vals = cljs.core.rest(arglist__8427);
return G__8422__delegate(tcoll,val,vals);
});
G__8422.cljs$core$IFn$_invoke$arity$variadic = G__8422__delegate;
return G__8422;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__8428 = null;
if (arguments.length > 2) {
var G__8429__i = 0, G__8429__a = new Array(arguments.length -  2);
while (G__8429__i < G__8429__a.length) {G__8429__a[G__8429__i] = arguments[G__8429__i + 2]; ++G__8429__i;}
G__8428 = new cljs.core.IndexedSeq(G__8429__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__8428);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a4857 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a4857);
} else {
var G__8640 = a4857;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8640) : f.call(null,G__8640));
}
} else {
var b4858 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a4857,b4858);
} else {
var G__8641 = a4857;
var G__8642 = b4858;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8641,G__8642) : f.call(null,G__8641,G__8642));
}
} else {
var c4859 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a4857,b4858,c4859);
} else {
var G__8643 = a4857;
var G__8644 = b4858;
var G__8645 = c4859;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8643,G__8644,G__8645) : f.call(null,G__8643,G__8644,G__8645));
}
} else {
var d4860 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a4857,b4858,c4859,d4860);
} else {
var G__8646 = a4857;
var G__8647 = b4858;
var G__8648 = c4859;
var G__8649 = d4860;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8646,G__8647,G__8648,G__8649) : f.call(null,G__8646,G__8647,G__8648,G__8649));
}
} else {
var e4861 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a4857,b4858,c4859,d4860,e4861);
} else {
var G__8650 = a4857;
var G__8651 = b4858;
var G__8652 = c4859;
var G__8653 = d4860;
var G__8654 = e4861;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__8650,G__8651,G__8652,G__8653,G__8654) : f.call(null,G__8650,G__8651,G__8652,G__8653,G__8654));
}
} else {
var f4862 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a4857,b4858,c4859,d4860,e4861,f4862);
} else {
var G__8655 = a4857;
var G__8656 = b4858;
var G__8657 = c4859;
var G__8658 = d4860;
var G__8659 = e4861;
var G__8660 = f4862;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__8655,G__8656,G__8657,G__8658,G__8659,G__8660) : f.call(null,G__8655,G__8656,G__8657,G__8658,G__8659,G__8660));
}
} else {
var g4863 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a4857,b4858,c4859,d4860,e4861,f4862,g4863);
} else {
var G__8661 = a4857;
var G__8662 = b4858;
var G__8663 = c4859;
var G__8664 = d4860;
var G__8665 = e4861;
var G__8666 = f4862;
var G__8667 = g4863;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__8661,G__8662,G__8663,G__8664,G__8665,G__8666,G__8667) : f.call(null,G__8661,G__8662,G__8663,G__8664,G__8665,G__8666,G__8667));
}
} else {
var h4864 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a4857,b4858,c4859,d4860,e4861,f4862,g4863,h4864);
} else {
var G__8668 = a4857;
var G__8669 = b4858;
var G__8670 = c4859;
var G__8671 = d4860;
var G__8672 = e4861;
var G__8673 = f4862;
var G__8674 = g4863;
var G__8675 = h4864;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__8668,G__8669,G__8670,G__8671,G__8672,G__8673,G__8674,G__8675) : f.call(null,G__8668,G__8669,G__8670,G__8671,G__8672,G__8673,G__8674,G__8675));
}
} else {
var i4865 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a4857,b4858,c4859,d4860,e4861,f4862,g4863,h4864,i4865);
} else {
var G__8676 = a4857;
var G__8677 = b4858;
var G__8678 = c4859;
var G__8679 = d4860;
var G__8680 = e4861;
var G__8681 = f4862;
var G__8682 = g4863;
var G__8683 = h4864;
var G__8684 = i4865;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__8676,G__8677,G__8678,G__8679,G__8680,G__8681,G__8682,G__8683,G__8684) : f.call(null,G__8676,G__8677,G__8678,G__8679,G__8680,G__8681,G__8682,G__8683,G__8684));
}
} else {
var j4866 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a4857,b4858,c4859,d4860,e4861,f4862,g4863,h4864,i4865,j4866);
} else {
var G__8685 = a4857;
var G__8686 = b4858;
var G__8687 = c4859;
var G__8688 = d4860;
var G__8689 = e4861;
var G__8690 = f4862;
var G__8691 = g4863;
var G__8692 = h4864;
var G__8693 = i4865;
var G__8694 = j4866;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__8685,G__8686,G__8687,G__8688,G__8689,G__8690,G__8691,G__8692,G__8693,G__8694) : f.call(null,G__8685,G__8686,G__8687,G__8688,G__8689,G__8690,G__8691,G__8692,G__8693,G__8694));
}
} else {
var k4867 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a4857,b4858,c4859,d4860,e4861,f4862,g4863,h4864,i4865,j4866,k4867);
} else {
var G__8695 = a4857;
var G__8696 = b4858;
var G__8697 = c4859;
var G__8698 = d4860;
var G__8699 = e4861;
var G__8700 = f4862;
var G__8701 = g4863;
var G__8702 = h4864;
var G__8703 = i4865;
var G__8704 = j4866;
var G__8705 = k4867;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__8695,G__8696,G__8697,G__8698,G__8699,G__8700,G__8701,G__8702,G__8703,G__8704,G__8705) : f.call(null,G__8695,G__8696,G__8697,G__8698,G__8699,G__8700,G__8701,G__8702,G__8703,G__8704,G__8705));
}
} else {
var l4868 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a4857,b4858,c4859,d4860,e4861,f4862,g4863,h4864,i4865,j4866,k4867,l4868);
} else {
var G__8706 = a4857;
var G__8707 = b4858;
var G__8708 = c4859;
var G__8709 = d4860;
var G__8710 = e4861;
var G__8711 = f4862;
var G__8712 = g4863;
var G__8713 = h4864;
var G__8714 = i4865;
var G__8715 = j4866;
var G__8716 = k4867;
var G__8717 = l4868;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__8706,G__8707,G__8708,G__8709,G__8710,G__8711,G__8712,G__8713,G__8714,G__8715,G__8716,G__8717) : f.call(null,G__8706,G__8707,G__8708,G__8709,G__8710,G__8711,G__8712,G__8713,G__8714,G__8715,G__8716,G__8717));
}
} else {
var m4869 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a4857,b4858,c4859,d4860,e4861,f4862,g4863,h4864,i4865,j4866,k4867,l4868,m4869);
} else {
var G__8718 = a4857;
var G__8719 = b4858;
var G__8720 = c4859;
var G__8721 = d4860;
var G__8722 = e4861;
var G__8723 = f4862;
var G__8724 = g4863;
var G__8725 = h4864;
var G__8726 = i4865;
var G__8727 = j4866;
var G__8728 = k4867;
var G__8729 = l4868;
var G__8730 = m4869;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__8718,G__8719,G__8720,G__8721,G__8722,G__8723,G__8724,G__8725,G__8726,G__8727,G__8728,G__8729,G__8730) : f.call(null,G__8718,G__8719,G__8720,G__8721,G__8722,G__8723,G__8724,G__8725,G__8726,G__8727,G__8728,G__8729,G__8730));
}
} else {
var n4870 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a4857,b4858,c4859,d4860,e4861,f4862,g4863,h4864,i4865,j4866,k4867,l4868,m4869,n4870);
} else {
var G__8731 = a4857;
var G__8732 = b4858;
var G__8733 = c4859;
var G__8734 = d4860;
var G__8735 = e4861;
var G__8736 = f4862;
var G__8737 = g4863;
var G__8738 = h4864;
var G__8739 = i4865;
var G__8740 = j4866;
var G__8741 = k4867;
var G__8742 = l4868;
var G__8743 = m4869;
var G__8744 = n4870;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__8731,G__8732,G__8733,G__8734,G__8735,G__8736,G__8737,G__8738,G__8739,G__8740,G__8741,G__8742,G__8743,G__8744) : f.call(null,G__8731,G__8732,G__8733,G__8734,G__8735,G__8736,G__8737,G__8738,G__8739,G__8740,G__8741,G__8742,G__8743,G__8744));
}
} else {
var o4871 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a4857,b4858,c4859,d4860,e4861,f4862,g4863,h4864,i4865,j4866,k4867,l4868,m4869,n4870,o4871);
} else {
var G__8745 = a4857;
var G__8746 = b4858;
var G__8747 = c4859;
var G__8748 = d4860;
var G__8749 = e4861;
var G__8750 = f4862;
var G__8751 = g4863;
var G__8752 = h4864;
var G__8753 = i4865;
var G__8754 = j4866;
var G__8755 = k4867;
var G__8756 = l4868;
var G__8757 = m4869;
var G__8758 = n4870;
var G__8759 = o4871;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__8745,G__8746,G__8747,G__8748,G__8749,G__8750,G__8751,G__8752,G__8753,G__8754,G__8755,G__8756,G__8757,G__8758,G__8759) : f.call(null,G__8745,G__8746,G__8747,G__8748,G__8749,G__8750,G__8751,G__8752,G__8753,G__8754,G__8755,G__8756,G__8757,G__8758,G__8759));
}
} else {
var p4872 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a4857,b4858,c4859,d4860,e4861,f4862,g4863,h4864,i4865,j4866,k4867,l4868,m4869,n4870,o4871,p4872);
} else {
var G__8760 = a4857;
var G__8761 = b4858;
var G__8762 = c4859;
var G__8763 = d4860;
var G__8764 = e4861;
var G__8765 = f4862;
var G__8766 = g4863;
var G__8767 = h4864;
var G__8768 = i4865;
var G__8769 = j4866;
var G__8770 = k4867;
var G__8771 = l4868;
var G__8772 = m4869;
var G__8773 = n4870;
var G__8774 = o4871;
var G__8775 = p4872;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__8760,G__8761,G__8762,G__8763,G__8764,G__8765,G__8766,G__8767,G__8768,G__8769,G__8770,G__8771,G__8772,G__8773,G__8774,G__8775) : f.call(null,G__8760,G__8761,G__8762,G__8763,G__8764,G__8765,G__8766,G__8767,G__8768,G__8769,G__8770,G__8771,G__8772,G__8773,G__8774,G__8775));
}
} else {
var q4873 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a4857,b4858,c4859,d4860,e4861,f4862,g4863,h4864,i4865,j4866,k4867,l4868,m4869,n4870,o4871,p4872,q4873);
} else {
var G__8776 = a4857;
var G__8777 = b4858;
var G__8778 = c4859;
var G__8779 = d4860;
var G__8780 = e4861;
var G__8781 = f4862;
var G__8782 = g4863;
var G__8783 = h4864;
var G__8784 = i4865;
var G__8785 = j4866;
var G__8786 = k4867;
var G__8787 = l4868;
var G__8788 = m4869;
var G__8789 = n4870;
var G__8790 = o4871;
var G__8791 = p4872;
var G__8792 = q4873;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__8776,G__8777,G__8778,G__8779,G__8780,G__8781,G__8782,G__8783,G__8784,G__8785,G__8786,G__8787,G__8788,G__8789,G__8790,G__8791,G__8792) : f.call(null,G__8776,G__8777,G__8778,G__8779,G__8780,G__8781,G__8782,G__8783,G__8784,G__8785,G__8786,G__8787,G__8788,G__8789,G__8790,G__8791,G__8792));
}
} else {
var r4874 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a4857,b4858,c4859,d4860,e4861,f4862,g4863,h4864,i4865,j4866,k4867,l4868,m4869,n4870,o4871,p4872,q4873,r4874);
} else {
var G__8793 = a4857;
var G__8794 = b4858;
var G__8795 = c4859;
var G__8796 = d4860;
var G__8797 = e4861;
var G__8798 = f4862;
var G__8799 = g4863;
var G__8800 = h4864;
var G__8801 = i4865;
var G__8802 = j4866;
var G__8803 = k4867;
var G__8804 = l4868;
var G__8805 = m4869;
var G__8806 = n4870;
var G__8807 = o4871;
var G__8808 = p4872;
var G__8809 = q4873;
var G__8810 = r4874;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__8793,G__8794,G__8795,G__8796,G__8797,G__8798,G__8799,G__8800,G__8801,G__8802,G__8803,G__8804,G__8805,G__8806,G__8807,G__8808,G__8809,G__8810) : f.call(null,G__8793,G__8794,G__8795,G__8796,G__8797,G__8798,G__8799,G__8800,G__8801,G__8802,G__8803,G__8804,G__8805,G__8806,G__8807,G__8808,G__8809,G__8810));
}
} else {
var s4875 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a4857,b4858,c4859,d4860,e4861,f4862,g4863,h4864,i4865,j4866,k4867,l4868,m4869,n4870,o4871,p4872,q4873,r4874,s4875);
} else {
var G__8811 = a4857;
var G__8812 = b4858;
var G__8813 = c4859;
var G__8814 = d4860;
var G__8815 = e4861;
var G__8816 = f4862;
var G__8817 = g4863;
var G__8818 = h4864;
var G__8819 = i4865;
var G__8820 = j4866;
var G__8821 = k4867;
var G__8822 = l4868;
var G__8823 = m4869;
var G__8824 = n4870;
var G__8825 = o4871;
var G__8826 = p4872;
var G__8827 = q4873;
var G__8828 = r4874;
var G__8829 = s4875;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__8811,G__8812,G__8813,G__8814,G__8815,G__8816,G__8817,G__8818,G__8819,G__8820,G__8821,G__8822,G__8823,G__8824,G__8825,G__8826,G__8827,G__8828,G__8829) : f.call(null,G__8811,G__8812,G__8813,G__8814,G__8815,G__8816,G__8817,G__8818,G__8819,G__8820,G__8821,G__8822,G__8823,G__8824,G__8825,G__8826,G__8827,G__8828,G__8829));
}
} else {
var t4876 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a4857,b4858,c4859,d4860,e4861,f4862,g4863,h4864,i4865,j4866,k4867,l4868,m4869,n4870,o4871,p4872,q4873,r4874,s4875,t4876);
} else {
var G__8830 = a4857;
var G__8831 = b4858;
var G__8832 = c4859;
var G__8833 = d4860;
var G__8834 = e4861;
var G__8835 = f4862;
var G__8836 = g4863;
var G__8837 = h4864;
var G__8838 = i4865;
var G__8839 = j4866;
var G__8840 = k4867;
var G__8841 = l4868;
var G__8842 = m4869;
var G__8843 = n4870;
var G__8844 = o4871;
var G__8845 = p4872;
var G__8846 = q4873;
var G__8847 = r4874;
var G__8848 = s4875;
var G__8849 = t4876;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__8830,G__8831,G__8832,G__8833,G__8834,G__8835,G__8836,G__8837,G__8838,G__8839,G__8840,G__8841,G__8842,G__8843,G__8844,G__8845,G__8846,G__8847,G__8848,G__8849) : f.call(null,G__8830,G__8831,G__8832,G__8833,G__8834,G__8835,G__8836,G__8837,G__8838,G__8839,G__8840,G__8841,G__8842,G__8843,G__8844,G__8845,G__8846,G__8847,G__8848,G__8849));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
 * Applies fn f to the argument list formed by prepending intervening arguments to args.
 * @param {...*} var_args
 */
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__8850__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__8850 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__8851__i = 0, G__8851__a = new Array(arguments.length -  5);
while (G__8851__i < G__8851__a.length) {G__8851__a[G__8851__i] = arguments[G__8851__i + 5]; ++G__8851__i;}
  args = new cljs.core.IndexedSeq(G__8851__a,0);
} 
return G__8850__delegate.call(this,f,a,b,c,d,args);};
G__8850.cljs$lang$maxFixedArity = 5;
G__8850.cljs$lang$applyTo = (function (arglist__8852){
var f = cljs.core.first(arglist__8852);
arglist__8852 = cljs.core.next(arglist__8852);
var a = cljs.core.first(arglist__8852);
arglist__8852 = cljs.core.next(arglist__8852);
var b = cljs.core.first(arglist__8852);
arglist__8852 = cljs.core.next(arglist__8852);
var c = cljs.core.first(arglist__8852);
arglist__8852 = cljs.core.next(arglist__8852);
var d = cljs.core.first(arglist__8852);
var args = cljs.core.rest(arglist__8852);
return G__8850__delegate(f,a,b,c,d,args);
});
G__8850.cljs$core$IFn$_invoke$arity$variadic = G__8850__delegate;
return G__8850;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__8853 = null;
if (arguments.length > 5) {
var G__8854__i = 0, G__8854__a = new Array(arguments.length -  5);
while (G__8854__i < G__8854__a.length) {G__8854__a[G__8854__i] = arguments[G__8854__i + 5]; ++G__8854__i;}
G__8853 = new cljs.core.IndexedSeq(G__8854__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__8853);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
 * Returns an object of the same type and value as obj, with
 * (apply f (meta obj) args) as its metadata.
 * @param {...*} var_args
 */
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__8870 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8870) : f.call(null,G__8870));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__8871 = cljs.core.meta(obj);
var G__8872 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8871,G__8872) : f.call(null,G__8871,G__8872));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__8873 = cljs.core.meta(obj);
var G__8874 = a;
var G__8875 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8873,G__8874,G__8875) : f.call(null,G__8873,G__8874,G__8875));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__8876 = cljs.core.meta(obj);
var G__8877 = a;
var G__8878 = b;
var G__8879 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8876,G__8877,G__8878,G__8879) : f.call(null,G__8876,G__8877,G__8878,G__8879));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__8880 = cljs.core.meta(obj);
var G__8881 = a;
var G__8882 = b;
var G__8883 = c;
var G__8884 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__8880,G__8881,G__8882,G__8883,G__8884) : f.call(null,G__8880,G__8881,G__8882,G__8883,G__8884));
})());
});
var vary_meta__7 = (function() { 
var G__8885__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__8885 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__8886__i = 0, G__8886__a = new Array(arguments.length -  6);
while (G__8886__i < G__8886__a.length) {G__8886__a[G__8886__i] = arguments[G__8886__i + 6]; ++G__8886__i;}
  args = new cljs.core.IndexedSeq(G__8886__a,0);
} 
return G__8885__delegate.call(this,obj,f,a,b,c,d,args);};
G__8885.cljs$lang$maxFixedArity = 6;
G__8885.cljs$lang$applyTo = (function (arglist__8887){
var obj = cljs.core.first(arglist__8887);
arglist__8887 = cljs.core.next(arglist__8887);
var f = cljs.core.first(arglist__8887);
arglist__8887 = cljs.core.next(arglist__8887);
var a = cljs.core.first(arglist__8887);
arglist__8887 = cljs.core.next(arglist__8887);
var b = cljs.core.first(arglist__8887);
arglist__8887 = cljs.core.next(arglist__8887);
var c = cljs.core.first(arglist__8887);
arglist__8887 = cljs.core.next(arglist__8887);
var d = cljs.core.first(arglist__8887);
var args = cljs.core.rest(arglist__8887);
return G__8885__delegate(obj,f,a,b,c,d,args);
});
G__8885.cljs$core$IFn$_invoke$arity$variadic = G__8885__delegate;
return G__8885;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__8888 = null;
if (arguments.length > 6) {
var G__8889__i = 0, G__8889__a = new Array(arguments.length -  6);
while (G__8889__i < G__8889__a.length) {G__8889__a[G__8889__i] = arguments[G__8889__i + 6]; ++G__8889__i;}
G__8888 = new cljs.core.IndexedSeq(G__8889__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__8888);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
 * Same as (not (= obj1 obj2))
 * @param {...*} var_args
 */
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__8890__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__8890 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8891__i = 0, G__8891__a = new Array(arguments.length -  2);
while (G__8891__i < G__8891__a.length) {G__8891__a[G__8891__i] = arguments[G__8891__i + 2]; ++G__8891__i;}
  more = new cljs.core.IndexedSeq(G__8891__a,0);
} 
return G__8890__delegate.call(this,x,y,more);};
G__8890.cljs$lang$maxFixedArity = 2;
G__8890.cljs$lang$applyTo = (function (arglist__8892){
var x = cljs.core.first(arglist__8892);
arglist__8892 = cljs.core.next(arglist__8892);
var y = cljs.core.first(arglist__8892);
var more = cljs.core.rest(arglist__8892);
return G__8890__delegate(x,y,more);
});
G__8890.cljs$core$IFn$_invoke$arity$variadic = G__8890__delegate;
return G__8890;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__8893 = null;
if (arguments.length > 2) {
var G__8894__i = 0, G__8894__a = new Array(arguments.length -  2);
while (G__8894__i < G__8894__a.length) {G__8894__a[G__8894__i] = arguments[G__8894__i + 2]; ++G__8894__i;}
G__8893 = new cljs.core.IndexedSeq(G__8894__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8893);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
 * If coll is empty, returns nil, else coll
 */
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t8898 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t8898 = (function (nil_iter,meta8899){
this.nil_iter = nil_iter;
this.meta8899 = meta8899;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t8898.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t8898.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t8898.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t8898.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_8900){
var self__ = this;
var _8900__$1 = this;
return self__.meta8899;
});

cljs.core.t8898.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_8900,meta8899__$1){
var self__ = this;
var _8900__$1 = this;
return (new cljs.core.t8898(self__.nil_iter,meta8899__$1));
});

cljs.core.t8898.cljs$lang$type = true;

cljs.core.t8898.cljs$lang$ctorStr = "cljs.core/t8898";

cljs.core.t8898.cljs$lang$ctorPrWriter = (function (this__4513__auto__,writer__4514__auto__,opt__4515__auto__){
return cljs.core._write(writer__4514__auto__,"cljs.core/t8898");
});

cljs.core.__GT_t8898 = (function __GT_t8898(nil_iter__$1,meta8899){
return (new cljs.core.t8898(nil_iter__$1,meta8899));
});

}

return (new cljs.core.t8898(nil_iter,cljs.core.PersistentArrayMap.EMPTY));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__4513__auto__,writer__4514__auto__,opt__4515__auto__){
return cljs.core._write(writer__4514__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__4513__auto__,writer__4514__auto__,opt__4515__auto__){
return cljs.core._write(writer__4514__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__4513__auto__,writer__4514__auto__,opt__4515__auto__){
return cljs.core._write(writer__4514__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3914__auto__ = !((lt.stepper == null));
if(and__3914__auto__){
return self__.iter.hasNext();
} else {
return and__3914__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__8901 = lt;
var G__8902 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__8901,G__8902) : self__.xform.call(null,G__8901,G__8902));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__8903 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__8903) : self__.xform.call(null,G__8903));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__4513__auto__,writer__4514__auto__,opt__4515__auto__){
return cljs.core._write(writer__4514__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__8905 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__8905) : xform.call(null,G__8905));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__8907 = cljs.core.next(iters__$1);
iters__$1 = G__8907;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__4813__auto___8908 = self__.iters.length;
var i_8909 = (0);
while(true){
if((i_8909 < n__4813__auto___8908)){
(self__.nexts[i_8909] = (self__.iters[i_8909]).next());

var G__8910 = (i_8909 + (1));
i_8909 = G__8910;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3914__auto__ = !((lt.stepper == null));
if(and__3914__auto__){
return this$.hasNext();
} else {
return and__3914__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__8906 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__8906) : self__.xform.call(null,G__8906));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__4513__auto__,writer__4514__auto__,opt__4515__auto__){
return cljs.core._write(writer__4514__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__8915 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__8915) : xform.call(null,G__8915));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__4513__auto__,writer__4514__auto__,opt__4515__auto__){
return cljs.core._write(writer__4514__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4904__auto__ = this;
return cljs.core.es6_iterator(this__4904__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__8916_8920 = cljs.core.seq(colls);
var chunk__8917_8921 = null;
var count__8918_8922 = (0);
var i__8919_8923 = (0);
while(true){
if((i__8919_8923 < count__8918_8922)){
var coll_8924 = chunk__8917_8921.cljs$core$IIndexed$_nth$arity$2(null,i__8919_8923);
iters.push(cljs.core.iter(coll_8924));

var G__8925 = seq__8916_8920;
var G__8926 = chunk__8917_8921;
var G__8927 = count__8918_8922;
var G__8928 = (i__8919_8923 + (1));
seq__8916_8920 = G__8925;
chunk__8917_8921 = G__8926;
count__8918_8922 = G__8927;
i__8919_8923 = G__8928;
continue;
} else {
var temp__4406__auto___8929 = cljs.core.seq(seq__8916_8920);
if(temp__4406__auto___8929){
var seq__8916_8930__$1 = temp__4406__auto___8929;
if(cljs.core.chunked_seq_QMARK_(seq__8916_8930__$1)){
var c__4713__auto___8931 = cljs.core.chunk_first(seq__8916_8930__$1);
var G__8932 = cljs.core.chunk_rest(seq__8916_8930__$1);
var G__8933 = c__4713__auto___8931;
var G__8934 = cljs.core.count(c__4713__auto___8931);
var G__8935 = (0);
seq__8916_8920 = G__8932;
chunk__8917_8921 = G__8933;
count__8918_8922 = G__8934;
i__8919_8923 = G__8935;
continue;
} else {
var coll_8936 = cljs.core.first(seq__8916_8930__$1);
iters.push(cljs.core.iter(coll_8936));

var G__8937 = cljs.core.next(seq__8916_8930__$1);
var G__8938 = null;
var G__8939 = (0);
var G__8940 = (0);
seq__8916_8920 = G__8937;
chunk__8917_8921 = G__8938;
count__8918_8922 = G__8939;
i__8919_8923 = G__8940;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
 * Coerces coll to a (possibly empty) sequence, if it is not already
 * one. Will not force a lazy seq. (sequence nil) yields (), When a
 * transducer is supplied, returns a lazy sequence of applications of
 * the transform to the items in coll(s), i.e. to the set of first
 * items of each coll, followed by the set of second
 * items in each coll, until any one of the colls is exhausted.  Any
 * remaining items in other colls are ignored. The transform should accept
 * number-of-colls arguments
 * @param {...*} var_args
 */
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__3926__auto__ = cljs.core.seq(coll);
if(or__3926__auto__){
return or__3926__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__8941__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__8941 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__8942__i = 0, G__8942__a = new Array(arguments.length -  2);
while (G__8942__i < G__8942__a.length) {G__8942__a[G__8942__i] = arguments[G__8942__i + 2]; ++G__8942__i;}
  colls = new cljs.core.IndexedSeq(G__8942__a,0);
} 
return G__8941__delegate.call(this,xform,coll,colls);};
G__8941.cljs$lang$maxFixedArity = 2;
G__8941.cljs$lang$applyTo = (function (arglist__8943){
var xform = cljs.core.first(arglist__8943);
arglist__8943 = cljs.core.next(arglist__8943);
var coll = cljs.core.first(arglist__8943);
var colls = cljs.core.rest(arglist__8943);
return G__8941__delegate(xform,coll,colls);
});
G__8941.cljs$core$IFn$_invoke$arity$variadic = G__8941__delegate;
return G__8941;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__8944 = null;
if (arguments.length > 2) {
var G__8945__i = 0, G__8945__a = new Array(arguments.length -  2);
while (G__8945__i < G__8945__a.length) {G__8945__a[G__8945__i] = arguments[G__8945__i + 2]; ++G__8945__i;}
G__8944 = new cljs.core.IndexedSeq(G__8945__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__8944);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
 * Returns true if (pred x) is logical true for every x in coll, else
 * false.
 */
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__8947 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8947) : pred.call(null,G__8947));
})())){
var G__8948 = pred;
var G__8949 = cljs.core.next(coll);
pred = G__8948;
coll = G__8949;
continue;
} else {
return false;

}
}
break;
}
});
/**
 * Returns false if (pred x) is logical true for every x in
 * coll, else true.
 */
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
 * Returns the first logical true value of (pred x) for any x in coll,
 * else nil.  One common idiom is to use a set as pred, for example
 * this will return :fred if :fred is in the sequence, otherwise nil:
 * (some #{:fred} coll)
 */
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__3926__auto__ = (function (){var G__8953 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8953) : pred.call(null,G__8953));
})();
if(cljs.core.truth_(or__3926__auto__)){
return or__3926__auto__;
} else {
var G__8954 = pred;
var G__8955 = cljs.core.next(coll);
pred = G__8954;
coll = G__8955;
continue;
}
} else {
return null;
}
break;
}
});
/**
 * Returns false if (pred x) is logical true for any x in coll,
 * else true.
 */
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
 * Returns true if n is even, throws an exception if n is not an integer
 */
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
 * Returns true if n is odd, throws an exception if n is not an integer
 */
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
 * Takes a fn f and returns a fn that takes the same arguments as f,
 * has the same effects, if any, and returns the opposite truth value.
 */
cljs.core.complement = (function complement(f){
return (function() {
var G__8962 = null;
var G__8962__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__8962__1 = (function (x){
return cljs.core.not((function (){var G__8959 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8959) : f.call(null,G__8959));
})());
});
var G__8962__2 = (function (x,y){
return cljs.core.not((function (){var G__8960 = x;
var G__8961 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8960,G__8961) : f.call(null,G__8960,G__8961));
})());
});
var G__8962__3 = (function() { 
var G__8963__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__8963 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__8964__i = 0, G__8964__a = new Array(arguments.length -  2);
while (G__8964__i < G__8964__a.length) {G__8964__a[G__8964__i] = arguments[G__8964__i + 2]; ++G__8964__i;}
  zs = new cljs.core.IndexedSeq(G__8964__a,0);
} 
return G__8963__delegate.call(this,x,y,zs);};
G__8963.cljs$lang$maxFixedArity = 2;
G__8963.cljs$lang$applyTo = (function (arglist__8965){
var x = cljs.core.first(arglist__8965);
arglist__8965 = cljs.core.next(arglist__8965);
var y = cljs.core.first(arglist__8965);
var zs = cljs.core.rest(arglist__8965);
return G__8963__delegate(x,y,zs);
});
G__8963.cljs$core$IFn$_invoke$arity$variadic = G__8963__delegate;
return G__8963;
})()
;
G__8962 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__8962__0.call(this);
case 1:
return G__8962__1.call(this,x);
case 2:
return G__8962__2.call(this,x,y);
default:
var G__8966 = null;
if (arguments.length > 2) {
var G__8967__i = 0, G__8967__a = new Array(arguments.length -  2);
while (G__8967__i < G__8967__a.length) {G__8967__a[G__8967__i] = arguments[G__8967__i + 2]; ++G__8967__i;}
G__8966 = new cljs.core.IndexedSeq(G__8967__a,0);
}
return G__8962__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8966);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8962.cljs$lang$maxFixedArity = 2;
G__8962.cljs$lang$applyTo = G__8962__3.cljs$lang$applyTo;
G__8962.cljs$core$IFn$_invoke$arity$0 = G__8962__0;
G__8962.cljs$core$IFn$_invoke$arity$1 = G__8962__1;
G__8962.cljs$core$IFn$_invoke$arity$2 = G__8962__2;
G__8962.cljs$core$IFn$_invoke$arity$variadic = G__8962__3.cljs$core$IFn$_invoke$arity$variadic;
return G__8962;
})()
});
/**
 * Returns a function that takes any number of arguments and returns x.
 */
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__8968__delegate = function (args){
return x;
};
var G__8968 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__8969__i = 0, G__8969__a = new Array(arguments.length -  0);
while (G__8969__i < G__8969__a.length) {G__8969__a[G__8969__i] = arguments[G__8969__i + 0]; ++G__8969__i;}
  args = new cljs.core.IndexedSeq(G__8969__a,0);
} 
return G__8968__delegate.call(this,args);};
G__8968.cljs$lang$maxFixedArity = 0;
G__8968.cljs$lang$applyTo = (function (arglist__8970){
var args = cljs.core.seq(arglist__8970);
return G__8968__delegate(args);
});
G__8968.cljs$core$IFn$_invoke$arity$variadic = G__8968__delegate;
return G__8968;
})()
;
});
/**
 * Takes a set of functions and returns a fn that is the composition
 * of those fns.  The returned fn takes a variable number of args,
 * applies the rightmost of fns to the args, the next
 * fn (right-to-left) to the result, etc.
 * @param {...*} var_args
 */
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__9025 = null;
var G__9025__0 = (function (){
var G__8998 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8998) : f.call(null,G__8998));
});
var G__9025__1 = (function (x){
var G__8999 = (function (){var G__9000 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9000) : g.call(null,G__9000));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8999) : f.call(null,G__8999));
});
var G__9025__2 = (function (x,y){
var G__9001 = (function (){var G__9002 = x;
var G__9003 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__9002,G__9003) : g.call(null,G__9002,G__9003));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9001) : f.call(null,G__9001));
});
var G__9025__3 = (function (x,y,z){
var G__9004 = (function (){var G__9005 = x;
var G__9006 = y;
var G__9007 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__9005,G__9006,G__9007) : g.call(null,G__9005,G__9006,G__9007));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9004) : f.call(null,G__9004));
});
var G__9025__4 = (function() { 
var G__9026__delegate = function (x,y,z,args){
var G__9008 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9008) : f.call(null,G__9008));
};
var G__9026 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9027__i = 0, G__9027__a = new Array(arguments.length -  3);
while (G__9027__i < G__9027__a.length) {G__9027__a[G__9027__i] = arguments[G__9027__i + 3]; ++G__9027__i;}
  args = new cljs.core.IndexedSeq(G__9027__a,0);
} 
return G__9026__delegate.call(this,x,y,z,args);};
G__9026.cljs$lang$maxFixedArity = 3;
G__9026.cljs$lang$applyTo = (function (arglist__9028){
var x = cljs.core.first(arglist__9028);
arglist__9028 = cljs.core.next(arglist__9028);
var y = cljs.core.first(arglist__9028);
arglist__9028 = cljs.core.next(arglist__9028);
var z = cljs.core.first(arglist__9028);
var args = cljs.core.rest(arglist__9028);
return G__9026__delegate(x,y,z,args);
});
G__9026.cljs$core$IFn$_invoke$arity$variadic = G__9026__delegate;
return G__9026;
})()
;
G__9025 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__9025__0.call(this);
case 1:
return G__9025__1.call(this,x);
case 2:
return G__9025__2.call(this,x,y);
case 3:
return G__9025__3.call(this,x,y,z);
default:
var G__9029 = null;
if (arguments.length > 3) {
var G__9030__i = 0, G__9030__a = new Array(arguments.length -  3);
while (G__9030__i < G__9030__a.length) {G__9030__a[G__9030__i] = arguments[G__9030__i + 3]; ++G__9030__i;}
G__9029 = new cljs.core.IndexedSeq(G__9030__a,0);
}
return G__9025__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9029);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9025.cljs$lang$maxFixedArity = 3;
G__9025.cljs$lang$applyTo = G__9025__4.cljs$lang$applyTo;
G__9025.cljs$core$IFn$_invoke$arity$0 = G__9025__0;
G__9025.cljs$core$IFn$_invoke$arity$1 = G__9025__1;
G__9025.cljs$core$IFn$_invoke$arity$2 = G__9025__2;
G__9025.cljs$core$IFn$_invoke$arity$3 = G__9025__3;
G__9025.cljs$core$IFn$_invoke$arity$variadic = G__9025__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9025;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__9031 = null;
var G__9031__0 = (function (){
var G__9009 = (function (){var G__9010 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9010) : g.call(null,G__9010));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9009) : f.call(null,G__9009));
});
var G__9031__1 = (function (x){
var G__9011 = (function (){var G__9012 = (function (){var G__9013 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__9013) : h.call(null,G__9013));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9012) : g.call(null,G__9012));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9011) : f.call(null,G__9011));
});
var G__9031__2 = (function (x,y){
var G__9014 = (function (){var G__9015 = (function (){var G__9016 = x;
var G__9017 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__9016,G__9017) : h.call(null,G__9016,G__9017));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9015) : g.call(null,G__9015));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9014) : f.call(null,G__9014));
});
var G__9031__3 = (function (x,y,z){
var G__9018 = (function (){var G__9019 = (function (){var G__9020 = x;
var G__9021 = y;
var G__9022 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__9020,G__9021,G__9022) : h.call(null,G__9020,G__9021,G__9022));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9019) : g.call(null,G__9019));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9018) : f.call(null,G__9018));
});
var G__9031__4 = (function() { 
var G__9032__delegate = function (x,y,z,args){
var G__9023 = (function (){var G__9024 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9024) : g.call(null,G__9024));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9023) : f.call(null,G__9023));
};
var G__9032 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9033__i = 0, G__9033__a = new Array(arguments.length -  3);
while (G__9033__i < G__9033__a.length) {G__9033__a[G__9033__i] = arguments[G__9033__i + 3]; ++G__9033__i;}
  args = new cljs.core.IndexedSeq(G__9033__a,0);
} 
return G__9032__delegate.call(this,x,y,z,args);};
G__9032.cljs$lang$maxFixedArity = 3;
G__9032.cljs$lang$applyTo = (function (arglist__9034){
var x = cljs.core.first(arglist__9034);
arglist__9034 = cljs.core.next(arglist__9034);
var y = cljs.core.first(arglist__9034);
arglist__9034 = cljs.core.next(arglist__9034);
var z = cljs.core.first(arglist__9034);
var args = cljs.core.rest(arglist__9034);
return G__9032__delegate(x,y,z,args);
});
G__9032.cljs$core$IFn$_invoke$arity$variadic = G__9032__delegate;
return G__9032;
})()
;
G__9031 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__9031__0.call(this);
case 1:
return G__9031__1.call(this,x);
case 2:
return G__9031__2.call(this,x,y);
case 3:
return G__9031__3.call(this,x,y,z);
default:
var G__9035 = null;
if (arguments.length > 3) {
var G__9036__i = 0, G__9036__a = new Array(arguments.length -  3);
while (G__9036__i < G__9036__a.length) {G__9036__a[G__9036__i] = arguments[G__9036__i + 3]; ++G__9036__i;}
G__9035 = new cljs.core.IndexedSeq(G__9036__a,0);
}
return G__9031__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9035);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9031.cljs$lang$maxFixedArity = 3;
G__9031.cljs$lang$applyTo = G__9031__4.cljs$lang$applyTo;
G__9031.cljs$core$IFn$_invoke$arity$0 = G__9031__0;
G__9031.cljs$core$IFn$_invoke$arity$1 = G__9031__1;
G__9031.cljs$core$IFn$_invoke$arity$2 = G__9031__2;
G__9031.cljs$core$IFn$_invoke$arity$3 = G__9031__3;
G__9031.cljs$core$IFn$_invoke$arity$variadic = G__9031__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9031;
})()
});
var comp__4 = (function() { 
var G__9037__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__9038__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__9039 = cljs.core.first(fs__$2).call(null,ret);
var G__9040 = cljs.core.next(fs__$2);
ret = G__9039;
fs__$2 = G__9040;
continue;
} else {
return ret;
}
break;
}
};
var G__9038 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__9041__i = 0, G__9041__a = new Array(arguments.length -  0);
while (G__9041__i < G__9041__a.length) {G__9041__a[G__9041__i] = arguments[G__9041__i + 0]; ++G__9041__i;}
  args = new cljs.core.IndexedSeq(G__9041__a,0);
} 
return G__9038__delegate.call(this,args);};
G__9038.cljs$lang$maxFixedArity = 0;
G__9038.cljs$lang$applyTo = (function (arglist__9042){
var args = cljs.core.seq(arglist__9042);
return G__9038__delegate(args);
});
G__9038.cljs$core$IFn$_invoke$arity$variadic = G__9038__delegate;
return G__9038;
})()
;
;})(fs__$1))
};
var G__9037 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__9043__i = 0, G__9043__a = new Array(arguments.length -  3);
while (G__9043__i < G__9043__a.length) {G__9043__a[G__9043__i] = arguments[G__9043__i + 3]; ++G__9043__i;}
  fs = new cljs.core.IndexedSeq(G__9043__a,0);
} 
return G__9037__delegate.call(this,f1,f2,f3,fs);};
G__9037.cljs$lang$maxFixedArity = 3;
G__9037.cljs$lang$applyTo = (function (arglist__9044){
var f1 = cljs.core.first(arglist__9044);
arglist__9044 = cljs.core.next(arglist__9044);
var f2 = cljs.core.first(arglist__9044);
arglist__9044 = cljs.core.next(arglist__9044);
var f3 = cljs.core.first(arglist__9044);
var fs = cljs.core.rest(arglist__9044);
return G__9037__delegate(f1,f2,f3,fs);
});
G__9037.cljs$core$IFn$_invoke$arity$variadic = G__9037__delegate;
return G__9037;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__9045 = null;
if (arguments.length > 3) {
var G__9046__i = 0, G__9046__a = new Array(arguments.length -  3);
while (G__9046__i < G__9046__a.length) {G__9046__a[G__9046__i] = arguments[G__9046__i + 3]; ++G__9046__i;}
G__9045 = new cljs.core.IndexedSeq(G__9046__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__9045);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
 * Takes a function f and fewer than the normal arguments to f, and
 * returns a fn that takes a variable number of additional args. When
 * called, the returned function calls f with args + additional args.
 * @param {...*} var_args
 */
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__9131 = null;
var G__9131__0 = (function (){
var G__9089 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9089) : f.call(null,G__9089));
});
var G__9131__1 = (function (x){
var G__9090 = arg1;
var G__9091 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9090,G__9091) : f.call(null,G__9090,G__9091));
});
var G__9131__2 = (function (x,y){
var G__9092 = arg1;
var G__9093 = x;
var G__9094 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9092,G__9093,G__9094) : f.call(null,G__9092,G__9093,G__9094));
});
var G__9131__3 = (function (x,y,z){
var G__9095 = arg1;
var G__9096 = x;
var G__9097 = y;
var G__9098 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9095,G__9096,G__9097,G__9098) : f.call(null,G__9095,G__9096,G__9097,G__9098));
});
var G__9131__4 = (function() { 
var G__9132__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__9132 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9133__i = 0, G__9133__a = new Array(arguments.length -  3);
while (G__9133__i < G__9133__a.length) {G__9133__a[G__9133__i] = arguments[G__9133__i + 3]; ++G__9133__i;}
  args = new cljs.core.IndexedSeq(G__9133__a,0);
} 
return G__9132__delegate.call(this,x,y,z,args);};
G__9132.cljs$lang$maxFixedArity = 3;
G__9132.cljs$lang$applyTo = (function (arglist__9134){
var x = cljs.core.first(arglist__9134);
arglist__9134 = cljs.core.next(arglist__9134);
var y = cljs.core.first(arglist__9134);
arglist__9134 = cljs.core.next(arglist__9134);
var z = cljs.core.first(arglist__9134);
var args = cljs.core.rest(arglist__9134);
return G__9132__delegate(x,y,z,args);
});
G__9132.cljs$core$IFn$_invoke$arity$variadic = G__9132__delegate;
return G__9132;
})()
;
G__9131 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__9131__0.call(this);
case 1:
return G__9131__1.call(this,x);
case 2:
return G__9131__2.call(this,x,y);
case 3:
return G__9131__3.call(this,x,y,z);
default:
var G__9135 = null;
if (arguments.length > 3) {
var G__9136__i = 0, G__9136__a = new Array(arguments.length -  3);
while (G__9136__i < G__9136__a.length) {G__9136__a[G__9136__i] = arguments[G__9136__i + 3]; ++G__9136__i;}
G__9135 = new cljs.core.IndexedSeq(G__9136__a,0);
}
return G__9131__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9135);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9131.cljs$lang$maxFixedArity = 3;
G__9131.cljs$lang$applyTo = G__9131__4.cljs$lang$applyTo;
G__9131.cljs$core$IFn$_invoke$arity$0 = G__9131__0;
G__9131.cljs$core$IFn$_invoke$arity$1 = G__9131__1;
G__9131.cljs$core$IFn$_invoke$arity$2 = G__9131__2;
G__9131.cljs$core$IFn$_invoke$arity$3 = G__9131__3;
G__9131.cljs$core$IFn$_invoke$arity$variadic = G__9131__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9131;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__9137 = null;
var G__9137__0 = (function (){
var G__9099 = arg1;
var G__9100 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9099,G__9100) : f.call(null,G__9099,G__9100));
});
var G__9137__1 = (function (x){
var G__9101 = arg1;
var G__9102 = arg2;
var G__9103 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9101,G__9102,G__9103) : f.call(null,G__9101,G__9102,G__9103));
});
var G__9137__2 = (function (x,y){
var G__9104 = arg1;
var G__9105 = arg2;
var G__9106 = x;
var G__9107 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9104,G__9105,G__9106,G__9107) : f.call(null,G__9104,G__9105,G__9106,G__9107));
});
var G__9137__3 = (function (x,y,z){
var G__9108 = arg1;
var G__9109 = arg2;
var G__9110 = x;
var G__9111 = y;
var G__9112 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__9108,G__9109,G__9110,G__9111,G__9112) : f.call(null,G__9108,G__9109,G__9110,G__9111,G__9112));
});
var G__9137__4 = (function() { 
var G__9138__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__9138 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9139__i = 0, G__9139__a = new Array(arguments.length -  3);
while (G__9139__i < G__9139__a.length) {G__9139__a[G__9139__i] = arguments[G__9139__i + 3]; ++G__9139__i;}
  args = new cljs.core.IndexedSeq(G__9139__a,0);
} 
return G__9138__delegate.call(this,x,y,z,args);};
G__9138.cljs$lang$maxFixedArity = 3;
G__9138.cljs$lang$applyTo = (function (arglist__9140){
var x = cljs.core.first(arglist__9140);
arglist__9140 = cljs.core.next(arglist__9140);
var y = cljs.core.first(arglist__9140);
arglist__9140 = cljs.core.next(arglist__9140);
var z = cljs.core.first(arglist__9140);
var args = cljs.core.rest(arglist__9140);
return G__9138__delegate(x,y,z,args);
});
G__9138.cljs$core$IFn$_invoke$arity$variadic = G__9138__delegate;
return G__9138;
})()
;
G__9137 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__9137__0.call(this);
case 1:
return G__9137__1.call(this,x);
case 2:
return G__9137__2.call(this,x,y);
case 3:
return G__9137__3.call(this,x,y,z);
default:
var G__9141 = null;
if (arguments.length > 3) {
var G__9142__i = 0, G__9142__a = new Array(arguments.length -  3);
while (G__9142__i < G__9142__a.length) {G__9142__a[G__9142__i] = arguments[G__9142__i + 3]; ++G__9142__i;}
G__9141 = new cljs.core.IndexedSeq(G__9142__a,0);
}
return G__9137__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9141);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9137.cljs$lang$maxFixedArity = 3;
G__9137.cljs$lang$applyTo = G__9137__4.cljs$lang$applyTo;
G__9137.cljs$core$IFn$_invoke$arity$0 = G__9137__0;
G__9137.cljs$core$IFn$_invoke$arity$1 = G__9137__1;
G__9137.cljs$core$IFn$_invoke$arity$2 = G__9137__2;
G__9137.cljs$core$IFn$_invoke$arity$3 = G__9137__3;
G__9137.cljs$core$IFn$_invoke$arity$variadic = G__9137__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9137;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__9143 = null;
var G__9143__0 = (function (){
var G__9113 = arg1;
var G__9114 = arg2;
var G__9115 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9113,G__9114,G__9115) : f.call(null,G__9113,G__9114,G__9115));
});
var G__9143__1 = (function (x){
var G__9116 = arg1;
var G__9117 = arg2;
var G__9118 = arg3;
var G__9119 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9116,G__9117,G__9118,G__9119) : f.call(null,G__9116,G__9117,G__9118,G__9119));
});
var G__9143__2 = (function (x,y){
var G__9120 = arg1;
var G__9121 = arg2;
var G__9122 = arg3;
var G__9123 = x;
var G__9124 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__9120,G__9121,G__9122,G__9123,G__9124) : f.call(null,G__9120,G__9121,G__9122,G__9123,G__9124));
});
var G__9143__3 = (function (x,y,z){
var G__9125 = arg1;
var G__9126 = arg2;
var G__9127 = arg3;
var G__9128 = x;
var G__9129 = y;
var G__9130 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__9125,G__9126,G__9127,G__9128,G__9129,G__9130) : f.call(null,G__9125,G__9126,G__9127,G__9128,G__9129,G__9130));
});
var G__9143__4 = (function() { 
var G__9144__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__9144 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9145__i = 0, G__9145__a = new Array(arguments.length -  3);
while (G__9145__i < G__9145__a.length) {G__9145__a[G__9145__i] = arguments[G__9145__i + 3]; ++G__9145__i;}
  args = new cljs.core.IndexedSeq(G__9145__a,0);
} 
return G__9144__delegate.call(this,x,y,z,args);};
G__9144.cljs$lang$maxFixedArity = 3;
G__9144.cljs$lang$applyTo = (function (arglist__9146){
var x = cljs.core.first(arglist__9146);
arglist__9146 = cljs.core.next(arglist__9146);
var y = cljs.core.first(arglist__9146);
arglist__9146 = cljs.core.next(arglist__9146);
var z = cljs.core.first(arglist__9146);
var args = cljs.core.rest(arglist__9146);
return G__9144__delegate(x,y,z,args);
});
G__9144.cljs$core$IFn$_invoke$arity$variadic = G__9144__delegate;
return G__9144;
})()
;
G__9143 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__9143__0.call(this);
case 1:
return G__9143__1.call(this,x);
case 2:
return G__9143__2.call(this,x,y);
case 3:
return G__9143__3.call(this,x,y,z);
default:
var G__9147 = null;
if (arguments.length > 3) {
var G__9148__i = 0, G__9148__a = new Array(arguments.length -  3);
while (G__9148__i < G__9148__a.length) {G__9148__a[G__9148__i] = arguments[G__9148__i + 3]; ++G__9148__i;}
G__9147 = new cljs.core.IndexedSeq(G__9148__a,0);
}
return G__9143__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9147);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9143.cljs$lang$maxFixedArity = 3;
G__9143.cljs$lang$applyTo = G__9143__4.cljs$lang$applyTo;
G__9143.cljs$core$IFn$_invoke$arity$0 = G__9143__0;
G__9143.cljs$core$IFn$_invoke$arity$1 = G__9143__1;
G__9143.cljs$core$IFn$_invoke$arity$2 = G__9143__2;
G__9143.cljs$core$IFn$_invoke$arity$3 = G__9143__3;
G__9143.cljs$core$IFn$_invoke$arity$variadic = G__9143__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9143;
})()
});
var partial__5 = (function() { 
var G__9149__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__9150__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__9150 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__9151__i = 0, G__9151__a = new Array(arguments.length -  0);
while (G__9151__i < G__9151__a.length) {G__9151__a[G__9151__i] = arguments[G__9151__i + 0]; ++G__9151__i;}
  args = new cljs.core.IndexedSeq(G__9151__a,0);
} 
return G__9150__delegate.call(this,args);};
G__9150.cljs$lang$maxFixedArity = 0;
G__9150.cljs$lang$applyTo = (function (arglist__9152){
var args = cljs.core.seq(arglist__9152);
return G__9150__delegate(args);
});
G__9150.cljs$core$IFn$_invoke$arity$variadic = G__9150__delegate;
return G__9150;
})()
;
};
var G__9149 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__9153__i = 0, G__9153__a = new Array(arguments.length -  4);
while (G__9153__i < G__9153__a.length) {G__9153__a[G__9153__i] = arguments[G__9153__i + 4]; ++G__9153__i;}
  more = new cljs.core.IndexedSeq(G__9153__a,0);
} 
return G__9149__delegate.call(this,f,arg1,arg2,arg3,more);};
G__9149.cljs$lang$maxFixedArity = 4;
G__9149.cljs$lang$applyTo = (function (arglist__9154){
var f = cljs.core.first(arglist__9154);
arglist__9154 = cljs.core.next(arglist__9154);
var arg1 = cljs.core.first(arglist__9154);
arglist__9154 = cljs.core.next(arglist__9154);
var arg2 = cljs.core.first(arglist__9154);
arglist__9154 = cljs.core.next(arglist__9154);
var arg3 = cljs.core.first(arglist__9154);
var more = cljs.core.rest(arglist__9154);
return G__9149__delegate(f,arg1,arg2,arg3,more);
});
G__9149.cljs$core$IFn$_invoke$arity$variadic = G__9149__delegate;
return G__9149;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__9155 = null;
if (arguments.length > 4) {
var G__9156__i = 0, G__9156__a = new Array(arguments.length -  4);
while (G__9156__i < G__9156__a.length) {G__9156__a[G__9156__i] = arguments[G__9156__i + 4]; ++G__9156__i;}
G__9155 = new cljs.core.IndexedSeq(G__9156__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__9155);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
 * Takes a function f, and returns a function that calls f, replacing
 * a nil first argument to f with the supplied value x. Higher arity
 * versions can replace arguments in the second and third
 * positions (y, z). Note that the function f can take any number of
 * arguments, not just the one(s) being nil-patched.
 */
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__9189 = null;
var G__9189__1 = (function (a){
var G__9173 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9173) : f.call(null,G__9173));
});
var G__9189__2 = (function (a,b){
var G__9174 = (((a == null))?x:a);
var G__9175 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9174,G__9175) : f.call(null,G__9174,G__9175));
});
var G__9189__3 = (function (a,b,c){
var G__9176 = (((a == null))?x:a);
var G__9177 = b;
var G__9178 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9176,G__9177,G__9178) : f.call(null,G__9176,G__9177,G__9178));
});
var G__9189__4 = (function() { 
var G__9190__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__9190 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__9191__i = 0, G__9191__a = new Array(arguments.length -  3);
while (G__9191__i < G__9191__a.length) {G__9191__a[G__9191__i] = arguments[G__9191__i + 3]; ++G__9191__i;}
  ds = new cljs.core.IndexedSeq(G__9191__a,0);
} 
return G__9190__delegate.call(this,a,b,c,ds);};
G__9190.cljs$lang$maxFixedArity = 3;
G__9190.cljs$lang$applyTo = (function (arglist__9192){
var a = cljs.core.first(arglist__9192);
arglist__9192 = cljs.core.next(arglist__9192);
var b = cljs.core.first(arglist__9192);
arglist__9192 = cljs.core.next(arglist__9192);
var c = cljs.core.first(arglist__9192);
var ds = cljs.core.rest(arglist__9192);
return G__9190__delegate(a,b,c,ds);
});
G__9190.cljs$core$IFn$_invoke$arity$variadic = G__9190__delegate;
return G__9190;
})()
;
G__9189 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__9189__1.call(this,a);
case 2:
return G__9189__2.call(this,a,b);
case 3:
return G__9189__3.call(this,a,b,c);
default:
var G__9193 = null;
if (arguments.length > 3) {
var G__9194__i = 0, G__9194__a = new Array(arguments.length -  3);
while (G__9194__i < G__9194__a.length) {G__9194__a[G__9194__i] = arguments[G__9194__i + 3]; ++G__9194__i;}
G__9193 = new cljs.core.IndexedSeq(G__9194__a,0);
}
return G__9189__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__9193);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9189.cljs$lang$maxFixedArity = 3;
G__9189.cljs$lang$applyTo = G__9189__4.cljs$lang$applyTo;
G__9189.cljs$core$IFn$_invoke$arity$1 = G__9189__1;
G__9189.cljs$core$IFn$_invoke$arity$2 = G__9189__2;
G__9189.cljs$core$IFn$_invoke$arity$3 = G__9189__3;
G__9189.cljs$core$IFn$_invoke$arity$variadic = G__9189__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9189;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__9195 = null;
var G__9195__2 = (function (a,b){
var G__9179 = (((a == null))?x:a);
var G__9180 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9179,G__9180) : f.call(null,G__9179,G__9180));
});
var G__9195__3 = (function (a,b,c){
var G__9181 = (((a == null))?x:a);
var G__9182 = (((b == null))?y:b);
var G__9183 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9181,G__9182,G__9183) : f.call(null,G__9181,G__9182,G__9183));
});
var G__9195__4 = (function() { 
var G__9196__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__9196 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__9197__i = 0, G__9197__a = new Array(arguments.length -  3);
while (G__9197__i < G__9197__a.length) {G__9197__a[G__9197__i] = arguments[G__9197__i + 3]; ++G__9197__i;}
  ds = new cljs.core.IndexedSeq(G__9197__a,0);
} 
return G__9196__delegate.call(this,a,b,c,ds);};
G__9196.cljs$lang$maxFixedArity = 3;
G__9196.cljs$lang$applyTo = (function (arglist__9198){
var a = cljs.core.first(arglist__9198);
arglist__9198 = cljs.core.next(arglist__9198);
var b = cljs.core.first(arglist__9198);
arglist__9198 = cljs.core.next(arglist__9198);
var c = cljs.core.first(arglist__9198);
var ds = cljs.core.rest(arglist__9198);
return G__9196__delegate(a,b,c,ds);
});
G__9196.cljs$core$IFn$_invoke$arity$variadic = G__9196__delegate;
return G__9196;
})()
;
G__9195 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__9195__2.call(this,a,b);
case 3:
return G__9195__3.call(this,a,b,c);
default:
var G__9199 = null;
if (arguments.length > 3) {
var G__9200__i = 0, G__9200__a = new Array(arguments.length -  3);
while (G__9200__i < G__9200__a.length) {G__9200__a[G__9200__i] = arguments[G__9200__i + 3]; ++G__9200__i;}
G__9199 = new cljs.core.IndexedSeq(G__9200__a,0);
}
return G__9195__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__9199);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9195.cljs$lang$maxFixedArity = 3;
G__9195.cljs$lang$applyTo = G__9195__4.cljs$lang$applyTo;
G__9195.cljs$core$IFn$_invoke$arity$2 = G__9195__2;
G__9195.cljs$core$IFn$_invoke$arity$3 = G__9195__3;
G__9195.cljs$core$IFn$_invoke$arity$variadic = G__9195__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9195;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__9201 = null;
var G__9201__2 = (function (a,b){
var G__9184 = (((a == null))?x:a);
var G__9185 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9184,G__9185) : f.call(null,G__9184,G__9185));
});
var G__9201__3 = (function (a,b,c){
var G__9186 = (((a == null))?x:a);
var G__9187 = (((b == null))?y:b);
var G__9188 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9186,G__9187,G__9188) : f.call(null,G__9186,G__9187,G__9188));
});
var G__9201__4 = (function() { 
var G__9202__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__9202 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__9203__i = 0, G__9203__a = new Array(arguments.length -  3);
while (G__9203__i < G__9203__a.length) {G__9203__a[G__9203__i] = arguments[G__9203__i + 3]; ++G__9203__i;}
  ds = new cljs.core.IndexedSeq(G__9203__a,0);
} 
return G__9202__delegate.call(this,a,b,c,ds);};
G__9202.cljs$lang$maxFixedArity = 3;
G__9202.cljs$lang$applyTo = (function (arglist__9204){
var a = cljs.core.first(arglist__9204);
arglist__9204 = cljs.core.next(arglist__9204);
var b = cljs.core.first(arglist__9204);
arglist__9204 = cljs.core.next(arglist__9204);
var c = cljs.core.first(arglist__9204);
var ds = cljs.core.rest(arglist__9204);
return G__9202__delegate(a,b,c,ds);
});
G__9202.cljs$core$IFn$_invoke$arity$variadic = G__9202__delegate;
return G__9202;
})()
;
G__9201 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__9201__2.call(this,a,b);
case 3:
return G__9201__3.call(this,a,b,c);
default:
var G__9205 = null;
if (arguments.length > 3) {
var G__9206__i = 0, G__9206__a = new Array(arguments.length -  3);
while (G__9206__i < G__9206__a.length) {G__9206__a[G__9206__i] = arguments[G__9206__i + 3]; ++G__9206__i;}
G__9205 = new cljs.core.IndexedSeq(G__9206__a,0);
}
return G__9201__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__9205);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9201.cljs$lang$maxFixedArity = 3;
G__9201.cljs$lang$applyTo = G__9201__4.cljs$lang$applyTo;
G__9201.cljs$core$IFn$_invoke$arity$2 = G__9201__2;
G__9201.cljs$core$IFn$_invoke$arity$3 = G__9201__3;
G__9201.cljs$core$IFn$_invoke$arity$variadic = G__9201__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9201;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
 * Returns a lazy sequence consisting of the result of applying f to 0
 * and the first item of coll, followed by applying f to 1 and the second
 * item in coll, etc, until coll is exhausted. Thus function f should
 * accept 2 arguments, index and item.
 */
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__9237 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__9237) : cljs.core.volatile_BANG_.call(null,G__9237));
})();
return ((function (i){
return (function() {
var G__9267 = null;
var G__9267__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9267__1 = (function (result){
var G__9238 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9238) : rf.call(null,G__9238));
});
var G__9267__2 = (function (result,input){
var G__9239 = result;
var G__9240 = (function (){var G__9241 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__9242 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9241,G__9242) : f.call(null,G__9241,G__9242));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9239,G__9240) : rf.call(null,G__9239,G__9240));
});
G__9267 = function(result,input){
switch(arguments.length){
case 0:
return G__9267__0.call(this);
case 1:
return G__9267__1.call(this,result);
case 2:
return G__9267__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9267.cljs$core$IFn$_invoke$arity$0 = G__9267__0;
G__9267.cljs$core$IFn$_invoke$arity$1 = G__9267__1;
G__9267.cljs$core$IFn$_invoke$arity$2 = G__9267__2;
return G__9267;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll__$1);
if(temp__4406__auto__){
var s = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4813__auto___9268 = size;
var i_9269 = (0);
while(true){
if((i_9269 < n__4813__auto___9268)){
cljs.core.chunk_append(b,(function (){var G__9263 = (idx + i_9269);
var G__9264 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_9269);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9263,G__9264) : f.call(null,G__9263,G__9264));
})());

var G__9270 = (i_9269 + (1));
i_9269 = G__9270;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__9265 = idx;
var G__9266 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9265,G__9266) : f.call(null,G__9265,G__9266));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
 * Returns a lazy sequence of the non-nil results of (f item). Note,
 * this means false return values will be included.  f must be free of
 * side-effects.  Returns a transducer when no collection is provided.
 */
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__9289 = null;
var G__9289__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9289__1 = (function (result){
var G__9283 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9283) : rf.call(null,G__9283));
});
var G__9289__2 = (function (result,input){
var v = (function (){var G__9284 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9284) : f.call(null,G__9284));
})();
if((v == null)){
return result;
} else {
var G__9285 = result;
var G__9286 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9285,G__9286) : rf.call(null,G__9285,G__9286));
}
});
G__9289 = function(result,input){
switch(arguments.length){
case 0:
return G__9289__0.call(this);
case 1:
return G__9289__1.call(this,result);
case 2:
return G__9289__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9289.cljs$core$IFn$_invoke$arity$0 = G__9289__0;
G__9289.cljs$core$IFn$_invoke$arity$1 = G__9289__1;
G__9289.cljs$core$IFn$_invoke$arity$2 = G__9289__2;
return G__9289;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4813__auto___9290 = size;
var i_9291 = (0);
while(true){
if((i_9291 < n__4813__auto___9290)){
var x_9292 = (function (){var G__9287 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_9291);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9287) : f.call(null,G__9287));
})();
if((x_9292 == null)){
} else {
cljs.core.chunk_append(b,x_9292);
}

var G__9293 = (i_9291 + (1));
i_9291 = G__9293;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__9288 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9288) : f.call(null,G__9288));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__9294 = this$__$1;
return goog.getUid(G__9294);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__9295 = cljs.core.seq(self__.watches);
var chunk__9296 = null;
var count__9297 = (0);
var i__9298 = (0);
while(true){
if((i__9298 < count__9297)){
var vec__9299 = chunk__9296.cljs$core$IIndexed$_nth$arity$2(null,i__9298);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9299,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9299,(1),null);
var G__9300_9309 = key;
var G__9301_9310 = this$__$1;
var G__9302_9311 = oldval;
var G__9303_9312 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9300_9309,G__9301_9310,G__9302_9311,G__9303_9312) : f.call(null,G__9300_9309,G__9301_9310,G__9302_9311,G__9303_9312));

var G__9313 = seq__9295;
var G__9314 = chunk__9296;
var G__9315 = count__9297;
var G__9316 = (i__9298 + (1));
seq__9295 = G__9313;
chunk__9296 = G__9314;
count__9297 = G__9315;
i__9298 = G__9316;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__9295);
if(temp__4406__auto__){
var seq__9295__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__9295__$1)){
var c__4713__auto__ = cljs.core.chunk_first(seq__9295__$1);
var G__9317 = cljs.core.chunk_rest(seq__9295__$1);
var G__9318 = c__4713__auto__;
var G__9319 = cljs.core.count(c__4713__auto__);
var G__9320 = (0);
seq__9295 = G__9317;
chunk__9296 = G__9318;
count__9297 = G__9319;
i__9298 = G__9320;
continue;
} else {
var vec__9304 = cljs.core.first(seq__9295__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9304,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9304,(1),null);
var G__9305_9321 = key;
var G__9306_9322 = this$__$1;
var G__9307_9323 = oldval;
var G__9308_9324 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9305_9321,G__9306_9322,G__9307_9323,G__9308_9324) : f.call(null,G__9305_9321,G__9306_9322,G__9307_9323,G__9308_9324));

var G__9325 = cljs.core.next(seq__9295__$1);
var G__9326 = null;
var G__9327 = (0);
var G__9328 = (0);
seq__9295 = G__9325;
chunk__9296 = G__9326;
count__9297 = G__9327;
i__9298 = G__9328;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__4513__auto__,writer__4514__auto__,opt__4515__auto__){
return cljs.core._write(writer__4514__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
 * Creates and returns an Atom with an initial value of x and zero or
 * more options (in any order):
 * 
 * :meta metadata-map
 * 
 * :validator validate-fn
 * 
 * If metadata-map is supplied, it will be come the metadata on the
 * atom. validate-fn must be nil or a side-effect-free fn of one
 * argument, which will be passed the intended new state on any state
 * change. If the new state is unacceptable, the validate-fn should
 * return false or throw an Error.  If either of these error conditions
 * occur, then the value of the atom will not change.
 * @param {...*} var_args
 */
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__9332__delegate = function (x,p__9329){
var map__9331 = p__9329;
var map__9331__$1 = ((cljs.core.seq_QMARK_(map__9331))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__9331):map__9331);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9331__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9331__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__9332 = function (x,var_args){
var p__9329 = null;
if (arguments.length > 1) {
var G__9333__i = 0, G__9333__a = new Array(arguments.length -  1);
while (G__9333__i < G__9333__a.length) {G__9333__a[G__9333__i] = arguments[G__9333__i + 1]; ++G__9333__i;}
  p__9329 = new cljs.core.IndexedSeq(G__9333__a,0);
} 
return G__9332__delegate.call(this,x,p__9329);};
G__9332.cljs$lang$maxFixedArity = 1;
G__9332.cljs$lang$applyTo = (function (arglist__9334){
var x = cljs.core.first(arglist__9334);
var p__9329 = cljs.core.rest(arglist__9334);
return G__9332__delegate(x,p__9329);
});
G__9332.cljs$core$IFn$_invoke$arity$variadic = G__9332__delegate;
return G__9332;
})()
;
atom = function(x,var_args){
var p__9329 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__9335 = null;
if (arguments.length > 1) {
var G__9336__i = 0, G__9336__a = new Array(arguments.length -  1);
while (G__9336__i < G__9336__a.length) {G__9336__a[G__9336__i] = arguments[G__9336__i + 1]; ++G__9336__i;}
G__9335 = new cljs.core.IndexedSeq(G__9336__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__9335);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
 * Sets the value of atom to newval without regard for the
 * current value. Returns newval.
 */
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__9339 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__9339) : validate.call(null,G__9339));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__9340 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__9340) : cljs.core.pr_str.call(null,G__9340));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
 * Atomically swaps the value of atom to be:
 * (apply f current-value-of-atom args). Note that f may be called
 * multiple times, and thus should be free of side effects.  Returns
 * the value that was swapped in.
 * @param {...*} var_args
 */
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__9347 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9347) : f.call(null,G__9347));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__9348 = a.state;
var G__9349 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9348,G__9349) : f.call(null,G__9348,G__9349));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__9350 = a.state;
var G__9351 = x;
var G__9352 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9350,G__9351,G__9352) : f.call(null,G__9350,G__9351,G__9352));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__9353__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__9353 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__9354__i = 0, G__9354__a = new Array(arguments.length -  4);
while (G__9354__i < G__9354__a.length) {G__9354__a[G__9354__i] = arguments[G__9354__i + 4]; ++G__9354__i;}
  more = new cljs.core.IndexedSeq(G__9354__a,0);
} 
return G__9353__delegate.call(this,a,f,x,y,more);};
G__9353.cljs$lang$maxFixedArity = 4;
G__9353.cljs$lang$applyTo = (function (arglist__9355){
var a = cljs.core.first(arglist__9355);
arglist__9355 = cljs.core.next(arglist__9355);
var f = cljs.core.first(arglist__9355);
arglist__9355 = cljs.core.next(arglist__9355);
var x = cljs.core.first(arglist__9355);
arglist__9355 = cljs.core.next(arglist__9355);
var y = cljs.core.first(arglist__9355);
var more = cljs.core.rest(arglist__9355);
return G__9353__delegate(a,f,x,y,more);
});
G__9353.cljs$core$IFn$_invoke$arity$variadic = G__9353__delegate;
return G__9353;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__9356 = null;
if (arguments.length > 4) {
var G__9357__i = 0, G__9357__a = new Array(arguments.length -  4);
while (G__9357__i < G__9357__a.length) {G__9357__a[G__9357__i] = arguments[G__9357__i + 4]; ++G__9357__i;}
G__9356 = new cljs.core.IndexedSeq(G__9357__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__9356);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
 * Atomically sets the value of atom to newval if and only if the
 * current value of the atom is equal to oldval. Returns true if
 * set happened, else false.
 */
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
 * Sets the validator-fn for an atom. validator-fn must be nil or a
 * side-effect-free fn of one argument, which will be passed the intended
 * new state on any state change. If the new state is unacceptable, the
 * validator-fn should return false or throw an Error. If the current state
 * is not acceptable to the new validator, an Error will be thrown and the
 * validator will not be changed.
 */
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
 * Gets the validator-fn for a var/ref/agent/atom.
 */
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__4513__auto__,writer__4514__auto__,opt__4515__auto__){
return cljs.core._write(writer__4514__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
 * Creates and returns a Volatile with an initial value of val.
 */
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
 * Returns true if x is a volatile.
 */
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
 * Sets the value of volatile to newval without regard for the
 * current value. Returns newval.
 */
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
 * Returns a lazy sequence of the non-nil results of (f index item). Note,
 * this means false return values will be included.  f must be free of
 * side-effects.  Returns a stateful transducer when no collection is
 * provided.
 */
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__9424 = null;
var G__9424__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9424__1 = (function (result){
var G__9391 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9391) : rf.call(null,G__9391));
});
var G__9424__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__9392 = i;
var G__9393 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9392,G__9393) : f.call(null,G__9392,G__9393));
})();
if((v == null)){
return result;
} else {
var G__9394 = result;
var G__9395 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9394,G__9395) : rf.call(null,G__9394,G__9395));
}
});
G__9424 = function(result,input){
switch(arguments.length){
case 0:
return G__9424__0.call(this);
case 1:
return G__9424__1.call(this,result);
case 2:
return G__9424__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9424.cljs$core$IFn$_invoke$arity$0 = G__9424__0;
G__9424.cljs$core$IFn$_invoke$arity$1 = G__9424__1;
G__9424.cljs$core$IFn$_invoke$arity$2 = G__9424__2;
return G__9424;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll__$1);
if(temp__4406__auto__){
var s = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4813__auto___9425 = size;
var i_9426 = (0);
while(true){
if((i_9426 < n__4813__auto___9425)){
var x_9427 = (function (){var G__9420 = (idx + i_9426);
var G__9421 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_9426);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9420,G__9421) : f.call(null,G__9420,G__9421));
})();
if((x_9427 == null)){
} else {
cljs.core.chunk_append(b,x_9427);
}

var G__9428 = (i_9426 + (1));
i_9426 = G__9428;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__9422 = idx;
var G__9423 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9422,G__9423) : f.call(null,G__9422,G__9423));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
 * Takes a set of predicates and returns a function f that returns true if all of its
 * composing predicates return a logical true value against all of its arguments, else it returns
 * false. Note that f is short-circuiting in that it will stop execution on the first
 * argument that triggers a logical false result against the original predicates.
 * @param {...*} var_args
 */
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__9642 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9642) : p.call(null,G__9642));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3914__auto__ = (function (){var G__9644 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9644) : p.call(null,G__9644));
})();
if(cljs.core.truth_(and__3914__auto__)){
var G__9645 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9645) : p.call(null,G__9645));
} else {
return and__3914__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3914__auto__ = (function (){var G__9647 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9647) : p.call(null,G__9647));
})();
if(cljs.core.truth_(and__3914__auto__)){
var and__3914__auto____$1 = (function (){var G__9649 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9649) : p.call(null,G__9649));
})();
if(cljs.core.truth_(and__3914__auto____$1)){
var G__9650 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9650) : p.call(null,G__9650));
} else {
return and__3914__auto____$1;
}
} else {
return and__3914__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__9819__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__9819 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9820__i = 0, G__9820__a = new Array(arguments.length -  3);
while (G__9820__i < G__9820__a.length) {G__9820__a[G__9820__i] = arguments[G__9820__i + 3]; ++G__9820__i;}
  args = new cljs.core.IndexedSeq(G__9820__a,0);
} 
return G__9819__delegate.call(this,x,y,z,args);};
G__9819.cljs$lang$maxFixedArity = 3;
G__9819.cljs$lang$applyTo = (function (arglist__9821){
var x = cljs.core.first(arglist__9821);
arglist__9821 = cljs.core.next(arglist__9821);
var y = cljs.core.first(arglist__9821);
arglist__9821 = cljs.core.next(arglist__9821);
var z = cljs.core.first(arglist__9821);
var args = cljs.core.rest(arglist__9821);
return G__9819__delegate(x,y,z,args);
});
G__9819.cljs$core$IFn$_invoke$arity$variadic = G__9819__delegate;
return G__9819;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__9822 = null;
if (arguments.length > 3) {
var G__9823__i = 0, G__9823__a = new Array(arguments.length -  3);
while (G__9823__i < G__9823__a.length) {G__9823__a[G__9823__i] = arguments[G__9823__i + 3]; ++G__9823__i;}
G__9822 = new cljs.core.IndexedSeq(G__9823__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9822);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__3914__auto__ = (function (){var G__9682 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9682) : p1.call(null,G__9682));
})();
if(cljs.core.truth_(and__3914__auto__)){
var G__9683 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9683) : p2.call(null,G__9683));
} else {
return and__3914__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3914__auto__ = (function (){var G__9685 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9685) : p1.call(null,G__9685));
})();
if(cljs.core.truth_(and__3914__auto__)){
var and__3914__auto____$1 = (function (){var G__9687 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9687) : p1.call(null,G__9687));
})();
if(cljs.core.truth_(and__3914__auto____$1)){
var and__3914__auto____$2 = (function (){var G__9689 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9689) : p2.call(null,G__9689));
})();
if(cljs.core.truth_(and__3914__auto____$2)){
var G__9690 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9690) : p2.call(null,G__9690));
} else {
return and__3914__auto____$2;
}
} else {
return and__3914__auto____$1;
}
} else {
return and__3914__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3914__auto__ = (function (){var G__9692 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9692) : p1.call(null,G__9692));
})();
if(cljs.core.truth_(and__3914__auto__)){
var and__3914__auto____$1 = (function (){var G__9694 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9694) : p1.call(null,G__9694));
})();
if(cljs.core.truth_(and__3914__auto____$1)){
var and__3914__auto____$2 = (function (){var G__9696 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9696) : p1.call(null,G__9696));
})();
if(cljs.core.truth_(and__3914__auto____$2)){
var and__3914__auto____$3 = (function (){var G__9698 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9698) : p2.call(null,G__9698));
})();
if(cljs.core.truth_(and__3914__auto____$3)){
var and__3914__auto____$4 = (function (){var G__9700 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9700) : p2.call(null,G__9700));
})();
if(cljs.core.truth_(and__3914__auto____$4)){
var G__9701 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9701) : p2.call(null,G__9701));
} else {
return and__3914__auto____$4;
}
} else {
return and__3914__auto____$3;
}
} else {
return and__3914__auto____$2;
}
} else {
return and__3914__auto____$1;
}
} else {
return and__3914__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__9824__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__9429_SHARP_){
var and__3914__auto__ = (function (){var G__9706 = p1__9429_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9706) : p1.call(null,G__9706));
})();
if(cljs.core.truth_(and__3914__auto__)){
var G__9707 = p1__9429_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9707) : p2.call(null,G__9707));
} else {
return and__3914__auto__;
}
}),args)));
};
var G__9824 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9825__i = 0, G__9825__a = new Array(arguments.length -  3);
while (G__9825__i < G__9825__a.length) {G__9825__a[G__9825__i] = arguments[G__9825__i + 3]; ++G__9825__i;}
  args = new cljs.core.IndexedSeq(G__9825__a,0);
} 
return G__9824__delegate.call(this,x,y,z,args);};
G__9824.cljs$lang$maxFixedArity = 3;
G__9824.cljs$lang$applyTo = (function (arglist__9826){
var x = cljs.core.first(arglist__9826);
arglist__9826 = cljs.core.next(arglist__9826);
var y = cljs.core.first(arglist__9826);
arglist__9826 = cljs.core.next(arglist__9826);
var z = cljs.core.first(arglist__9826);
var args = cljs.core.rest(arglist__9826);
return G__9824__delegate(x,y,z,args);
});
G__9824.cljs$core$IFn$_invoke$arity$variadic = G__9824__delegate;
return G__9824;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__9827 = null;
if (arguments.length > 3) {
var G__9828__i = 0, G__9828__a = new Array(arguments.length -  3);
while (G__9828__i < G__9828__a.length) {G__9828__a[G__9828__i] = arguments[G__9828__i + 3]; ++G__9828__i;}
G__9827 = new cljs.core.IndexedSeq(G__9828__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9827);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__3914__auto__ = (function (){var G__9753 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9753) : p1.call(null,G__9753));
})();
if(cljs.core.truth_(and__3914__auto__)){
var and__3914__auto____$1 = (function (){var G__9755 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9755) : p2.call(null,G__9755));
})();
if(cljs.core.truth_(and__3914__auto____$1)){
var G__9756 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9756) : p3.call(null,G__9756));
} else {
return and__3914__auto____$1;
}
} else {
return and__3914__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3914__auto__ = (function (){var G__9758 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9758) : p1.call(null,G__9758));
})();
if(cljs.core.truth_(and__3914__auto__)){
var and__3914__auto____$1 = (function (){var G__9760 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9760) : p2.call(null,G__9760));
})();
if(cljs.core.truth_(and__3914__auto____$1)){
var and__3914__auto____$2 = (function (){var G__9762 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9762) : p3.call(null,G__9762));
})();
if(cljs.core.truth_(and__3914__auto____$2)){
var and__3914__auto____$3 = (function (){var G__9764 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9764) : p1.call(null,G__9764));
})();
if(cljs.core.truth_(and__3914__auto____$3)){
var and__3914__auto____$4 = (function (){var G__9766 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9766) : p2.call(null,G__9766));
})();
if(cljs.core.truth_(and__3914__auto____$4)){
var G__9767 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9767) : p3.call(null,G__9767));
} else {
return and__3914__auto____$4;
}
} else {
return and__3914__auto____$3;
}
} else {
return and__3914__auto____$2;
}
} else {
return and__3914__auto____$1;
}
} else {
return and__3914__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3914__auto__ = (function (){var G__9769 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9769) : p1.call(null,G__9769));
})();
if(cljs.core.truth_(and__3914__auto__)){
var and__3914__auto____$1 = (function (){var G__9771 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9771) : p2.call(null,G__9771));
})();
if(cljs.core.truth_(and__3914__auto____$1)){
var and__3914__auto____$2 = (function (){var G__9773 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9773) : p3.call(null,G__9773));
})();
if(cljs.core.truth_(and__3914__auto____$2)){
var and__3914__auto____$3 = (function (){var G__9775 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9775) : p1.call(null,G__9775));
})();
if(cljs.core.truth_(and__3914__auto____$3)){
var and__3914__auto____$4 = (function (){var G__9777 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9777) : p2.call(null,G__9777));
})();
if(cljs.core.truth_(and__3914__auto____$4)){
var and__3914__auto____$5 = (function (){var G__9779 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9779) : p3.call(null,G__9779));
})();
if(cljs.core.truth_(and__3914__auto____$5)){
var and__3914__auto____$6 = (function (){var G__9781 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9781) : p1.call(null,G__9781));
})();
if(cljs.core.truth_(and__3914__auto____$6)){
var and__3914__auto____$7 = (function (){var G__9783 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9783) : p2.call(null,G__9783));
})();
if(cljs.core.truth_(and__3914__auto____$7)){
var G__9784 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9784) : p3.call(null,G__9784));
} else {
return and__3914__auto____$7;
}
} else {
return and__3914__auto____$6;
}
} else {
return and__3914__auto____$5;
}
} else {
return and__3914__auto____$4;
}
} else {
return and__3914__auto____$3;
}
} else {
return and__3914__auto____$2;
}
} else {
return and__3914__auto____$1;
}
} else {
return and__3914__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__9829__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__9430_SHARP_){
var and__3914__auto__ = (function (){var G__9791 = p1__9430_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9791) : p1.call(null,G__9791));
})();
if(cljs.core.truth_(and__3914__auto__)){
var and__3914__auto____$1 = (function (){var G__9793 = p1__9430_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9793) : p2.call(null,G__9793));
})();
if(cljs.core.truth_(and__3914__auto____$1)){
var G__9794 = p1__9430_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9794) : p3.call(null,G__9794));
} else {
return and__3914__auto____$1;
}
} else {
return and__3914__auto__;
}
}),args)));
};
var G__9829 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9830__i = 0, G__9830__a = new Array(arguments.length -  3);
while (G__9830__i < G__9830__a.length) {G__9830__a[G__9830__i] = arguments[G__9830__i + 3]; ++G__9830__i;}
  args = new cljs.core.IndexedSeq(G__9830__a,0);
} 
return G__9829__delegate.call(this,x,y,z,args);};
G__9829.cljs$lang$maxFixedArity = 3;
G__9829.cljs$lang$applyTo = (function (arglist__9831){
var x = cljs.core.first(arglist__9831);
arglist__9831 = cljs.core.next(arglist__9831);
var y = cljs.core.first(arglist__9831);
arglist__9831 = cljs.core.next(arglist__9831);
var z = cljs.core.first(arglist__9831);
var args = cljs.core.rest(arglist__9831);
return G__9829__delegate(x,y,z,args);
});
G__9829.cljs$core$IFn$_invoke$arity$variadic = G__9829__delegate;
return G__9829;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__9832 = null;
if (arguments.length > 3) {
var G__9833__i = 0, G__9833__a = new Array(arguments.length -  3);
while (G__9833__i < G__9833__a.length) {G__9833__a[G__9833__i] = arguments[G__9833__i + 3]; ++G__9833__i;}
G__9832 = new cljs.core.IndexedSeq(G__9833__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9832);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__9834__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__9431_SHARP_){
var G__9810 = x;
return (p1__9431_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9431_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9810) : p1__9431_SHARP_.call(null,G__9810));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__9432_SHARP_){
var and__3914__auto__ = (function (){var G__9812 = x;
return (p1__9432_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9432_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9812) : p1__9432_SHARP_.call(null,G__9812));
})();
if(cljs.core.truth_(and__3914__auto__)){
var G__9813 = y;
return (p1__9432_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9432_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9813) : p1__9432_SHARP_.call(null,G__9813));
} else {
return and__3914__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__9433_SHARP_){
var and__3914__auto__ = (function (){var G__9815 = x;
return (p1__9433_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9433_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9815) : p1__9433_SHARP_.call(null,G__9815));
})();
if(cljs.core.truth_(and__3914__auto__)){
var and__3914__auto____$1 = (function (){var G__9817 = y;
return (p1__9433_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9433_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9817) : p1__9433_SHARP_.call(null,G__9817));
})();
if(cljs.core.truth_(and__3914__auto____$1)){
var G__9818 = z;
return (p1__9433_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9433_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9818) : p1__9433_SHARP_.call(null,G__9818));
} else {
return and__3914__auto____$1;
}
} else {
return and__3914__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__9835__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__9434_SHARP_){
return cljs.core.every_QMARK_(p1__9434_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__9835 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9836__i = 0, G__9836__a = new Array(arguments.length -  3);
while (G__9836__i < G__9836__a.length) {G__9836__a[G__9836__i] = arguments[G__9836__i + 3]; ++G__9836__i;}
  args = new cljs.core.IndexedSeq(G__9836__a,0);
} 
return G__9835__delegate.call(this,x,y,z,args);};
G__9835.cljs$lang$maxFixedArity = 3;
G__9835.cljs$lang$applyTo = (function (arglist__9837){
var x = cljs.core.first(arglist__9837);
arglist__9837 = cljs.core.next(arglist__9837);
var y = cljs.core.first(arglist__9837);
arglist__9837 = cljs.core.next(arglist__9837);
var z = cljs.core.first(arglist__9837);
var args = cljs.core.rest(arglist__9837);
return G__9835__delegate(x,y,z,args);
});
G__9835.cljs$core$IFn$_invoke$arity$variadic = G__9835__delegate;
return G__9835;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__9838 = null;
if (arguments.length > 3) {
var G__9839__i = 0, G__9839__a = new Array(arguments.length -  3);
while (G__9839__i < G__9839__a.length) {G__9839__a[G__9839__i] = arguments[G__9839__i + 3]; ++G__9839__i;}
G__9838 = new cljs.core.IndexedSeq(G__9839__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9838);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__9834 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__9840__i = 0, G__9840__a = new Array(arguments.length -  3);
while (G__9840__i < G__9840__a.length) {G__9840__a[G__9840__i] = arguments[G__9840__i + 3]; ++G__9840__i;}
  ps = new cljs.core.IndexedSeq(G__9840__a,0);
} 
return G__9834__delegate.call(this,p1,p2,p3,ps);};
G__9834.cljs$lang$maxFixedArity = 3;
G__9834.cljs$lang$applyTo = (function (arglist__9841){
var p1 = cljs.core.first(arglist__9841);
arglist__9841 = cljs.core.next(arglist__9841);
var p2 = cljs.core.first(arglist__9841);
arglist__9841 = cljs.core.next(arglist__9841);
var p3 = cljs.core.first(arglist__9841);
var ps = cljs.core.rest(arglist__9841);
return G__9834__delegate(p1,p2,p3,ps);
});
G__9834.cljs$core$IFn$_invoke$arity$variadic = G__9834__delegate;
return G__9834;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__9842 = null;
if (arguments.length > 3) {
var G__9843__i = 0, G__9843__a = new Array(arguments.length -  3);
while (G__9843__i < G__9843__a.length) {G__9843__a[G__9843__i] = arguments[G__9843__i + 3]; ++G__9843__i;}
G__9842 = new cljs.core.IndexedSeq(G__9843__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__9842);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
 * Takes a set of predicates and returns a function f that returns the first logical true value
 * returned by one of its composing predicates against any of its arguments, else it returns
 * logical false. Note that f is short-circuiting in that it will stop execution on the first
 * argument that triggers a logical true result against the original predicates.
 * @param {...*} var_args
 */
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__10049 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10049) : p.call(null,G__10049));
});
var sp1__2 = (function (x,y){
var or__3926__auto__ = (function (){var G__10051 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10051) : p.call(null,G__10051));
})();
if(cljs.core.truth_(or__3926__auto__)){
return or__3926__auto__;
} else {
var G__10052 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10052) : p.call(null,G__10052));
}
});
var sp1__3 = (function (x,y,z){
var or__3926__auto__ = (function (){var G__10054 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10054) : p.call(null,G__10054));
})();
if(cljs.core.truth_(or__3926__auto__)){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (function (){var G__10056 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10056) : p.call(null,G__10056));
})();
if(cljs.core.truth_(or__3926__auto____$1)){
return or__3926__auto____$1;
} else {
var G__10057 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10057) : p.call(null,G__10057));
}
}
});
var sp1__4 = (function() { 
var G__10218__delegate = function (x,y,z,args){
var or__3926__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3926__auto__)){
return or__3926__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__10218 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10219__i = 0, G__10219__a = new Array(arguments.length -  3);
while (G__10219__i < G__10219__a.length) {G__10219__a[G__10219__i] = arguments[G__10219__i + 3]; ++G__10219__i;}
  args = new cljs.core.IndexedSeq(G__10219__a,0);
} 
return G__10218__delegate.call(this,x,y,z,args);};
G__10218.cljs$lang$maxFixedArity = 3;
G__10218.cljs$lang$applyTo = (function (arglist__10220){
var x = cljs.core.first(arglist__10220);
arglist__10220 = cljs.core.next(arglist__10220);
var y = cljs.core.first(arglist__10220);
arglist__10220 = cljs.core.next(arglist__10220);
var z = cljs.core.first(arglist__10220);
var args = cljs.core.rest(arglist__10220);
return G__10218__delegate(x,y,z,args);
});
G__10218.cljs$core$IFn$_invoke$arity$variadic = G__10218__delegate;
return G__10218;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__10221 = null;
if (arguments.length > 3) {
var G__10222__i = 0, G__10222__a = new Array(arguments.length -  3);
while (G__10222__i < G__10222__a.length) {G__10222__a[G__10222__i] = arguments[G__10222__i + 3]; ++G__10222__i;}
G__10221 = new cljs.core.IndexedSeq(G__10222__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10221);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__3926__auto__ = (function (){var G__10089 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10089) : p1.call(null,G__10089));
})();
if(cljs.core.truth_(or__3926__auto__)){
return or__3926__auto__;
} else {
var G__10090 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10090) : p2.call(null,G__10090));
}
});
var sp2__2 = (function (x,y){
var or__3926__auto__ = (function (){var G__10092 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10092) : p1.call(null,G__10092));
})();
if(cljs.core.truth_(or__3926__auto__)){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (function (){var G__10094 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10094) : p1.call(null,G__10094));
})();
if(cljs.core.truth_(or__3926__auto____$1)){
return or__3926__auto____$1;
} else {
var or__3926__auto____$2 = (function (){var G__10096 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10096) : p2.call(null,G__10096));
})();
if(cljs.core.truth_(or__3926__auto____$2)){
return or__3926__auto____$2;
} else {
var G__10097 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10097) : p2.call(null,G__10097));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__3926__auto__ = (function (){var G__10099 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10099) : p1.call(null,G__10099));
})();
if(cljs.core.truth_(or__3926__auto__)){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (function (){var G__10101 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10101) : p1.call(null,G__10101));
})();
if(cljs.core.truth_(or__3926__auto____$1)){
return or__3926__auto____$1;
} else {
var or__3926__auto____$2 = (function (){var G__10103 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10103) : p1.call(null,G__10103));
})();
if(cljs.core.truth_(or__3926__auto____$2)){
return or__3926__auto____$2;
} else {
var or__3926__auto____$3 = (function (){var G__10105 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10105) : p2.call(null,G__10105));
})();
if(cljs.core.truth_(or__3926__auto____$3)){
return or__3926__auto____$3;
} else {
var or__3926__auto____$4 = (function (){var G__10107 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10107) : p2.call(null,G__10107));
})();
if(cljs.core.truth_(or__3926__auto____$4)){
return or__3926__auto____$4;
} else {
var G__10108 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10108) : p2.call(null,G__10108));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__10223__delegate = function (x,y,z,args){
var or__3926__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3926__auto__)){
return or__3926__auto__;
} else {
return cljs.core.some(((function (or__3926__auto__){
return (function (p1__9844_SHARP_){
var or__3926__auto____$1 = (function (){var G__10110 = p1__9844_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10110) : p1.call(null,G__10110));
})();
if(cljs.core.truth_(or__3926__auto____$1)){
return or__3926__auto____$1;
} else {
var G__10111 = p1__9844_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10111) : p2.call(null,G__10111));
}
});})(or__3926__auto__))
,args);
}
};
var G__10223 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10224__i = 0, G__10224__a = new Array(arguments.length -  3);
while (G__10224__i < G__10224__a.length) {G__10224__a[G__10224__i] = arguments[G__10224__i + 3]; ++G__10224__i;}
  args = new cljs.core.IndexedSeq(G__10224__a,0);
} 
return G__10223__delegate.call(this,x,y,z,args);};
G__10223.cljs$lang$maxFixedArity = 3;
G__10223.cljs$lang$applyTo = (function (arglist__10225){
var x = cljs.core.first(arglist__10225);
arglist__10225 = cljs.core.next(arglist__10225);
var y = cljs.core.first(arglist__10225);
arglist__10225 = cljs.core.next(arglist__10225);
var z = cljs.core.first(arglist__10225);
var args = cljs.core.rest(arglist__10225);
return G__10223__delegate(x,y,z,args);
});
G__10223.cljs$core$IFn$_invoke$arity$variadic = G__10223__delegate;
return G__10223;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__10226 = null;
if (arguments.length > 3) {
var G__10227__i = 0, G__10227__a = new Array(arguments.length -  3);
while (G__10227__i < G__10227__a.length) {G__10227__a[G__10227__i] = arguments[G__10227__i + 3]; ++G__10227__i;}
G__10226 = new cljs.core.IndexedSeq(G__10227__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10226);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__3926__auto__ = (function (){var G__10157 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10157) : p1.call(null,G__10157));
})();
if(cljs.core.truth_(or__3926__auto__)){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (function (){var G__10159 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10159) : p2.call(null,G__10159));
})();
if(cljs.core.truth_(or__3926__auto____$1)){
return or__3926__auto____$1;
} else {
var G__10160 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10160) : p3.call(null,G__10160));
}
}
});
var sp3__2 = (function (x,y){
var or__3926__auto__ = (function (){var G__10162 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10162) : p1.call(null,G__10162));
})();
if(cljs.core.truth_(or__3926__auto__)){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (function (){var G__10164 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10164) : p2.call(null,G__10164));
})();
if(cljs.core.truth_(or__3926__auto____$1)){
return or__3926__auto____$1;
} else {
var or__3926__auto____$2 = (function (){var G__10166 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10166) : p3.call(null,G__10166));
})();
if(cljs.core.truth_(or__3926__auto____$2)){
return or__3926__auto____$2;
} else {
var or__3926__auto____$3 = (function (){var G__10168 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10168) : p1.call(null,G__10168));
})();
if(cljs.core.truth_(or__3926__auto____$3)){
return or__3926__auto____$3;
} else {
var or__3926__auto____$4 = (function (){var G__10170 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10170) : p2.call(null,G__10170));
})();
if(cljs.core.truth_(or__3926__auto____$4)){
return or__3926__auto____$4;
} else {
var G__10171 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10171) : p3.call(null,G__10171));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__3926__auto__ = (function (){var G__10173 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10173) : p1.call(null,G__10173));
})();
if(cljs.core.truth_(or__3926__auto__)){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (function (){var G__10175 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10175) : p2.call(null,G__10175));
})();
if(cljs.core.truth_(or__3926__auto____$1)){
return or__3926__auto____$1;
} else {
var or__3926__auto____$2 = (function (){var G__10177 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10177) : p3.call(null,G__10177));
})();
if(cljs.core.truth_(or__3926__auto____$2)){
return or__3926__auto____$2;
} else {
var or__3926__auto____$3 = (function (){var G__10179 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10179) : p1.call(null,G__10179));
})();
if(cljs.core.truth_(or__3926__auto____$3)){
return or__3926__auto____$3;
} else {
var or__3926__auto____$4 = (function (){var G__10181 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10181) : p2.call(null,G__10181));
})();
if(cljs.core.truth_(or__3926__auto____$4)){
return or__3926__auto____$4;
} else {
var or__3926__auto____$5 = (function (){var G__10183 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10183) : p3.call(null,G__10183));
})();
if(cljs.core.truth_(or__3926__auto____$5)){
return or__3926__auto____$5;
} else {
var or__3926__auto____$6 = (function (){var G__10185 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10185) : p1.call(null,G__10185));
})();
if(cljs.core.truth_(or__3926__auto____$6)){
return or__3926__auto____$6;
} else {
var or__3926__auto____$7 = (function (){var G__10187 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10187) : p2.call(null,G__10187));
})();
if(cljs.core.truth_(or__3926__auto____$7)){
return or__3926__auto____$7;
} else {
var G__10188 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10188) : p3.call(null,G__10188));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__10228__delegate = function (x,y,z,args){
var or__3926__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3926__auto__)){
return or__3926__auto__;
} else {
return cljs.core.some(((function (or__3926__auto__){
return (function (p1__9845_SHARP_){
var or__3926__auto____$1 = (function (){var G__10190 = p1__9845_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10190) : p1.call(null,G__10190));
})();
if(cljs.core.truth_(or__3926__auto____$1)){
return or__3926__auto____$1;
} else {
var or__3926__auto____$2 = (function (){var G__10192 = p1__9845_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10192) : p2.call(null,G__10192));
})();
if(cljs.core.truth_(or__3926__auto____$2)){
return or__3926__auto____$2;
} else {
var G__10193 = p1__9845_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10193) : p3.call(null,G__10193));
}
}
});})(or__3926__auto__))
,args);
}
};
var G__10228 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10229__i = 0, G__10229__a = new Array(arguments.length -  3);
while (G__10229__i < G__10229__a.length) {G__10229__a[G__10229__i] = arguments[G__10229__i + 3]; ++G__10229__i;}
  args = new cljs.core.IndexedSeq(G__10229__a,0);
} 
return G__10228__delegate.call(this,x,y,z,args);};
G__10228.cljs$lang$maxFixedArity = 3;
G__10228.cljs$lang$applyTo = (function (arglist__10230){
var x = cljs.core.first(arglist__10230);
arglist__10230 = cljs.core.next(arglist__10230);
var y = cljs.core.first(arglist__10230);
arglist__10230 = cljs.core.next(arglist__10230);
var z = cljs.core.first(arglist__10230);
var args = cljs.core.rest(arglist__10230);
return G__10228__delegate(x,y,z,args);
});
G__10228.cljs$core$IFn$_invoke$arity$variadic = G__10228__delegate;
return G__10228;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__10231 = null;
if (arguments.length > 3) {
var G__10232__i = 0, G__10232__a = new Array(arguments.length -  3);
while (G__10232__i < G__10232__a.length) {G__10232__a[G__10232__i] = arguments[G__10232__i + 3]; ++G__10232__i;}
G__10231 = new cljs.core.IndexedSeq(G__10232__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10231);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__10233__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__9846_SHARP_){
var G__10209 = x;
return (p1__9846_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9846_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10209) : p1__9846_SHARP_.call(null,G__10209));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__9847_SHARP_){
var or__3926__auto__ = (function (){var G__10211 = x;
return (p1__9847_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9847_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10211) : p1__9847_SHARP_.call(null,G__10211));
})();
if(cljs.core.truth_(or__3926__auto__)){
return or__3926__auto__;
} else {
var G__10212 = y;
return (p1__9847_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9847_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10212) : p1__9847_SHARP_.call(null,G__10212));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__9848_SHARP_){
var or__3926__auto__ = (function (){var G__10214 = x;
return (p1__9848_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9848_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10214) : p1__9848_SHARP_.call(null,G__10214));
})();
if(cljs.core.truth_(or__3926__auto__)){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (function (){var G__10216 = y;
return (p1__9848_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9848_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10216) : p1__9848_SHARP_.call(null,G__10216));
})();
if(cljs.core.truth_(or__3926__auto____$1)){
return or__3926__auto____$1;
} else {
var G__10217 = z;
return (p1__9848_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9848_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10217) : p1__9848_SHARP_.call(null,G__10217));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__10234__delegate = function (x,y,z,args){
var or__3926__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3926__auto__)){
return or__3926__auto__;
} else {
return cljs.core.some(((function (or__3926__auto__,ps__$1){
return (function (p1__9849_SHARP_){
return cljs.core.some(p1__9849_SHARP_,args);
});})(or__3926__auto__,ps__$1))
,ps__$1);
}
};
var G__10234 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10235__i = 0, G__10235__a = new Array(arguments.length -  3);
while (G__10235__i < G__10235__a.length) {G__10235__a[G__10235__i] = arguments[G__10235__i + 3]; ++G__10235__i;}
  args = new cljs.core.IndexedSeq(G__10235__a,0);
} 
return G__10234__delegate.call(this,x,y,z,args);};
G__10234.cljs$lang$maxFixedArity = 3;
G__10234.cljs$lang$applyTo = (function (arglist__10236){
var x = cljs.core.first(arglist__10236);
arglist__10236 = cljs.core.next(arglist__10236);
var y = cljs.core.first(arglist__10236);
arglist__10236 = cljs.core.next(arglist__10236);
var z = cljs.core.first(arglist__10236);
var args = cljs.core.rest(arglist__10236);
return G__10234__delegate(x,y,z,args);
});
G__10234.cljs$core$IFn$_invoke$arity$variadic = G__10234__delegate;
return G__10234;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__10237 = null;
if (arguments.length > 3) {
var G__10238__i = 0, G__10238__a = new Array(arguments.length -  3);
while (G__10238__i < G__10238__a.length) {G__10238__a[G__10238__i] = arguments[G__10238__i + 3]; ++G__10238__i;}
G__10237 = new cljs.core.IndexedSeq(G__10238__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10237);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__10233 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__10239__i = 0, G__10239__a = new Array(arguments.length -  3);
while (G__10239__i < G__10239__a.length) {G__10239__a[G__10239__i] = arguments[G__10239__i + 3]; ++G__10239__i;}
  ps = new cljs.core.IndexedSeq(G__10239__a,0);
} 
return G__10233__delegate.call(this,p1,p2,p3,ps);};
G__10233.cljs$lang$maxFixedArity = 3;
G__10233.cljs$lang$applyTo = (function (arglist__10240){
var p1 = cljs.core.first(arglist__10240);
arglist__10240 = cljs.core.next(arglist__10240);
var p2 = cljs.core.first(arglist__10240);
arglist__10240 = cljs.core.next(arglist__10240);
var p3 = cljs.core.first(arglist__10240);
var ps = cljs.core.rest(arglist__10240);
return G__10233__delegate(p1,p2,p3,ps);
});
G__10233.cljs$core$IFn$_invoke$arity$variadic = G__10233__delegate;
return G__10233;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__10241 = null;
if (arguments.length > 3) {
var G__10242__i = 0, G__10242__a = new Array(arguments.length -  3);
while (G__10242__i < G__10242__a.length) {G__10242__a[G__10242__i] = arguments[G__10242__i + 3]; ++G__10242__i;}
G__10241 = new cljs.core.IndexedSeq(G__10242__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__10241);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
 * Returns a lazy sequence consisting of the result of applying f to
 * the set of first items of each coll, followed by applying f to the
 * set of second items in each coll, until any one of the colls is
 * exhausted.  Any remaining items in other colls are ignored. Function
 * f should accept number-of-colls arguments. Returns a transducer when
 * no collection is provided.
 * @param {...*} var_args
 */
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__10297 = null;
var G__10297__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10297__1 = (function (result){
var G__10283 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10283) : rf.call(null,G__10283));
});
var G__10297__2 = (function (result,input){
var G__10284 = result;
var G__10285 = (function (){var G__10286 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10286) : f.call(null,G__10286));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10284,G__10285) : rf.call(null,G__10284,G__10285));
});
var G__10297__3 = (function() { 
var G__10298__delegate = function (result,input,inputs){
var G__10287 = result;
var G__10288 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10287,G__10288) : rf.call(null,G__10287,G__10288));
};
var G__10298 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__10299__i = 0, G__10299__a = new Array(arguments.length -  2);
while (G__10299__i < G__10299__a.length) {G__10299__a[G__10299__i] = arguments[G__10299__i + 2]; ++G__10299__i;}
  inputs = new cljs.core.IndexedSeq(G__10299__a,0);
} 
return G__10298__delegate.call(this,result,input,inputs);};
G__10298.cljs$lang$maxFixedArity = 2;
G__10298.cljs$lang$applyTo = (function (arglist__10300){
var result = cljs.core.first(arglist__10300);
arglist__10300 = cljs.core.next(arglist__10300);
var input = cljs.core.first(arglist__10300);
var inputs = cljs.core.rest(arglist__10300);
return G__10298__delegate(result,input,inputs);
});
G__10298.cljs$core$IFn$_invoke$arity$variadic = G__10298__delegate;
return G__10298;
})()
;
G__10297 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__10297__0.call(this);
case 1:
return G__10297__1.call(this,result);
case 2:
return G__10297__2.call(this,result,input);
default:
var G__10301 = null;
if (arguments.length > 2) {
var G__10302__i = 0, G__10302__a = new Array(arguments.length -  2);
while (G__10302__i < G__10302__a.length) {G__10302__a[G__10302__i] = arguments[G__10302__i + 2]; ++G__10302__i;}
G__10301 = new cljs.core.IndexedSeq(G__10302__a,0);
}
return G__10297__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__10301);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10297.cljs$lang$maxFixedArity = 2;
G__10297.cljs$lang$applyTo = G__10297__3.cljs$lang$applyTo;
G__10297.cljs$core$IFn$_invoke$arity$0 = G__10297__0;
G__10297.cljs$core$IFn$_invoke$arity$1 = G__10297__1;
G__10297.cljs$core$IFn$_invoke$arity$2 = G__10297__2;
G__10297.cljs$core$IFn$_invoke$arity$variadic = G__10297__3.cljs$core$IFn$_invoke$arity$variadic;
return G__10297;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4813__auto___10303 = size;
var i_10304 = (0);
while(true){
if((i_10304 < n__4813__auto___10303)){
cljs.core.chunk_append(b,(function (){var G__10289 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_10304);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10289) : f.call(null,G__10289));
})());

var G__10305 = (i_10304 + (1));
i_10304 = G__10305;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__10290 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10290) : f.call(null,G__10290));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__10291 = cljs.core.first(s1);
var G__10292 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10291,G__10292) : f.call(null,G__10291,G__10292));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__10293 = cljs.core.first(s1);
var G__10294 = cljs.core.first(s2);
var G__10295 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10293,G__10294,G__10295) : f.call(null,G__10293,G__10294,G__10295));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__10306__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__10243_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__10243_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__10306 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__10307__i = 0, G__10307__a = new Array(arguments.length -  4);
while (G__10307__i < G__10307__a.length) {G__10307__a[G__10307__i] = arguments[G__10307__i + 4]; ++G__10307__i;}
  colls = new cljs.core.IndexedSeq(G__10307__a,0);
} 
return G__10306__delegate.call(this,f,c1,c2,c3,colls);};
G__10306.cljs$lang$maxFixedArity = 4;
G__10306.cljs$lang$applyTo = (function (arglist__10308){
var f = cljs.core.first(arglist__10308);
arglist__10308 = cljs.core.next(arglist__10308);
var c1 = cljs.core.first(arglist__10308);
arglist__10308 = cljs.core.next(arglist__10308);
var c2 = cljs.core.first(arglist__10308);
arglist__10308 = cljs.core.next(arglist__10308);
var c3 = cljs.core.first(arglist__10308);
var colls = cljs.core.rest(arglist__10308);
return G__10306__delegate(f,c1,c2,c3,colls);
});
G__10306.cljs$core$IFn$_invoke$arity$variadic = G__10306__delegate;
return G__10306;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__10309 = null;
if (arguments.length > 4) {
var G__10310__i = 0, G__10310__a = new Array(arguments.length -  4);
while (G__10310__i < G__10310__a.length) {G__10310__a[G__10310__i] = arguments[G__10310__i + 4]; ++G__10310__i;}
G__10309 = new cljs.core.IndexedSeq(G__10310__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__10309);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
 * Returns a lazy sequence of the first n items in coll, or all items if
 * there are fewer than n.  Returns a stateful transducer when
 * no collection is provided.
 */
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__10319 = null;
var G__10319__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10319__1 = (function (result){
var G__10316 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10316) : rf.call(null,G__10316));
});
var G__10319__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__10317 = result;
var G__10318 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10317,G__10318) : rf.call(null,G__10317,G__10318));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__10319 = function(result,input){
switch(arguments.length){
case 0:
return G__10319__0.call(this);
case 1:
return G__10319__1.call(this,result);
case 2:
return G__10319__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10319.cljs$core$IFn$_invoke$arity$0 = G__10319__0;
G__10319.cljs$core$IFn$_invoke$arity$1 = G__10319__1;
G__10319.cljs$core$IFn$_invoke$arity$2 = G__10319__2;
return G__10319;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
 * Returns a lazy sequence of all but the first n items in coll.
 * Returns a stateful transducer when no collection is provided.
 */
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__10326 = null;
var G__10326__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10326__1 = (function (result){
var G__10323 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10323) : rf.call(null,G__10323));
});
var G__10326__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__10324 = result;
var G__10325 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10324,G__10325) : rf.call(null,G__10324,G__10325));
}
});
G__10326 = function(result,input){
switch(arguments.length){
case 0:
return G__10326__0.call(this);
case 1:
return G__10326__1.call(this,result);
case 2:
return G__10326__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10326.cljs$core$IFn$_invoke$arity$0 = G__10326__0;
G__10326.cljs$core$IFn$_invoke$arity$1 = G__10326__1;
G__10326.cljs$core$IFn$_invoke$arity$2 = G__10326__2;
return G__10326;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__10327 = (n__$1 - (1));
var G__10328 = cljs.core.rest(s);
n__$1 = G__10327;
coll__$1 = G__10328;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
 * Return a lazy sequence of all but the last n (default 1) items in coll
 */
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
 * Returns a seq of the last n items in coll.  Depending on the type
 * of coll may be no better than linear time.  For vectors, see also subvec.
 */
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__10331 = cljs.core.next(s);
var G__10332 = cljs.core.next(lead);
s = G__10331;
lead = G__10332;
continue;
} else {
return s;
}
break;
}
});
/**
 * Returns a lazy sequence of the items in coll starting from the
 * first item for which (pred item) returns logical false.  Returns a
 * stateful transducer when no collection is provided.
 */
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__10345 = null;
var G__10345__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10345__1 = (function (result){
var G__10339 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10339) : rf.call(null,G__10339));
});
var G__10345__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__3914__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__3914__auto__)){
var G__10340 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__10340) : pred.call(null,G__10340));
} else {
return and__3914__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__10341 = result;
var G__10342 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10341,G__10342) : rf.call(null,G__10341,G__10342));
}
});
G__10345 = function(result,input){
switch(arguments.length){
case 0:
return G__10345__0.call(this);
case 1:
return G__10345__1.call(this,result);
case 2:
return G__10345__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10345.cljs$core$IFn$_invoke$arity$0 = G__10345__0;
G__10345.cljs$core$IFn$_invoke$arity$1 = G__10345__1;
G__10345.cljs$core$IFn$_invoke$arity$2 = G__10345__2;
return G__10345;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__3914__auto__ = s;
if(and__3914__auto__){
var G__10344 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__10344) : pred__$1.call(null,G__10344));
} else {
return and__3914__auto__;
}
})())){
var G__10346 = pred__$1;
var G__10347 = cljs.core.rest(s);
pred__$1 = G__10346;
coll__$1 = G__10347;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
 * Returns a lazy (infinite!) sequence of repetitions of the items in coll.
 */
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
 * Returns a vector of [(take n coll) (drop n coll)]
 */
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
 * Returns a lazy (infinite!, or length n if supplied) sequence of xs.
 */
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
 * Returns a lazy seq of n xs.
 */
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
 * Takes a function of no args, presumably with side effects, and
 * returns an infinite (or length n if supplied) lazy sequence of calls
 * to it
 */
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
 * Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
 */
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__10356 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10356) : f.call(null,G__10356));
})());
}),null,null)));
});
/**
 * Returns a lazy seq of the first item in each coll, then the second etc.
 * @param {...*} var_args
 */
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__10359__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__10359 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__10360__i = 0, G__10360__a = new Array(arguments.length -  2);
while (G__10360__i < G__10360__a.length) {G__10360__a[G__10360__i] = arguments[G__10360__i + 2]; ++G__10360__i;}
  colls = new cljs.core.IndexedSeq(G__10360__a,0);
} 
return G__10359__delegate.call(this,c1,c2,colls);};
G__10359.cljs$lang$maxFixedArity = 2;
G__10359.cljs$lang$applyTo = (function (arglist__10361){
var c1 = cljs.core.first(arglist__10361);
arglist__10361 = cljs.core.next(arglist__10361);
var c2 = cljs.core.first(arglist__10361);
var colls = cljs.core.rest(arglist__10361);
return G__10359__delegate(c1,c2,colls);
});
G__10359.cljs$core$IFn$_invoke$arity$variadic = G__10359__delegate;
return G__10359;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__10362 = null;
if (arguments.length > 2) {
var G__10363__i = 0, G__10363__a = new Array(arguments.length -  2);
while (G__10363__i < G__10363__a.length) {G__10363__a[G__10363__i] = arguments[G__10363__i + 2]; ++G__10363__i;}
G__10362 = new cljs.core.IndexedSeq(G__10363__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__10362);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
 * Returns a lazy seq of the elements of coll separated by sep
 */
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__10378 = null;
var G__10378__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10378__1 = (function (result){
var G__10371 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10371) : rf.call(null,G__10371));
});
var G__10378__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__10372 = result;
var G__10373 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10372,G__10373) : rf.call(null,G__10372,G__10373));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__10374 = sepr;
var G__10375 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10374,G__10375) : rf.call(null,G__10374,G__10375));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__10376 = result;
var G__10377 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10376,G__10377) : rf.call(null,G__10376,G__10377));
}
});
G__10378 = function(result,input){
switch(arguments.length){
case 0:
return G__10378__0.call(this);
case 1:
return G__10378__1.call(this,result);
case 2:
return G__10378__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10378.cljs$core$IFn$_invoke$arity$0 = G__10378__0;
G__10378.cljs$core$IFn$_invoke$arity$1 = G__10378__1;
G__10378.cljs$core$IFn$_invoke$arity$2 = G__10378__2;
return G__10378;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
 * Take a collection of collections, and return a lazy seq
 * of items from the inner collection
 */
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4404__auto__ = cljs.core.seq(coll);
if(temp__4404__auto__){
var coll__$1 = temp__4404__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
 * Returns the result of applying concat to the result of applying map
 * to f and colls.  Thus function f should return a collection. Returns
 * a transducer when no collections are provided
 * @param {...*} var_args
 */
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__10387__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__10387 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__10388__i = 0, G__10388__a = new Array(arguments.length -  1);
while (G__10388__i < G__10388__a.length) {G__10388__a[G__10388__i] = arguments[G__10388__i + 1]; ++G__10388__i;}
  colls = new cljs.core.IndexedSeq(G__10388__a,0);
} 
return G__10387__delegate.call(this,f,colls);};
G__10387.cljs$lang$maxFixedArity = 1;
G__10387.cljs$lang$applyTo = (function (arglist__10389){
var f = cljs.core.first(arglist__10389);
var colls = cljs.core.rest(arglist__10389);
return G__10387__delegate(f,colls);
});
G__10387.cljs$core$IFn$_invoke$arity$variadic = G__10387__delegate;
return G__10387;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__10390 = null;
if (arguments.length > 1) {
var G__10391__i = 0, G__10391__a = new Array(arguments.length -  1);
while (G__10391__i < G__10391__a.length) {G__10391__a[G__10391__i] = arguments[G__10391__i + 1]; ++G__10391__i;}
G__10390 = new cljs.core.IndexedSeq(G__10391__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__10390);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
 * Returns a lazy sequence of the items in coll for which
 * (pred item) returns true. pred must be free of side-effects.
 * Returns a transducer when no collection is provided.
 */
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__10410 = null;
var G__10410__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10410__1 = (function (result){
var G__10404 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10404) : rf.call(null,G__10404));
});
var G__10410__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__10405 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__10405) : pred.call(null,G__10405));
})())){
var G__10406 = result;
var G__10407 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10406,G__10407) : rf.call(null,G__10406,G__10407));
} else {
return result;
}
});
G__10410 = function(result,input){
switch(arguments.length){
case 0:
return G__10410__0.call(this);
case 1:
return G__10410__1.call(this,result);
case 2:
return G__10410__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10410.cljs$core$IFn$_invoke$arity$0 = G__10410__0;
G__10410.cljs$core$IFn$_invoke$arity$1 = G__10410__1;
G__10410.cljs$core$IFn$_invoke$arity$2 = G__10410__2;
return G__10410;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4813__auto___10411 = size;
var i_10412 = (0);
while(true){
if((i_10412 < n__4813__auto___10411)){
if(cljs.core.truth_((function (){var G__10408 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_10412);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__10408) : pred.call(null,G__10408));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_10412));
} else {
}

var G__10413 = (i_10412 + (1));
i_10412 = G__10413;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__10409 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__10409) : pred.call(null,G__10409));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
 * Returns a lazy sequence of the items in coll for which
 * (pred item) returns false. pred must be free of side-effects.
 * Returns a transducer when no collection is provided.
 */
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
 * Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
 * branch? must be a fn of one arg that returns true if passed a node
 * that can have children (but may not).  children must be a fn of one
 * arg that returns a sequence of the children. Will only be called on
 * nodes for which branch? returns true. Root is the root node of the
 * tree.
 */
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__10420 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__10420) : branch_QMARK_.call(null,G__10420));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__10421 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__10421) : children.call(null,G__10421));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
 * Takes any nested combination of sequential things (lists, vectors,
 * etc.) and returns their contents as a single, flat sequence.
 * (flatten nil) returns nil.
 */
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__10422_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__10422_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
 * Returns a new coll consisting of to-coll with all of the items of
 * from-coll conjoined. A transducer may be supplied.
 */
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__10425 = to;
if(G__10425){
var bit__4600__auto__ = (G__10425.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4600__auto__) || (G__10425.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__10426 = to;
if(G__10426){
var bit__4600__auto__ = (G__10426.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4600__auto__) || (G__10426.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
 * Returns a vector consisting of the result of applying f to the
 * set of first items of each coll, followed by applying f to the set
 * of second items in each coll, until any one of the colls is
 * exhausted.  Any remaining items in other colls are ignored. Function
 * f should accept number-of-colls arguments.
 * @param {...*} var_args
 */
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__10428 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10428) : f.call(null,G__10428));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__10429__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__10429 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__10430__i = 0, G__10430__a = new Array(arguments.length -  4);
while (G__10430__i < G__10430__a.length) {G__10430__a[G__10430__i] = arguments[G__10430__i + 4]; ++G__10430__i;}
  colls = new cljs.core.IndexedSeq(G__10430__a,0);
} 
return G__10429__delegate.call(this,f,c1,c2,c3,colls);};
G__10429.cljs$lang$maxFixedArity = 4;
G__10429.cljs$lang$applyTo = (function (arglist__10431){
var f = cljs.core.first(arglist__10431);
arglist__10431 = cljs.core.next(arglist__10431);
var c1 = cljs.core.first(arglist__10431);
arglist__10431 = cljs.core.next(arglist__10431);
var c2 = cljs.core.first(arglist__10431);
arglist__10431 = cljs.core.next(arglist__10431);
var c3 = cljs.core.first(arglist__10431);
var colls = cljs.core.rest(arglist__10431);
return G__10429__delegate(f,c1,c2,c3,colls);
});
G__10429.cljs$core$IFn$_invoke$arity$variadic = G__10429__delegate;
return G__10429;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__10432 = null;
if (arguments.length > 4) {
var G__10433__i = 0, G__10433__a = new Array(arguments.length -  4);
while (G__10433__i < G__10433__a.length) {G__10433__a[G__10433__i] = arguments[G__10433__i + 4]; ++G__10433__i;}
G__10432 = new cljs.core.IndexedSeq(G__10433__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__10432);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
 * Returns a vector of the items in coll for which
 * (pred item) returns true. pred must be free of side-effects.
 */
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__10435 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__10435) : pred.call(null,G__10435));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
 * Returns a lazy sequence of lists of n items each, at offsets step
 * apart. If step is not supplied, defaults to n, i.e. the partitions
 * do not overlap. If a pad collection is supplied, use its elements as
 * necessary to complete last partition up to n items. In case there are
 * not enough padding elements, return a partition with less than n items.
 */
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
 * Returns the value in a nested associative structure,
 * where ks is a sequence of keys. Returns nil if the key is not present,
 * or the not-found value if supplied.
 */
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__10450 = m__$1;
if(G__10450){
var bit__4607__auto__ = (G__10450.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4607__auto__) || (G__10450.cljs$core$ILookup$)){
return true;
} else {
if((!G__10450.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__10450);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__10450);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__10451 = sentinel;
var G__10452 = m__$2;
var G__10453 = cljs.core.next(ks__$1);
sentinel = G__10451;
m__$1 = G__10452;
ks__$1 = G__10453;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
 * Associates a value in a nested associative structure, where ks is a
 * sequence of keys and v is the new value and returns a new nested structure.
 * If any levels do not exist, hash-maps will be created.
 */
cljs.core.assoc_in = (function assoc_in(m,p__10454,v){
var vec__10459 = p__10454;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10459,(0),null);
var ks = cljs.core.nthnext(vec__10459,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
 * 'Updates' a value in a nested associative structure, where ks is a
 * sequence of keys and f is a function that will take the old value
 * and any supplied args and return the new value, and returns a new
 * nested structure.  If any levels do not exist, hash-maps will be
 * created.
 * @param {...*} var_args
 */
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__10460,f){
var vec__10498 = p__10460;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10498,(0),null);
var ks = cljs.core.nthnext(vec__10498,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10499 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10499) : f.call(null,G__10499));
})());
}
});
var update_in__4 = (function (m,p__10461,f,a){
var vec__10500 = p__10461;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10500,(0),null);
var ks = cljs.core.nthnext(vec__10500,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10501 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__10502 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10501,G__10502) : f.call(null,G__10501,G__10502));
})());
}
});
var update_in__5 = (function (m,p__10462,f,a,b){
var vec__10503 = p__10462;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10503,(0),null);
var ks = cljs.core.nthnext(vec__10503,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10504 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__10505 = a;
var G__10506 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10504,G__10505,G__10506) : f.call(null,G__10504,G__10505,G__10506));
})());
}
});
var update_in__6 = (function (m,p__10463,f,a,b,c){
var vec__10507 = p__10463;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10507,(0),null);
var ks = cljs.core.nthnext(vec__10507,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10508 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__10509 = a;
var G__10510 = b;
var G__10511 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__10508,G__10509,G__10510,G__10511) : f.call(null,G__10508,G__10509,G__10510,G__10511));
})());
}
});
var update_in__7 = (function() { 
var G__10513__delegate = function (m,p__10464,f,a,b,c,args){
var vec__10512 = p__10464;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10512,(0),null);
var ks = cljs.core.nthnext(vec__10512,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__10513 = function (m,p__10464,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__10514__i = 0, G__10514__a = new Array(arguments.length -  6);
while (G__10514__i < G__10514__a.length) {G__10514__a[G__10514__i] = arguments[G__10514__i + 6]; ++G__10514__i;}
  args = new cljs.core.IndexedSeq(G__10514__a,0);
} 
return G__10513__delegate.call(this,m,p__10464,f,a,b,c,args);};
G__10513.cljs$lang$maxFixedArity = 6;
G__10513.cljs$lang$applyTo = (function (arglist__10515){
var m = cljs.core.first(arglist__10515);
arglist__10515 = cljs.core.next(arglist__10515);
var p__10464 = cljs.core.first(arglist__10515);
arglist__10515 = cljs.core.next(arglist__10515);
var f = cljs.core.first(arglist__10515);
arglist__10515 = cljs.core.next(arglist__10515);
var a = cljs.core.first(arglist__10515);
arglist__10515 = cljs.core.next(arglist__10515);
var b = cljs.core.first(arglist__10515);
arglist__10515 = cljs.core.next(arglist__10515);
var c = cljs.core.first(arglist__10515);
var args = cljs.core.rest(arglist__10515);
return G__10513__delegate(m,p__10464,f,a,b,c,args);
});
G__10513.cljs$core$IFn$_invoke$arity$variadic = G__10513__delegate;
return G__10513;
})()
;
update_in = function(m,p__10464,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__10464,f);
case 4:
return update_in__4.call(this,m,p__10464,f,a);
case 5:
return update_in__5.call(this,m,p__10464,f,a,b);
case 6:
return update_in__6.call(this,m,p__10464,f,a,b,c);
default:
var G__10516 = null;
if (arguments.length > 6) {
var G__10517__i = 0, G__10517__a = new Array(arguments.length -  6);
while (G__10517__i < G__10517__a.length) {G__10517__a[G__10517__i] = arguments[G__10517__i + 6]; ++G__10517__i;}
G__10516 = new cljs.core.IndexedSeq(G__10517__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__10464,f,a,b,c, G__10516);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
 * 'Updates' a value in an associative structure, where k is a
 * key and f is a function that will take the old value
 * and any supplied args and return the new value, and returns a new
 * structure.  If the key does not exist, nil is passed as the old value.
 * @param {...*} var_args
 */
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10528 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10528) : f.call(null,G__10528));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10529 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__10530 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10529,G__10530) : f.call(null,G__10529,G__10530));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10531 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__10532 = x;
var G__10533 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10531,G__10532,G__10533) : f.call(null,G__10531,G__10532,G__10533));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10534 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__10535 = x;
var G__10536 = y;
var G__10537 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__10534,G__10535,G__10536,G__10537) : f.call(null,G__10534,G__10535,G__10536,G__10537));
})());
});
var update__7 = (function() { 
var G__10538__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__10538 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__10539__i = 0, G__10539__a = new Array(arguments.length -  6);
while (G__10539__i < G__10539__a.length) {G__10539__a[G__10539__i] = arguments[G__10539__i + 6]; ++G__10539__i;}
  more = new cljs.core.IndexedSeq(G__10539__a,0);
} 
return G__10538__delegate.call(this,m,k,f,x,y,z,more);};
G__10538.cljs$lang$maxFixedArity = 6;
G__10538.cljs$lang$applyTo = (function (arglist__10540){
var m = cljs.core.first(arglist__10540);
arglist__10540 = cljs.core.next(arglist__10540);
var k = cljs.core.first(arglist__10540);
arglist__10540 = cljs.core.next(arglist__10540);
var f = cljs.core.first(arglist__10540);
arglist__10540 = cljs.core.next(arglist__10540);
var x = cljs.core.first(arglist__10540);
arglist__10540 = cljs.core.next(arglist__10540);
var y = cljs.core.first(arglist__10540);
arglist__10540 = cljs.core.next(arglist__10540);
var z = cljs.core.first(arglist__10540);
var more = cljs.core.rest(arglist__10540);
return G__10538__delegate(m,k,f,x,y,z,more);
});
G__10538.cljs$core$IFn$_invoke$arity$variadic = G__10538__delegate;
return G__10538;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__10541 = null;
if (arguments.length > 6) {
var G__10542__i = 0, G__10542__a = new Array(arguments.length -  6);
while (G__10542__i < G__10542__a.length) {G__10542__a[G__10542__i] = arguments[G__10542__i + 6]; ++G__10542__i;}
G__10541 = new cljs.core.IndexedSeq(G__10542__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__10541);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__4513__auto__,writer__4514__auto__,opt__4515__auto__){
return cljs.core._write(writer__4514__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__10543 = (ll - (5));
var G__10544 = r;
ll = G__10543;
ret = G__10544;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__10549 = cljs.core.pv_aget(node,(0));
var G__10550 = (level - (5));
node = G__10549;
level = G__10550;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__10551 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__10552 = (level - (5));
node = G__10551;
level = G__10552;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__4513__auto__,writer__4514__auto__,opt__4515__auto__){
return cljs.core._write(writer__4514__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__10562 = init__$2;
var G__10563 = (j + i);
var G__10564 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10562,G__10563,G__10564) : f.call(null,G__10562,G__10563,G__10564));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__10575 = (j + (1));
var G__10576 = init__$3;
j = G__10575;
init__$2 = G__10576;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__10565 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10565) : cljs.core.deref.call(null,G__10565));
} else {
var G__10577 = (i + len);
var G__10578 = init__$2;
i = G__10577;
init__$1 = G__10578;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4347__auto__ = self__.__hash;
if(!((h__4347__auto__ == null))){
return h__4347__auto__;
} else {
var h__4347__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4347__auto____$1;

return h__4347__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__10566 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__10566) : cljs.core.tv_editable_root.call(null,G__10566));
})(),(function (){var G__10567 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__10567) : cljs.core.tv_editable_tail.call(null,G__10567));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__10568 = init__$2;
var G__10569 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10568,G__10569) : f.call(null,G__10568,G__10569));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__10579 = (j + (1));
var G__10580 = init__$3;
j = G__10579;
init__$2 = G__10580;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__10570 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10570) : cljs.core.deref.call(null,G__10570));
} else {
var G__10581 = (i + len);
var G__10582 = init__$2;
i = G__10581;
init__$1 = G__10582;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__10571 = coll__$1;
var G__10572 = cljs.core.first_array_for_longvec(coll__$1);
var G__10573 = (0);
var G__10574 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__10571,G__10572,G__10573,G__10574) : cljs.core.chunked_seq.call(null,G__10571,G__10572,G__10573,G__10574));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__4813__auto___10583 = len;
var i_10584 = (0);
while(true){
if((i_10584 < n__4813__auto___10583)){
(new_tail[i_10584] = (self__.tail[i_10584]));

var G__10585 = (i_10584 + (1));
i_10584 = G__10585;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__10586 = null;
var G__10586__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__10586__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__10586 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10586__2.call(this,self__,k);
case 3:
return G__10586__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10586.cljs$core$IFn$_invoke$arity$2 = G__10586__2;
G__10586.cljs$core$IFn$_invoke$arity$3 = G__10586__3;
return G__10586;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args10561){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10561)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__4513__auto__,writer__4514__auto__,opt__4515__auto__){
return cljs.core._write(writer__4514__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__10587 = (i + (1));
var G__10588 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__10587;
out = G__10588;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4904__auto__ = this;
return cljs.core.es6_iterator(this__4904__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
 * @param {...*} var_args
 */
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__10589__i = 0, G__10589__a = new Array(arguments.length -  0);
while (G__10589__i < G__10589__a.length) {G__10589__a[G__10589__i] = arguments[G__10589__i + 0]; ++G__10589__i;}
  args = new cljs.core.IndexedSeq(G__10589__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__10590){
var args = cljs.core.seq(arglist__10590);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__10591 = self__.vec;
var G__10592 = self__.node;
var G__10593 = self__.i;
var G__10594 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__10591,G__10592,G__10593,G__10594) : cljs.core.chunked_seq.call(null,G__10591,G__10592,G__10593,G__10594));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4347__auto__ = self__.__hash;
if(!((h__4347__auto__ == null))){
return h__4347__auto__;
} else {
var h__4347__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4347__auto____$1;

return h__4347__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__10595 = self__.vec;
var G__10596 = (self__.i + self__.off);
var G__10597 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__10595,G__10596,G__10597) : cljs.core.subvec.call(null,G__10595,G__10596,G__10597));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__10598 = self__.vec;
var G__10599 = (self__.i + self__.off);
var G__10600 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__10598,G__10599,G__10600) : cljs.core.subvec.call(null,G__10598,G__10599,G__10600));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__10601 = self__.vec;
var G__10602 = self__.node;
var G__10603 = self__.i;
var G__10604 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__10601,G__10602,G__10603,G__10604) : cljs.core.chunked_seq.call(null,G__10601,G__10602,G__10603,G__10604));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__10605 = self__.vec;
var G__10606 = cljs.core.unchecked_array_for(self__.vec,end);
var G__10607 = end;
var G__10608 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__10605,G__10606,G__10607,G__10608) : cljs.core.chunked_seq.call(null,G__10605,G__10606,G__10607,G__10608));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__10609 = self__.vec;
var G__10610 = self__.node;
var G__10611 = self__.i;
var G__10612 = self__.off;
var G__10613 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__10609,G__10610,G__10611,G__10612,G__10613) : cljs.core.chunked_seq.call(null,G__10609,G__10610,G__10611,G__10612,G__10613));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__10614 = self__.vec;
var G__10615 = cljs.core.unchecked_array_for(self__.vec,end);
var G__10616 = end;
var G__10617 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__10614,G__10615,G__10616,G__10617) : cljs.core.chunked_seq.call(null,G__10614,G__10615,G__10616,G__10617));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__4513__auto__,writer__4514__auto__,opt__4515__auto__){
return cljs.core._write(writer__4514__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4904__auto__ = this;
return cljs.core.es6_iterator(this__4904__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__10619 = self__.meta;
var G__10620 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__10621 = self__.start;
var G__10622 = (function (){var x__4243__auto__ = self__.end;
var y__4244__auto__ = (v_pos + (1));
return ((x__4243__auto__ > y__4244__auto__) ? x__4243__auto__ : y__4244__auto__);
})();
var G__10623 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__10619,G__10620,G__10621,G__10622,G__10623) : cljs.core.build_subvec.call(null,G__10619,G__10620,G__10621,G__10622,G__10623));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__10624 = self__.meta;
var G__10625 = self__.v;
var G__10626 = self__.start;
var G__10627 = (self__.end - (1));
var G__10628 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__10624,G__10625,G__10626,G__10627,G__10628) : cljs.core.build_subvec.call(null,G__10624,G__10625,G__10626,G__10627,G__10628));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4347__auto__ = self__.__hash;
if(!((h__4347__auto__ == null))){
return h__4347__auto__;
} else {
var h__4347__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4347__auto____$1;

return h__4347__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__10630 = meta__$1;
var G__10631 = self__.v;
var G__10632 = self__.start;
var G__10633 = self__.end;
var G__10634 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__10630,G__10631,G__10632,G__10633,G__10634) : cljs.core.build_subvec.call(null,G__10630,G__10631,G__10632,G__10633,G__10634));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__10635 = self__.meta;
var G__10636 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__10637 = self__.start;
var G__10638 = (self__.end + (1));
var G__10639 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__10635,G__10636,G__10637,G__10638,G__10639) : cljs.core.build_subvec.call(null,G__10635,G__10636,G__10637,G__10638,G__10639));
});

cljs.core.Subvec.prototype.call = (function() {
var G__10640 = null;
var G__10640__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__10640__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__10640 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10640__2.call(this,self__,k);
case 3:
return G__10640__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10640.cljs$core$IFn$_invoke$arity$2 = G__10640__2;
G__10640.cljs$core$IFn$_invoke$arity$3 = G__10640__3;
return G__10640;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args10618){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10618)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__4513__auto__,writer__4514__auto__,opt__4515__auto__){
return cljs.core._write(writer__4514__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4904__auto__ = this;
return cljs.core.es6_iterator(this__4904__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__10641 = meta;
var G__10642 = v.v;
var G__10643 = (v.start + start);
var G__10644 = (v.start + end);
var G__10645 = __hash;
meta = G__10641;
v = G__10642;
start = G__10643;
end = G__10644;
__hash = G__10645;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
 * Returns a persistent vector of the items in vector from
 * start (inclusive) to end (exclusive).  If end is not supplied,
 * defaults to (count vector). This operation is O(1) and very fast, as
 * the resulting vector shares structure with the original and no
 * trimming is done.
 */
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj10652 = {};
return obj10652;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__10660 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__10661 = (level - (5));
node = G__10660;
level = G__10661;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__10665 = null;
var G__10665__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10665__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10665 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10665__2.call(this,self__,k);
case 3:
return G__10665__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10665.cljs$core$IFn$_invoke$arity$2 = G__10665__2;
G__10665.cljs$core$IFn$_invoke$arity$3 = G__10665__3;
return G__10665;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args10662){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10662)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__4513__auto__,writer__4514__auto__,opt__4515__auto__){
return cljs.core._write(writer__4514__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4347__auto__ = self__.__hash;
if(!((h__4347__auto__ == null))){
return h__4347__auto__;
} else {
var h__4347__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4347__auto____$1;

return h__4347__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4404__auto__ = cljs.core.next(self__.front);
if(temp__4404__auto__){
var f1 = temp__4404__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__4513__auto__,writer__4514__auto__,opt__4515__auto__){
return cljs.core._write(writer__4514__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4904__auto__ = this;
return cljs.core.es6_iterator(this__4904__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4404__auto__ = cljs.core.next(self__.front);
if(temp__4404__auto__){
var f1 = temp__4404__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4347__auto__ = self__.__hash;
if(!((h__4347__auto__ == null))){
return h__4347__auto__;
} else {
var h__4347__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4347__auto____$1;

return h__4347__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__3926__auto__ = self__.front;
if(cljs.core.truth_(or__3926__auto__)){
return or__3926__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3926__auto__ = self__.rear;
if(cljs.core.truth_(or__3926__auto__)){
return or__3926__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__4513__auto__,writer__4514__auto__,opt__4515__auto__){
return cljs.core._write(writer__4514__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4904__auto__ = this;
return cljs.core.es6_iterator(this__4904__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__4513__auto__,writer__4514__auto__,opt__4515__auto__){
return cljs.core._write(writer__4514__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
 * Assumes y is a map. Returns true if x equals y, otherwise returns
 * false.
 */
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__10666 = (i + incr);
i = G__10666;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__10667 = (i + (1));
var G__10668 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__10667;
out = G__10668;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj10672 = {};
return obj10672;
})();
var l = ks.length;
var i_10673 = (0);
while(true){
if((i_10673 < l)){
var k_10674 = (ks[i_10673]);
(new_obj[k_10674] = (obj[k_10674]));

var G__10675 = (i_10673 + (1));
i_10673 = G__10675;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3914__auto__ = (function (){var G__10679 = k;
return goog.isString(G__10679);
})();
if(cljs.core.truth_(and__3914__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3914__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__10680 = init__$1;
var G__10681 = k;
var G__10682 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10680,G__10681,G__10682) : f.call(null,G__10680,G__10681,G__10682));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__10683 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10683) : cljs.core.deref.call(null,G__10683));
} else {
var G__10689 = cljs.core.rest(keys__$1);
var G__10690 = init__$2;
keys__$1 = G__10689;
init__$1 = G__10690;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4347__auto__ = self__.__hash;
if(!((h__4347__auto__ == null))){
return h__4347__auto__;
} else {
var h__4347__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4347__auto____$1;

return h__4347__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3914__auto__ = (function (){var G__10685 = k;
return goog.isString(G__10685);
})();
if(cljs.core.truth_(and__3914__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3914__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__10686 = k;
return goog.isString(G__10686);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3914__auto__ = (function (){var G__10688 = k;
return goog.isString(G__10688);
})();
if(cljs.core.truth_(and__3914__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3914__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__10676_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__10676_SHARP_,(self__.strobj[p1__10676_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__10691 = null;
var G__10691__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10691__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10691 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10691__2.call(this,self__,k);
case 3:
return G__10691__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10691.cljs$core$IFn$_invoke$arity$2 = G__10691__2;
G__10691.cljs$core$IFn$_invoke$arity$3 = G__10691__3;
return G__10691;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args10677){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10677)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__4513__auto__,writer__4514__auto__,opt__4515__auto__){
return cljs.core._write(writer__4514__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj10693 = {};
return obj10693;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__10694 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10694,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10694,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__4513__auto__,writer__4514__auto__,opt__4515__auto__){
return cljs.core._write(writer__4514__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__4513__auto__,writer__4514__auto__,opt__4515__auto__){
return cljs.core._write(writer__4514__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__10695 = (i + (2));
i = G__10695;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__10696 = (i + (2));
i = G__10696;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__10697 = (i + (2));
i = G__10697;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__10698 = (i + (2));
i = G__10698;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__10699 = (i + (2));
i = G__10699;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__3926__auto__ = (function (){var G__10703 = k;
return goog.isString(G__10703);
})();
if(cljs.core.truth_(or__3926__auto__)){
return or__3926__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_10704 = (0);
while(true){
if((i_10704 < l)){
(narr[i_10704] = (arr[i_10704]));

var G__10705 = (i_10704 + (1));
i_10704 = G__10705;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__4513__auto__,writer__4514__auto__,opt__4515__auto__){
return cljs.core._write(writer__4514__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4904__auto__ = this;
return cljs.core.es6_iterator(this__4904__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__4513__auto__,writer__4514__auto__,opt__4515__auto__){
return cljs.core._write(writer__4514__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__10707 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__10707) : cljs.core.keys.call(null,G__10707));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__10708 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__10708) : cljs.core.vals.call(null,G__10708));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__10709 = cljs.core.seq(coll);
var chunk__10710 = null;
var count__10711 = (0);
var i__10712 = (0);
while(true){
if((i__10712 < count__10711)){
var vec__10713 = chunk__10710.cljs$core$IIndexed$_nth$arity$2(null,i__10712);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10713,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10713,(1),null);
var G__10714_10727 = v;
var G__10715_10728 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10714_10727,G__10715_10728) : f.call(null,G__10714_10727,G__10715_10728));

var G__10729 = seq__10709;
var G__10730 = chunk__10710;
var G__10731 = count__10711;
var G__10732 = (i__10712 + (1));
seq__10709 = G__10729;
chunk__10710 = G__10730;
count__10711 = G__10731;
i__10712 = G__10732;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__10709);
if(temp__4406__auto__){
var seq__10709__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__10709__$1)){
var c__4713__auto__ = cljs.core.chunk_first(seq__10709__$1);
var G__10733 = cljs.core.chunk_rest(seq__10709__$1);
var G__10734 = c__4713__auto__;
var G__10735 = cljs.core.count(c__4713__auto__);
var G__10736 = (0);
seq__10709 = G__10733;
chunk__10710 = G__10734;
count__10711 = G__10735;
i__10712 = G__10736;
continue;
} else {
var vec__10716 = cljs.core.first(seq__10709__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10716,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10716,(1),null);
var G__10717_10737 = v;
var G__10718_10738 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10717_10737,G__10718_10738) : f.call(null,G__10717_10737,G__10718_10738));

var G__10739 = cljs.core.next(seq__10709__$1);
var G__10740 = null;
var G__10741 = (0);
var G__10742 = (0);
seq__10709 = G__10739;
chunk__10710 = G__10740;
count__10711 = G__10741;
i__10712 = G__10742;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__10719 = init__$1;
var G__10720 = (self__.arr[i]);
var G__10721 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10719,G__10720,G__10721) : f.call(null,G__10719,G__10720,G__10721));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__10722 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10722) : cljs.core.deref.call(null,G__10722));
} else {
var G__10743 = (i + (2));
var G__10744 = init__$2;
i = G__10743;
init__$1 = G__10744;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4347__auto__ = self__.__hash;
if(!((h__4347__auto__ == null))){
return h__4347__auto__;
} else {
var h__4347__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4347__auto____$1;

return h__4347__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__10723 = other;
if(G__10723){
var bit__4600__auto__ = (G__10723.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4600__auto__) || (G__10723.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__10745 = (i + (2));
i = G__10745;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj10725 = {};
return obj10725;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__10746 = (s + (2));
var G__10747 = d;
s = G__10746;
d = G__10747;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__10748 = (s + (2));
var G__10749 = (d + (2));
s = G__10748;
d = G__10749;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__10726 = cljs.core.aclone(self__.arr);
(G__10726[(idx + (1))] = v);

return G__10726;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__10750 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__10751 = cljs.core.next(es);
ret = G__10750;
es = G__10751;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__10752 = null;
var G__10752__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10752__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10752 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10752__2.call(this,self__,k);
case 3:
return G__10752__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10752.cljs$core$IFn$_invoke$arity$2 = G__10752__2;
G__10752.cljs$core$IFn$_invoke$arity$3 = G__10752__3;
return G__10752;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args10706){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10706)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__4513__auto__,writer__4514__auto__,opt__4515__auto__){
return cljs.core._write(writer__4514__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__10753 = (i + (2));
var G__10754 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__10753;
ret = G__10754;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4904__auto__ = this;
return cljs.core.es6_iterator(this__4904__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__10755_10763 = self__.arr;
G__10755_10763.pop();

G__10755_10763.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__10756 = self__.len;
var G__10757 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__10756,G__10757) : cljs.core.array__GT_transient_hash_map.call(null,G__10756,G__10757));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__10758 = o;
if(G__10758){
var bit__4607__auto__ = (G__10758.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4607__auto__) || (G__10758.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__10758.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__10758);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__10758);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__10759 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__10759) : cljs.core.key.call(null,G__10759));
})(),(function (){var G__10760 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__10760) : cljs.core.val.call(null,G__10760));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4404__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4404__auto__)){
var e = temp__4404__auto__;
var G__10764 = cljs.core.next(es);
var G__10765 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__10761 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__10761) : cljs.core.key.call(null,G__10761));
})(),(function (){var G__10762 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__10762) : cljs.core.val.call(null,G__10762));
})());
es = G__10764;
tcoll__$2 = G__10765;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__4513__auto__,writer__4514__auto__,opt__4515__auto__){
return cljs.core._write(writer__4514__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__10766 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__10767 = (i + (2));
out = G__10766;
i = G__10767;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__4513__auto__,writer__4514__auto__,opt__4515__auto__){
return cljs.core._write(writer__4514__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__10770 = cljs.core.aclone(arr);
(G__10770[i] = a);

return G__10770;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__10771 = cljs.core.aclone(arr);
(G__10771[i] = a);

(G__10771[j] = b);

return G__10771;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__10776 = init__$1;
var G__10777 = k;
var G__10778 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10776,G__10777,G__10778) : f.call(null,G__10776,G__10777,G__10778));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__10779 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10779) : cljs.core.deref.call(null,G__10779));
} else {
var G__10780 = (i + (2));
var G__10781 = init__$2;
i = G__10780;
init__$1 = G__10781;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__10782 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__10782) : cljs.core.create_inode_seq.call(null,G__10782));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_10796 = (0);
var j_10797 = (0);
while(true){
if((i_10796 < (32))){
if((((self__.bitmap >>> i_10796) & (1)) === (0))){
var G__10798 = (i_10796 + (1));
var G__10799 = j_10797;
i_10796 = G__10798;
j_10797 = G__10799;
continue;
} else {
(nodes[i_10796] = ((!(((self__.arr[j_10797]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_10797])),(self__.arr[j_10797]),(self__.arr[(j_10797 + (1))]),added_leaf_QMARK_):(self__.arr[(j_10797 + (1))])));

var G__10800 = (i_10796 + (1));
var G__10801 = (j_10797 + (2));
i_10796 = G__10800;
j_10797 = G__10801;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__10783 = edit__$1;
var G__10784 = (shift + (5));
var G__10785 = key_or_nil;
var G__10786 = val_or_node;
var G__10787 = hash;
var G__10788 = key;
var G__10789 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__10783,G__10784,G__10785,G__10786,G__10787,G__10788,G__10789) : cljs.core.create_node.call(null,G__10783,G__10784,G__10785,G__10786,G__10787,G__10788,G__10789));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_10802 = (0);
var j_10803 = (0);
while(true){
if((i_10802 < (32))){
if((((self__.bitmap >>> i_10802) & (1)) === (0))){
var G__10804 = (i_10802 + (1));
var G__10805 = j_10803;
i_10802 = G__10804;
j_10803 = G__10805;
continue;
} else {
(nodes[i_10802] = ((!(((self__.arr[j_10803]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_10803])),(self__.arr[j_10803]),(self__.arr[(j_10803 + (1))]),added_leaf_QMARK_):(self__.arr[(j_10803 + (1))])));

var G__10806 = (i_10802 + (1));
var G__10807 = (j_10803 + (2));
i_10802 = G__10806;
j_10803 = G__10807;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__10790 = (shift + (5));
var G__10791 = key_or_nil;
var G__10792 = val_or_node;
var G__10793 = hash;
var G__10794 = key;
var G__10795 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__10790,G__10791,G__10792,G__10793,G__10794,G__10795) : cljs.core.create_node.call(null,G__10790,G__10791,G__10792,G__10793,G__10794,G__10795));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__4513__auto__,writer__4514__auto__,opt__4515__auto__){
return cljs.core._write(writer__4514__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__10808 = (i + (1));
var G__10809 = (j + (2));
var G__10810 = (bitmap | ((1) << i));
i = G__10808;
j = G__10809;
bitmap = G__10810;
continue;
} else {
var G__10811 = (i + (1));
var G__10812 = j;
var G__10813 = bitmap;
i = G__10811;
j = G__10812;
bitmap = G__10813;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__10814 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__10814) : cljs.core.create_array_node_seq.call(null,G__10814));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__10815 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10815) : cljs.core.deref.call(null,G__10815));
} else {
var G__10816 = (i + (1));
var G__10817 = init__$2;
i = G__10816;
init__$1 = G__10817;
continue;
}
} else {
var G__10818 = (i + (1));
var G__10819 = init__$1;
i = G__10818;
init__$1 = G__10819;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__4513__auto__,writer__4514__auto__,opt__4515__auto__){
return cljs.core._write(writer__4514__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__10820 = (i + (2));
i = G__10820;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__10821 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__10821) : cljs.core.create_inode_seq.call(null,G__10821));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__4513__auto__,writer__4514__auto__,opt__4515__auto__){
return cljs.core._write(writer__4514__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4347__auto__ = self__.__hash;
if(!((h__4347__auto__ == null))){
return h__4347__auto__;
} else {
var h__4347__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4347__auto____$1;

return h__4347__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__10822 = self__.nodes;
var G__10823 = (self__.i + (2));
var G__10824 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__10822,G__10823,G__10824) : cljs.core.create_inode_seq.call(null,G__10822,G__10823,G__10824));
} else {
var G__10825 = self__.nodes;
var G__10826 = self__.i;
var G__10827 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__10825,G__10826,G__10827) : cljs.core.create_inode_seq.call(null,G__10825,G__10826,G__10827));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__4513__auto__,writer__4514__auto__,opt__4515__auto__){
return cljs.core._write(writer__4514__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4904__auto__ = this;
return cljs.core.es6_iterator(this__4904__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4404__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4404__auto__)){
var node = temp__4404__auto__;
var temp__4404__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4404__auto____$1)){
var node_seq = temp__4404__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__10831 = (j + (2));
j = G__10831;
continue;
}
} else {
var G__10832 = (j + (2));
j = G__10832;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4347__auto__ = self__.__hash;
if(!((h__4347__auto__ == null))){
return h__4347__auto__;
} else {
var h__4347__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4347__auto____$1;

return h__4347__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__10833 = null;
var G__10834 = self__.nodes;
var G__10835 = self__.i;
var G__10836 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__10833,G__10834,G__10835,G__10836) : cljs.core.create_array_node_seq.call(null,G__10833,G__10834,G__10835,G__10836));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__4513__auto__,writer__4514__auto__,opt__4515__auto__){
return cljs.core._write(writer__4514__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4904__auto__ = this;
return cljs.core.es6_iterator(this__4904__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4404__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4404__auto__)){
var nj = temp__4404__auto__;
var temp__4404__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4404__auto____$1)){
var ns = temp__4404__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__10841 = (j + (1));
j = G__10841;
continue;
}
} else {
var G__10842 = (j + (1));
j = G__10842;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__10844 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__10844) : cljs.core.keys.call(null,G__10844));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__10845 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__10845) : cljs.core.vals.call(null,G__10845));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__10846 = cljs.core.seq(coll);
var chunk__10847 = null;
var count__10848 = (0);
var i__10849 = (0);
while(true){
if((i__10849 < count__10848)){
var vec__10850 = chunk__10847.cljs$core$IIndexed$_nth$arity$2(null,i__10849);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10850,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10850,(1),null);
var G__10851_10862 = v;
var G__10852_10863 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10851_10862,G__10852_10863) : f.call(null,G__10851_10862,G__10852_10863));

var G__10864 = seq__10846;
var G__10865 = chunk__10847;
var G__10866 = count__10848;
var G__10867 = (i__10849 + (1));
seq__10846 = G__10864;
chunk__10847 = G__10865;
count__10848 = G__10866;
i__10849 = G__10867;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__10846);
if(temp__4406__auto__){
var seq__10846__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__10846__$1)){
var c__4713__auto__ = cljs.core.chunk_first(seq__10846__$1);
var G__10868 = cljs.core.chunk_rest(seq__10846__$1);
var G__10869 = c__4713__auto__;
var G__10870 = cljs.core.count(c__4713__auto__);
var G__10871 = (0);
seq__10846 = G__10868;
chunk__10847 = G__10869;
count__10848 = G__10870;
i__10849 = G__10871;
continue;
} else {
var vec__10853 = cljs.core.first(seq__10846__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10853,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10853,(1),null);
var G__10854_10872 = v;
var G__10855_10873 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10854_10872,G__10855_10873) : f.call(null,G__10854_10872,G__10855_10873));

var G__10874 = cljs.core.next(seq__10846__$1);
var G__10875 = null;
var G__10876 = (0);
var G__10877 = (0);
seq__10846 = G__10874;
chunk__10847 = G__10875;
count__10848 = G__10876;
i__10849 = G__10877;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__10856 = init;
var G__10857 = null;
var G__10858 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10856,G__10857,G__10858) : f.call(null,G__10856,G__10857,G__10858));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__10859 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10859) : cljs.core.deref.call(null,G__10859));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4347__auto__ = self__.__hash;
if(!((h__4347__auto__ == null))){
return h__4347__auto__;
} else {
var h__4347__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4347__auto____$1;

return h__4347__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj10861 = {};
return obj10861;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__10878 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__10879 = cljs.core.next(es);
ret = G__10878;
es = G__10879;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__10880 = null;
var G__10880__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10880__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10880 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10880__2.call(this,self__,k);
case 3:
return G__10880__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10880.cljs$core$IFn$_invoke$arity$2 = G__10880__2;
G__10880.cljs$core$IFn$_invoke$arity$3 = G__10880__3;
return G__10880;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args10843){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10843)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__4513__auto__,writer__4514__auto__,opt__4515__auto__){
return cljs.core._write(writer__4514__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__10881 = (i + (2));
var G__10882 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__10881;
ret = G__10882;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__10883 = (i + (1));
var G__10884 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__10883;
out = G__10884;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4904__auto__ = this;
return cljs.core.es6_iterator(this__4904__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__10885 = o;
if(G__10885){
var bit__4607__auto__ = (G__10885.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4607__auto__) || (G__10885.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__10885.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__10885);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__10885);
}
})()){
return tcoll.assoc_BANG_((function (){var G__10886 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__10886) : cljs.core.key.call(null,G__10886));
})(),(function (){var G__10887 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__10887) : cljs.core.val.call(null,G__10887));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4404__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4404__auto__)){
var e = temp__4404__auto__;
var G__10890 = cljs.core.next(es);
var G__10891 = tcoll__$1.assoc_BANG_((function (){var G__10888 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__10888) : cljs.core.key.call(null,G__10888));
})(),(function (){var G__10889 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__10889) : cljs.core.val.call(null,G__10889));
})());
es = G__10890;
tcoll__$1 = G__10891;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__4513__auto__,writer__4514__auto__,opt__4515__auto__){
return cljs.core._write(writer__4514__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__10892 = ((ascending_QMARK_)?t.left:t.right);
var G__10893 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__10892;
stack__$1 = G__10893;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4347__auto__ = self__.__hash;
if(!((h__4347__auto__ == null))){
return h__4347__auto__;
} else {
var h__4347__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4347__auto____$1;

return h__4347__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__4513__auto__,writer__4514__auto__,opt__4515__auto__){
return cljs.core._write(writer__4514__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4904__auto__ = this;
return cljs.core.es6_iterator(this__4904__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__10906 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10906) : cljs.core.deref.call(null,G__10906));
} else {
var init__$2 = (function (){var G__10907 = init__$1;
var G__10908 = node.key;
var G__10909 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10907,G__10908,G__10909) : f.call(null,G__10907,G__10908,G__10909));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__10910 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10910) : cljs.core.deref.call(null,G__10910));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__10911 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10911) : cljs.core.deref.call(null,G__10911));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4347__auto__ = self__.__hash;
if(!((h__4347__auto__ == null))){
return h__4347__auto__;
} else {
var h__4347__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4347__auto____$1;

return h__4347__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__10913 = null;
var G__10913__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10913__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10913 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10913__2.call(this,self__,k);
case 3:
return G__10913__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10913.cljs$core$IFn$_invoke$arity$2 = G__10913__2;
G__10913.cljs$core$IFn$_invoke$arity$3 = G__10913__3;
return G__10913;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args10912){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10912)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__4513__auto__,writer__4514__auto__,opt__4515__auto__){
return cljs.core._write(writer__4514__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4904__auto__ = this;
return cljs.core.es6_iterator(this__4904__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4347__auto__ = self__.__hash;
if(!((h__4347__auto__ == null))){
return h__4347__auto__;
} else {
var h__4347__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4347__auto____$1;

return h__4347__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__10915 = null;
var G__10915__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10915__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10915 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10915__2.call(this,self__,k);
case 3:
return G__10915__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10915.cljs$core$IFn$_invoke$arity$2 = G__10915__2;
G__10915.cljs$core$IFn$_invoke$arity$3 = G__10915__3;
return G__10915;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args10914){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10914)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__4513__auto__,writer__4514__auto__,opt__4515__auto__){
return cljs.core._write(writer__4514__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4904__auto__ = this;
return cljs.core.es6_iterator(this__4904__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__10928 = k;
var G__10929 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__10928,G__10929) : comp.call(null,G__10928,G__10929));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__10948 = k;
var G__10949 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__10948,G__10949) : comp.call(null,G__10948,G__10949));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__10960 = k;
var G__10961 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__10960,G__10961) : comp.call(null,G__10960,G__10961));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__10963 = cljs.core.seq(coll);
var chunk__10964 = null;
var count__10965 = (0);
var i__10966 = (0);
while(true){
if((i__10966 < count__10965)){
var vec__10967 = chunk__10964.cljs$core$IIndexed$_nth$arity$2(null,i__10966);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10967,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10967,(1),null);
var G__10968_10980 = v;
var G__10969_10981 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10968_10980,G__10969_10981) : f.call(null,G__10968_10980,G__10969_10981));

var G__10982 = seq__10963;
var G__10983 = chunk__10964;
var G__10984 = count__10965;
var G__10985 = (i__10966 + (1));
seq__10963 = G__10982;
chunk__10964 = G__10983;
count__10965 = G__10984;
i__10966 = G__10985;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__10963);
if(temp__4406__auto__){
var seq__10963__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__10963__$1)){
var c__4713__auto__ = cljs.core.chunk_first(seq__10963__$1);
var G__10986 = cljs.core.chunk_rest(seq__10963__$1);
var G__10987 = c__4713__auto__;
var G__10988 = cljs.core.count(c__4713__auto__);
var G__10989 = (0);
seq__10963 = G__10986;
chunk__10964 = G__10987;
count__10965 = G__10988;
i__10966 = G__10989;
continue;
} else {
var vec__10970 = cljs.core.first(seq__10963__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10970,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10970,(1),null);
var G__10971_10990 = v;
var G__10972_10991 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10971_10990,G__10972_10991) : f.call(null,G__10971_10990,G__10972_10991));

var G__10992 = cljs.core.next(seq__10963__$1);
var G__10993 = null;
var G__10994 = (0);
var G__10995 = (0);
seq__10963 = G__10992;
chunk__10964 = G__10993;
count__10965 = G__10994;
i__10966 = G__10995;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__10973 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__10973) : cljs.core.keys.call(null,G__10973));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__10974 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__10974) : cljs.core.vals.call(null,G__10974));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__10975 = k;
var G__10976 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__10975,G__10976) : self__.comp.call(null,G__10975,G__10976));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__10996 = t.left;
t = G__10996;
continue;
} else {
var G__10997 = t.right;
t = G__10997;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4347__auto__ = self__.__hash;
if(!((h__4347__auto__ == null))){
return h__4347__auto__;
} else {
var h__4347__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4347__auto____$1;

return h__4347__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__10998 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__10999 = cljs.core.next(es);
ret = G__10998;
es = G__10999;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__11000 = null;
var G__11000__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__11000__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__11000 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11000__2.call(this,self__,k);
case 3:
return G__11000__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11000.cljs$core$IFn$_invoke$arity$2 = G__11000__2;
G__11000.cljs$core$IFn$_invoke$arity$3 = G__11000__3;
return G__11000;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args10962){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10962)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__10977 = k;
var G__10978 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__10977,G__10978) : self__.comp.call(null,G__10977,G__10978));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__11001 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__11002 = t.left;
stack = G__11001;
t = G__11002;
continue;
} else {
var G__11003 = stack;
var G__11004 = t.right;
stack = G__11003;
t = G__11004;
continue;
}
} else {
if((c > (0))){
var G__11005 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__11006 = t.right;
stack = G__11005;
t = G__11006;
continue;
} else {
var G__11007 = stack;
var G__11008 = t.left;
stack = G__11007;
t = G__11008;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__10979 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__10979) : cljs.core.key.call(null,G__10979));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__4513__auto__,writer__4514__auto__,opt__4515__auto__){
return cljs.core._write(writer__4514__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4904__auto__ = this;
return cljs.core.es6_iterator(this__4904__auto__);
}));
/**
 * keyval => key val
 * Returns a new hash map with supplied mappings.
 * @param {...*} var_args
 */
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__11009 = cljs.core.nnext(in$);
var G__11010 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__11009;
out = G__11010;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__11011__i = 0, G__11011__a = new Array(arguments.length -  0);
while (G__11011__i < G__11011__a.length) {G__11011__a[G__11011__i] = arguments[G__11011__i + 0]; ++G__11011__i;}
  keyvals = new cljs.core.IndexedSeq(G__11011__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__11012){
var keyvals = cljs.core.seq(arglist__11012);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
 * keyval => key val
 * Returns a new array map with supplied mappings.
 * @param {...*} var_args
 */
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__11013__i = 0, G__11013__a = new Array(arguments.length -  0);
while (G__11013__i < G__11013__a.length) {G__11013__a[G__11013__i] = arguments[G__11013__i + 0]; ++G__11013__i;}
  keyvals = new cljs.core.IndexedSeq(G__11013__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__11014){
var keyvals = cljs.core.seq(arglist__11014);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
 * keyval => key val
 * Returns a new object map with supplied mappings.
 * @param {...*} var_args
 */
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj11018 = {};
return obj11018;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__11019 = cljs.core.nnext(kvs);
kvs = G__11019;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__11020__i = 0, G__11020__a = new Array(arguments.length -  0);
while (G__11020__i < G__11020__a.length) {G__11020__a[G__11020__i] = arguments[G__11020__i + 0]; ++G__11020__i;}
  keyvals = new cljs.core.IndexedSeq(G__11020__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__11021){
var keyvals = cljs.core.seq(arglist__11021);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
 * keyval => key val
 * Returns a new sorted map with supplied mappings.
 * @param {...*} var_args
 */
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__11022 = cljs.core.nnext(in$);
var G__11023 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__11022;
out = G__11023;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__11024__i = 0, G__11024__a = new Array(arguments.length -  0);
while (G__11024__i < G__11024__a.length) {G__11024__a[G__11024__i] = arguments[G__11024__i + 0]; ++G__11024__i;}
  keyvals = new cljs.core.IndexedSeq(G__11024__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__11025){
var keyvals = cljs.core.seq(arglist__11025);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
 * keyval => key val
 * Returns a new sorted map with supplied mappings, using the supplied comparator.
 * @param {...*} var_args
 */
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__11026 = cljs.core.nnext(in$);
var G__11027 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__11026;
out = G__11027;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__11028__i = 0, G__11028__a = new Array(arguments.length -  1);
while (G__11028__i < G__11028__a.length) {G__11028__a[G__11028__i] = arguments[G__11028__i + 1]; ++G__11028__i;}
  keyvals = new cljs.core.IndexedSeq(G__11028__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__11029){
var comparator = cljs.core.first(arglist__11029);
var keyvals = cljs.core.rest(arglist__11029);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__11030 = self__.mseq;
if(G__11030){
var bit__4607__auto__ = (G__11030.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4607__auto__) || (G__11030.cljs$core$INext$)){
return true;
} else {
if((!G__11030.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__11030);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__11030);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__11031 = self__.mseq;
if(G__11031){
var bit__4607__auto__ = (G__11031.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4607__auto__) || (G__11031.cljs$core$INext$)){
return true;
} else {
if((!G__11031.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__11031);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__11031);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__4513__auto__,writer__4514__auto__,opt__4515__auto__){
return cljs.core._write(writer__4514__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4904__auto__ = this;
return cljs.core.es6_iterator(this__4904__auto__);
}));
/**
 * Returns a sequence of the map's keys.
 */
cljs.core.keys = (function keys(hash_map){
var temp__4406__auto__ = cljs.core.seq(hash_map);
if(temp__4406__auto__){
var mseq = temp__4406__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
 * Returns the key of the map entry.
 */
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__11032 = self__.mseq;
if(G__11032){
var bit__4607__auto__ = (G__11032.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4607__auto__) || (G__11032.cljs$core$INext$)){
return true;
} else {
if((!G__11032.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__11032);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__11032);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__11033 = self__.mseq;
if(G__11033){
var bit__4607__auto__ = (G__11033.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4607__auto__) || (G__11033.cljs$core$INext$)){
return true;
} else {
if((!G__11033.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__11033);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__11033);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__4513__auto__,writer__4514__auto__,opt__4515__auto__){
return cljs.core._write(writer__4514__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4904__auto__ = this;
return cljs.core.es6_iterator(this__4904__auto__);
}));
/**
 * Returns a sequence of the map's values.
 */
cljs.core.vals = (function vals(hash_map){
var temp__4406__auto__ = cljs.core.seq(hash_map);
if(temp__4406__auto__){
var mseq = temp__4406__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
 * Returns the value in the map entry.
 */
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
 * Returns a map that consists of the rest of the maps conj-ed onto
 * the first.  If a key occurs in more than one map, the mapping from
 * the latter (left-to-right) will be the mapping in the result.
 * @param {...*} var_args
 */
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__11034_SHARP_,p2__11035_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3926__auto__ = p1__11034_SHARP_;
if(cljs.core.truth_(or__3926__auto__)){
return or__3926__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__11035_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__11036__i = 0, G__11036__a = new Array(arguments.length -  0);
while (G__11036__i < G__11036__a.length) {G__11036__a[G__11036__i] = arguments[G__11036__i + 0]; ++G__11036__i;}
  maps = new cljs.core.IndexedSeq(G__11036__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__11037){
var maps = cljs.core.seq(arglist__11037);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
 * Returns a map that consists of the rest of the maps conj-ed onto
 * the first.  If a key occurs in more than one map, the mapping(s)
 * from the latter (left-to-right) will be combined with the mapping in
 * the result by calling (f val-in-result val-in-latter).
 * @param {...*} var_args
 */
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__11040 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__11041 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11040,G__11041) : f.call(null,G__11040,G__11041));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__3926__auto__ = m1;
if(cljs.core.truth_(or__3926__auto__)){
return or__3926__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__11042__i = 0, G__11042__a = new Array(arguments.length -  1);
while (G__11042__i < G__11042__a.length) {G__11042__a[G__11042__i] = arguments[G__11042__i + 1]; ++G__11042__i;}
  maps = new cljs.core.IndexedSeq(G__11042__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__11043){
var f = cljs.core.first(arglist__11043);
var maps = cljs.core.rest(arglist__11043);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
 * Returns a map containing only those entries in map whose key is in keys
 */
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__11044 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__11045 = cljs.core.next(keys);
ret = G__11044;
keys = G__11045;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__11048 = cljs.core.seq(coll);
var chunk__11049 = null;
var count__11050 = (0);
var i__11051 = (0);
while(true){
if((i__11051 < count__11050)){
var vec__11052 = chunk__11049.cljs$core$IIndexed$_nth$arity$2(null,i__11051);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11052,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11052,(1),null);
var G__11053_11058 = v;
var G__11054_11059 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11053_11058,G__11054_11059) : f.call(null,G__11053_11058,G__11054_11059));

var G__11060 = seq__11048;
var G__11061 = chunk__11049;
var G__11062 = count__11050;
var G__11063 = (i__11051 + (1));
seq__11048 = G__11060;
chunk__11049 = G__11061;
count__11050 = G__11062;
i__11051 = G__11063;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__11048);
if(temp__4406__auto__){
var seq__11048__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__11048__$1)){
var c__4713__auto__ = cljs.core.chunk_first(seq__11048__$1);
var G__11064 = cljs.core.chunk_rest(seq__11048__$1);
var G__11065 = c__4713__auto__;
var G__11066 = cljs.core.count(c__4713__auto__);
var G__11067 = (0);
seq__11048 = G__11064;
chunk__11049 = G__11065;
count__11050 = G__11066;
i__11051 = G__11067;
continue;
} else {
var vec__11055 = cljs.core.first(seq__11048__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11055,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11055,(1),null);
var G__11056_11068 = v;
var G__11057_11069 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11056_11068,G__11057_11069) : f.call(null,G__11056_11068,G__11057_11069));

var G__11070 = cljs.core.next(seq__11048__$1);
var G__11071 = null;
var G__11072 = (0);
var G__11073 = (0);
seq__11048 = G__11070;
chunk__11049 = G__11071;
count__11050 = G__11072;
i__11051 = G__11073;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4347__auto__ = self__.__hash;
if(!((h__4347__auto__ == null))){
return h__4347__auto__;
} else {
var h__4347__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4347__auto____$1;

return h__4347__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__11046_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__11046_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__11074 = null;
var G__11074__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__11074__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__11074 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11074__2.call(this,self__,k);
case 3:
return G__11074__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11074.cljs$core$IFn$_invoke$arity$2 = G__11074__2;
G__11074.cljs$core$IFn$_invoke$arity$3 = G__11074__3;
return G__11074;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args11047){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11047)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__4513__auto__,writer__4514__auto__,opt__4515__auto__){
return cljs.core._write(writer__4514__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__11075 = (i + (1));
var G__11076 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__11075;
out = G__11076;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__11077 = (i + (1));
var G__11078 = cljs.core._conj_BANG_(out,(items[i]));
i = G__11077;
out = G__11078;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4904__auto__ = this;
return cljs.core.es6_iterator(this__4904__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__11080 = null;
var G__11080__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__11080__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__11080 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11080__2.call(this,self__,k);
case 3:
return G__11080__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11080.cljs$core$IFn$_invoke$arity$2 = G__11080__2;
G__11080.cljs$core$IFn$_invoke$arity$3 = G__11080__3;
return G__11080;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args11079){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11079)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__4513__auto__,writer__4514__auto__,opt__4515__auto__){
return cljs.core._write(writer__4514__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__11083 = cljs.core.seq(coll);
var chunk__11084 = null;
var count__11085 = (0);
var i__11086 = (0);
while(true){
if((i__11086 < count__11085)){
var vec__11087 = chunk__11084.cljs$core$IIndexed$_nth$arity$2(null,i__11086);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11087,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11087,(1),null);
var G__11088_11093 = v;
var G__11089_11094 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11088_11093,G__11089_11094) : f.call(null,G__11088_11093,G__11089_11094));

var G__11095 = seq__11083;
var G__11096 = chunk__11084;
var G__11097 = count__11085;
var G__11098 = (i__11086 + (1));
seq__11083 = G__11095;
chunk__11084 = G__11096;
count__11085 = G__11097;
i__11086 = G__11098;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__11083);
if(temp__4406__auto__){
var seq__11083__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__11083__$1)){
var c__4713__auto__ = cljs.core.chunk_first(seq__11083__$1);
var G__11099 = cljs.core.chunk_rest(seq__11083__$1);
var G__11100 = c__4713__auto__;
var G__11101 = cljs.core.count(c__4713__auto__);
var G__11102 = (0);
seq__11083 = G__11099;
chunk__11084 = G__11100;
count__11085 = G__11101;
i__11086 = G__11102;
continue;
} else {
var vec__11090 = cljs.core.first(seq__11083__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11090,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11090,(1),null);
var G__11091_11103 = v;
var G__11092_11104 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11091_11103,G__11092_11104) : f.call(null,G__11091_11103,G__11092_11104));

var G__11105 = cljs.core.next(seq__11083__$1);
var G__11106 = null;
var G__11107 = (0);
var G__11108 = (0);
seq__11083 = G__11105;
chunk__11084 = G__11106;
count__11085 = G__11107;
i__11086 = G__11108;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4347__auto__ = self__.__hash;
if(!((h__4347__auto__ == null))){
return h__4347__auto__;
} else {
var h__4347__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4347__auto____$1;

return h__4347__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__11081_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__11081_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__11109 = null;
var G__11109__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__11109__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__11109 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11109__2.call(this,self__,k);
case 3:
return G__11109__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11109.cljs$core$IFn$_invoke$arity$2 = G__11109__2;
G__11109.cljs$core$IFn$_invoke$arity$3 = G__11109__3;
return G__11109;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args11082){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11082)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__4513__auto__,writer__4514__auto__,opt__4515__auto__){
return cljs.core._write(writer__4514__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4904__auto__ = this;
return cljs.core.es6_iterator(this__4904__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__4807__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__4807__auto__.length)){
var G__11110 = (i + (1));
var G__11111 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__11110;
res = G__11111;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
 * Returns a set of the distinct elements of coll.
 */
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__11112 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__11113 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__11112;
out = G__11113;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
 * @param {...*} var_args
 */
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__11114__delegate = function (keys){
return cljs.core.set(keys);
};
var G__11114 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__11115__i = 0, G__11115__a = new Array(arguments.length -  0);
while (G__11115__i < G__11115__a.length) {G__11115__a[G__11115__i] = arguments[G__11115__i + 0]; ++G__11115__i;}
  keys = new cljs.core.IndexedSeq(G__11115__a,0);
} 
return G__11114__delegate.call(this,keys);};
G__11114.cljs$lang$maxFixedArity = 0;
G__11114.cljs$lang$applyTo = (function (arglist__11116){
var keys = cljs.core.seq(arglist__11116);
return G__11114__delegate(keys);
});
G__11114.cljs$core$IFn$_invoke$arity$variadic = G__11114__delegate;
return G__11114;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__11117 = null;
if (arguments.length > 0) {
var G__11118__i = 0, G__11118__a = new Array(arguments.length -  0);
while (G__11118__i < G__11118__a.length) {G__11118__a[G__11118__i] = arguments[G__11118__i + 0]; ++G__11118__i;}
G__11117 = new cljs.core.IndexedSeq(G__11118__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__11117);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
 * Returns a new sorted set with supplied keys.
 * @param {...*} var_args
 */
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__11119__i = 0, G__11119__a = new Array(arguments.length -  0);
while (G__11119__i < G__11119__a.length) {G__11119__a[G__11119__i] = arguments[G__11119__i + 0]; ++G__11119__i;}
  keys = new cljs.core.IndexedSeq(G__11119__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__11120){
var keys = cljs.core.seq(arglist__11120);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
 * Returns a new sorted set with supplied keys, using the supplied comparator.
 * @param {...*} var_args
 */
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__11121__i = 0, G__11121__a = new Array(arguments.length -  1);
while (G__11121__i < G__11121__a.length) {G__11121__a[G__11121__i] = arguments[G__11121__i + 1]; ++G__11121__i;}
  keys = new cljs.core.IndexedSeq(G__11121__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__11122){
var comparator = cljs.core.first(arglist__11122);
var keys = cljs.core.rest(arglist__11122);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
 * Given a map of replacement pairs and a vector/collection, returns a
 * vector/seq with any elements = a key in smap replaced with the
 * corresponding val in smap.  Returns a transducer when no collection
 * is provided.
 */
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__11123_SHARP_){
var temp__4404__auto__ = cljs.core.find(smap,p1__11123_SHARP_);
if(cljs.core.truth_(temp__4404__auto__)){
var e = temp__4404__auto__;
return cljs.core.val(e);
} else {
return p1__11123_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4404__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4404__auto__)){
var e = temp__4404__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__11124_SHARP_){
var temp__4404__auto__ = cljs.core.find(smap,p1__11124_SHARP_);
if(cljs.core.truth_(temp__4404__auto__)){
var e = temp__4404__auto__;
return cljs.core.second(e);
} else {
return p1__11124_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
 * Returns a lazy sequence of the elements of coll with duplicates removed
 */
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__11145 = null;
var G__11145__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__11145__1 = (function (result){
var G__11135 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11135) : rf.call(null,G__11135));
});
var G__11145__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__11136 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11136) : cljs.core.deref.call(null,G__11136));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__11137 = result;
var G__11138 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11137,G__11138) : rf.call(null,G__11137,G__11138));
}
});
G__11145 = function(result,input){
switch(arguments.length){
case 0:
return G__11145__0.call(this);
case 1:
return G__11145__1.call(this,result);
case 2:
return G__11145__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11145.cljs$core$IFn$_invoke$arity$0 = G__11145__0;
G__11145.cljs$core$IFn$_invoke$arity$1 = G__11145__1;
G__11145.cljs$core$IFn$_invoke$arity$2 = G__11145__2;
return G__11145;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__11143,seen__$1){
while(true){
var vec__11144 = p__11143;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11144,(0),null);
var xs__$1 = vec__11144;
var temp__4406__auto__ = cljs.core.seq(xs__$1);
if(temp__4406__auto__){
var s = temp__4406__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__11146 = cljs.core.rest(s);
var G__11147 = seen__$1;
p__11143 = G__11146;
seen__$1 = G__11147;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__11148 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__11149 = cljs.core.next(s__$1);
ret = G__11148;
s__$1 = G__11149;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
 * Returns the name String of a string, symbol or keyword.
 */
cljs.core.name = (function name(x){
if((function (){var G__11151 = x;
if(G__11151){
var bit__4600__auto__ = (G__11151.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4600__auto__) || (G__11151.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
 * Returns a map with the keys mapped to the corresponding vals.
 */
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__11152 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__11153 = cljs.core.next(ks);
var G__11154 = cljs.core.next(vs);
map = G__11152;
ks = G__11153;
vs = G__11154;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
 * Returns the x for which (k x), a number, is greatest.
 * @param {...*} var_args
 */
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__11165 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__11165) : k.call(null,G__11165));
})() > (function (){var G__11166 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__11166) : k.call(null,G__11166));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__11167__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__11155_SHARP_,p2__11156_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__11155_SHARP_,p2__11156_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__11167 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__11168__i = 0, G__11168__a = new Array(arguments.length -  3);
while (G__11168__i < G__11168__a.length) {G__11168__a[G__11168__i] = arguments[G__11168__i + 3]; ++G__11168__i;}
  more = new cljs.core.IndexedSeq(G__11168__a,0);
} 
return G__11167__delegate.call(this,k,x,y,more);};
G__11167.cljs$lang$maxFixedArity = 3;
G__11167.cljs$lang$applyTo = (function (arglist__11169){
var k = cljs.core.first(arglist__11169);
arglist__11169 = cljs.core.next(arglist__11169);
var x = cljs.core.first(arglist__11169);
arglist__11169 = cljs.core.next(arglist__11169);
var y = cljs.core.first(arglist__11169);
var more = cljs.core.rest(arglist__11169);
return G__11167__delegate(k,x,y,more);
});
G__11167.cljs$core$IFn$_invoke$arity$variadic = G__11167__delegate;
return G__11167;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__11170 = null;
if (arguments.length > 3) {
var G__11171__i = 0, G__11171__a = new Array(arguments.length -  3);
while (G__11171__i < G__11171__a.length) {G__11171__a[G__11171__i] = arguments[G__11171__i + 3]; ++G__11171__i;}
G__11170 = new cljs.core.IndexedSeq(G__11171__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__11170);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
 * Returns the x for which (k x), a number, is least.
 * @param {...*} var_args
 */
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__11182 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__11182) : k.call(null,G__11182));
})() < (function (){var G__11183 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__11183) : k.call(null,G__11183));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__11184__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__11172_SHARP_,p2__11173_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__11172_SHARP_,p2__11173_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__11184 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__11185__i = 0, G__11185__a = new Array(arguments.length -  3);
while (G__11185__i < G__11185__a.length) {G__11185__a[G__11185__i] = arguments[G__11185__i + 3]; ++G__11185__i;}
  more = new cljs.core.IndexedSeq(G__11185__a,0);
} 
return G__11184__delegate.call(this,k,x,y,more);};
G__11184.cljs$lang$maxFixedArity = 3;
G__11184.cljs$lang$applyTo = (function (arglist__11186){
var k = cljs.core.first(arglist__11186);
arglist__11186 = cljs.core.next(arglist__11186);
var x = cljs.core.first(arglist__11186);
arglist__11186 = cljs.core.next(arglist__11186);
var y = cljs.core.first(arglist__11186);
var more = cljs.core.rest(arglist__11186);
return G__11184__delegate(k,x,y,more);
});
G__11184.cljs$core$IFn$_invoke$arity$variadic = G__11184__delegate;
return G__11184;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__11187 = null;
if (arguments.length > 3) {
var G__11188__i = 0, G__11188__a = new Array(arguments.length -  3);
while (G__11188__i < G__11188__a.length) {G__11188__a[G__11188__i] = arguments[G__11188__i + 3]; ++G__11188__i;}
G__11187 = new cljs.core.IndexedSeq(G__11188__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__11187);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__4513__auto__,writer__4514__auto__,opt__4515__auto__){
return cljs.core._write(writer__4514__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
 * Returns a lazy sequence of lists like partition, but may include
 * partitions with fewer than n items at the end.  Returns a stateful
 * transducer when no collection is provided.
 */
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__11205 = null;
var G__11205__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__11205__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__11200 = result;
var G__11201 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11200,G__11201) : rf.call(null,G__11200,G__11201));
})());
})());
var G__11202 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11202) : rf.call(null,G__11202));
});
var G__11205__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__11203 = result;
var G__11204 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11203,G__11204) : rf.call(null,G__11203,G__11204));
} else {
return result;
}
});
G__11205 = function(result,input){
switch(arguments.length){
case 0:
return G__11205__0.call(this);
case 1:
return G__11205__1.call(this,result);
case 2:
return G__11205__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11205.cljs$core$IFn$_invoke$arity$0 = G__11205__0;
G__11205.cljs$core$IFn$_invoke$arity$1 = G__11205__1;
G__11205.cljs$core$IFn$_invoke$arity$2 = G__11205__2;
return G__11205;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
 * Returns a lazy sequence of successive items from coll while
 * (pred item) returns true. pred must be free of side-effects.
 * Returns a transducer when no collection is provided.
 */
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__11218 = null;
var G__11218__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__11218__1 = (function (result){
var G__11213 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11213) : rf.call(null,G__11213));
});
var G__11218__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__11214 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__11214) : pred.call(null,G__11214));
})())){
var G__11215 = result;
var G__11216 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11215,G__11216) : rf.call(null,G__11215,G__11216));
} else {
return cljs.core.reduced(result);
}
});
G__11218 = function(result,input){
switch(arguments.length){
case 0:
return G__11218__0.call(this);
case 1:
return G__11218__1.call(this,result);
case 2:
return G__11218__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11218.cljs$core$IFn$_invoke$arity$0 = G__11218__0;
G__11218.cljs$core$IFn$_invoke$arity$1 = G__11218__1;
G__11218.cljs$core$IFn$_invoke$arity$2 = G__11218__2;
return G__11218;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
if(cljs.core.truth_((function (){var G__11217 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__11217) : pred.call(null,G__11217));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__11223 = (function (){var G__11225 = cljs.core._entry_key(sc,e);
var G__11226 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__11225,G__11226) : comp.call(null,G__11225,G__11226));
})();
var G__11224 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__11223,G__11224) : test.call(null,G__11223,G__11224));
});
});
/**
 * sc must be a sorted collection, test(s) one of <, <=, > or
 * >=. Returns a seq of those entries with keys ek for
 * which (test (.. sc comparator (compare ek key)) 0) is true
 */
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4406__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4406__auto__)){
var vec__11230 = temp__4406__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11230,(0),null);
var s = vec__11230;
if(cljs.core.truth_((function (){var G__11231 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__11231) : include.call(null,G__11231));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4406__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4406__auto__)){
var vec__11232 = temp__4406__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11232,(0),null);
var s = vec__11232;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
 * sc must be a sorted collection, test(s) one of <, <=, > or
 * >=. Returns a reverse seq of those entries with keys ek for
 * which (test (.. sc comparator (compare ek key)) 0) is true
 */
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4406__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4406__auto__)){
var vec__11236 = temp__4406__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11236,(0),null);
var s = vec__11236;
if(cljs.core.truth_((function (){var G__11237 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__11237) : include.call(null,G__11237));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4406__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4406__auto__)){
var vec__11238 = temp__4406__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11238,(0),null);
var s = vec__11238;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__4513__auto__,writer__4514__auto__,opt__4515__auto__){
return cljs.core._write(writer__4514__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__11239 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__11239) : Math.ceil.call(null,G__11239));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__4347__auto__ = self__.__hash;
if(!((h__4347__auto__ == null))){
return h__4347__auto__;
} else {
var h__4347__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__4347__auto____$1;

return h__4347__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__11240 = ret;
var G__11241 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11240,G__11241) : f.call(null,G__11240,G__11241));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__11242 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11242) : cljs.core.deref.call(null,G__11242));
} else {
var G__11243 = (i + self__.step);
var G__11244 = ret__$1;
i = G__11243;
ret = G__11244;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__4513__auto__,writer__4514__auto__,opt__4515__auto__){
return cljs.core._write(writer__4514__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4904__auto__ = this;
return cljs.core.es6_iterator(this__4904__auto__);
}));
/**
 * Returns a lazy seq of nums from start (inclusive) to end
 * (exclusive), by step, where start defaults to 0, step to 1,
 * and end to infinity.
 */
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
 * Returns a lazy seq of every nth item in coll.  Returns a stateful
 * transducer when no collection is provided.
 */
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__11262 = null;
var G__11262__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__11262__1 = (function (result){
var G__11259 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11259) : rf.call(null,G__11259));
});
var G__11262__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__11260 = result;
var G__11261 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11260,G__11261) : rf.call(null,G__11260,G__11261));
} else {
return result;
}
});
G__11262 = function(result,input){
switch(arguments.length){
case 0:
return G__11262__0.call(this);
case 1:
return G__11262__1.call(this,result);
case 2:
return G__11262__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11262.cljs$core$IFn$_invoke$arity$0 = G__11262__0;
G__11262.cljs$core$IFn$_invoke$arity$1 = G__11262__1;
G__11262.cljs$core$IFn$_invoke$arity$2 = G__11262__2;
return G__11262;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
 * Returns a vector of [(take-while pred coll) (drop-while pred coll)]
 */
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
 * Applies f to each value in coll, splitting it each time f returns a
 * new value.  Returns a lazy seq of partitions.  Returns a stateful
 * transducer when no collection is provided.
 */
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__11284 = null;
var G__11284__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__11284__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__11275 = result;
var G__11276 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11275,G__11276) : rf.call(null,G__11275,G__11276));
})());
})());
var G__11277 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11277) : rf.call(null,G__11277));
});
var G__11284__2 = (function (result,input){
var pval = (function (){var G__11278 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11278) : cljs.core.deref.call(null,G__11278));
})();
var val = (function (){var G__11279 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11279) : f.call(null,G__11279));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__11280 = result;
var G__11281 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11280,G__11281) : rf.call(null,G__11280,G__11281));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__11284 = function(result,input){
switch(arguments.length){
case 0:
return G__11284__0.call(this);
case 1:
return G__11284__1.call(this,result);
case 2:
return G__11284__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11284.cljs$core$IFn$_invoke$arity$0 = G__11284__0;
G__11284.cljs$core$IFn$_invoke$arity$1 = G__11284__1;
G__11284.cljs$core$IFn$_invoke$arity$2 = G__11284__2;
return G__11284;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__11282 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11282) : f.call(null,G__11282));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4406__auto__){
return (function (p1__11263_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__11283 = p1__11263_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11283) : f.call(null,G__11283));
})());
});})(fst,fv,s,temp__4406__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
 * Returns a map from distinct items in coll to the number of times
 * they appear.
 */
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
 * Returns a lazy seq of the intermediate values of the reduction (as
 * per reduce) of coll by f, starting with init.
 */
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4404__auto__ = cljs.core.seq(coll);
if(temp__4404__auto__){
var s = temp__4404__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__11293 = init;
var G__11294 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11293,G__11294) : f.call(null,G__11293,G__11294));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
 * Takes a set of functions and returns a fn that is the juxtaposition
 * of those fns.  The returned fn takes a variable number of args, and
 * returns a vector containing the result of applying each fn to the
 * args (left-to-right).
 * ((juxt a b c) x) => [(a x) (b x) (c x)]
 * @param {...*} var_args
 */
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__11389 = null;
var G__11389__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__11389__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__11347 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11347) : f.call(null,G__11347));
})()],null));
});
var G__11389__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__11348 = x;
var G__11349 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11348,G__11349) : f.call(null,G__11348,G__11349));
})()],null));
});
var G__11389__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__11350 = x;
var G__11351 = y;
var G__11352 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11350,G__11351,G__11352) : f.call(null,G__11350,G__11351,G__11352));
})()],null));
});
var G__11389__4 = (function() { 
var G__11390__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__11390 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__11391__i = 0, G__11391__a = new Array(arguments.length -  3);
while (G__11391__i < G__11391__a.length) {G__11391__a[G__11391__i] = arguments[G__11391__i + 3]; ++G__11391__i;}
  args = new cljs.core.IndexedSeq(G__11391__a,0);
} 
return G__11390__delegate.call(this,x,y,z,args);};
G__11390.cljs$lang$maxFixedArity = 3;
G__11390.cljs$lang$applyTo = (function (arglist__11392){
var x = cljs.core.first(arglist__11392);
arglist__11392 = cljs.core.next(arglist__11392);
var y = cljs.core.first(arglist__11392);
arglist__11392 = cljs.core.next(arglist__11392);
var z = cljs.core.first(arglist__11392);
var args = cljs.core.rest(arglist__11392);
return G__11390__delegate(x,y,z,args);
});
G__11390.cljs$core$IFn$_invoke$arity$variadic = G__11390__delegate;
return G__11390;
})()
;
G__11389 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__11389__0.call(this);
case 1:
return G__11389__1.call(this,x);
case 2:
return G__11389__2.call(this,x,y);
case 3:
return G__11389__3.call(this,x,y,z);
default:
var G__11393 = null;
if (arguments.length > 3) {
var G__11394__i = 0, G__11394__a = new Array(arguments.length -  3);
while (G__11394__i < G__11394__a.length) {G__11394__a[G__11394__i] = arguments[G__11394__i + 3]; ++G__11394__i;}
G__11393 = new cljs.core.IndexedSeq(G__11394__a,0);
}
return G__11389__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__11393);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11389.cljs$lang$maxFixedArity = 3;
G__11389.cljs$lang$applyTo = G__11389__4.cljs$lang$applyTo;
G__11389.cljs$core$IFn$_invoke$arity$0 = G__11389__0;
G__11389.cljs$core$IFn$_invoke$arity$1 = G__11389__1;
G__11389.cljs$core$IFn$_invoke$arity$2 = G__11389__2;
G__11389.cljs$core$IFn$_invoke$arity$3 = G__11389__3;
G__11389.cljs$core$IFn$_invoke$arity$variadic = G__11389__4.cljs$core$IFn$_invoke$arity$variadic;
return G__11389;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__11395 = null;
var G__11395__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__11395__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__11353 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11353) : f.call(null,G__11353));
})(),(function (){var G__11354 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__11354) : g.call(null,G__11354));
})()],null));
});
var G__11395__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__11355 = x;
var G__11356 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11355,G__11356) : f.call(null,G__11355,G__11356));
})(),(function (){var G__11357 = x;
var G__11358 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__11357,G__11358) : g.call(null,G__11357,G__11358));
})()],null));
});
var G__11395__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__11359 = x;
var G__11360 = y;
var G__11361 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11359,G__11360,G__11361) : f.call(null,G__11359,G__11360,G__11361));
})(),(function (){var G__11362 = x;
var G__11363 = y;
var G__11364 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__11362,G__11363,G__11364) : g.call(null,G__11362,G__11363,G__11364));
})()],null));
});
var G__11395__4 = (function() { 
var G__11396__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__11396 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__11397__i = 0, G__11397__a = new Array(arguments.length -  3);
while (G__11397__i < G__11397__a.length) {G__11397__a[G__11397__i] = arguments[G__11397__i + 3]; ++G__11397__i;}
  args = new cljs.core.IndexedSeq(G__11397__a,0);
} 
return G__11396__delegate.call(this,x,y,z,args);};
G__11396.cljs$lang$maxFixedArity = 3;
G__11396.cljs$lang$applyTo = (function (arglist__11398){
var x = cljs.core.first(arglist__11398);
arglist__11398 = cljs.core.next(arglist__11398);
var y = cljs.core.first(arglist__11398);
arglist__11398 = cljs.core.next(arglist__11398);
var z = cljs.core.first(arglist__11398);
var args = cljs.core.rest(arglist__11398);
return G__11396__delegate(x,y,z,args);
});
G__11396.cljs$core$IFn$_invoke$arity$variadic = G__11396__delegate;
return G__11396;
})()
;
G__11395 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__11395__0.call(this);
case 1:
return G__11395__1.call(this,x);
case 2:
return G__11395__2.call(this,x,y);
case 3:
return G__11395__3.call(this,x,y,z);
default:
var G__11399 = null;
if (arguments.length > 3) {
var G__11400__i = 0, G__11400__a = new Array(arguments.length -  3);
while (G__11400__i < G__11400__a.length) {G__11400__a[G__11400__i] = arguments[G__11400__i + 3]; ++G__11400__i;}
G__11399 = new cljs.core.IndexedSeq(G__11400__a,0);
}
return G__11395__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__11399);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11395.cljs$lang$maxFixedArity = 3;
G__11395.cljs$lang$applyTo = G__11395__4.cljs$lang$applyTo;
G__11395.cljs$core$IFn$_invoke$arity$0 = G__11395__0;
G__11395.cljs$core$IFn$_invoke$arity$1 = G__11395__1;
G__11395.cljs$core$IFn$_invoke$arity$2 = G__11395__2;
G__11395.cljs$core$IFn$_invoke$arity$3 = G__11395__3;
G__11395.cljs$core$IFn$_invoke$arity$variadic = G__11395__4.cljs$core$IFn$_invoke$arity$variadic;
return G__11395;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__11401 = null;
var G__11401__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__11401__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__11365 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11365) : f.call(null,G__11365));
})(),(function (){var G__11366 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__11366) : g.call(null,G__11366));
})(),(function (){var G__11367 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__11367) : h.call(null,G__11367));
})()],null));
});
var G__11401__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__11368 = x;
var G__11369 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11368,G__11369) : f.call(null,G__11368,G__11369));
})(),(function (){var G__11370 = x;
var G__11371 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__11370,G__11371) : g.call(null,G__11370,G__11371));
})(),(function (){var G__11372 = x;
var G__11373 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__11372,G__11373) : h.call(null,G__11372,G__11373));
})()],null));
});
var G__11401__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__11374 = x;
var G__11375 = y;
var G__11376 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11374,G__11375,G__11376) : f.call(null,G__11374,G__11375,G__11376));
})(),(function (){var G__11377 = x;
var G__11378 = y;
var G__11379 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__11377,G__11378,G__11379) : g.call(null,G__11377,G__11378,G__11379));
})(),(function (){var G__11380 = x;
var G__11381 = y;
var G__11382 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__11380,G__11381,G__11382) : h.call(null,G__11380,G__11381,G__11382));
})()],null));
});
var G__11401__4 = (function() { 
var G__11402__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__11402 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__11403__i = 0, G__11403__a = new Array(arguments.length -  3);
while (G__11403__i < G__11403__a.length) {G__11403__a[G__11403__i] = arguments[G__11403__i + 3]; ++G__11403__i;}
  args = new cljs.core.IndexedSeq(G__11403__a,0);
} 
return G__11402__delegate.call(this,x,y,z,args);};
G__11402.cljs$lang$maxFixedArity = 3;
G__11402.cljs$lang$applyTo = (function (arglist__11404){
var x = cljs.core.first(arglist__11404);
arglist__11404 = cljs.core.next(arglist__11404);
var y = cljs.core.first(arglist__11404);
arglist__11404 = cljs.core.next(arglist__11404);
var z = cljs.core.first(arglist__11404);
var args = cljs.core.rest(arglist__11404);
return G__11402__delegate(x,y,z,args);
});
G__11402.cljs$core$IFn$_invoke$arity$variadic = G__11402__delegate;
return G__11402;
})()
;
G__11401 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__11401__0.call(this);
case 1:
return G__11401__1.call(this,x);
case 2:
return G__11401__2.call(this,x,y);
case 3:
return G__11401__3.call(this,x,y,z);
default:
var G__11405 = null;
if (arguments.length > 3) {
var G__11406__i = 0, G__11406__a = new Array(arguments.length -  3);
while (G__11406__i < G__11406__a.length) {G__11406__a[G__11406__i] = arguments[G__11406__i + 3]; ++G__11406__i;}
G__11405 = new cljs.core.IndexedSeq(G__11406__a,0);
}
return G__11401__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__11405);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11401.cljs$lang$maxFixedArity = 3;
G__11401.cljs$lang$applyTo = G__11401__4.cljs$lang$applyTo;
G__11401.cljs$core$IFn$_invoke$arity$0 = G__11401__0;
G__11401.cljs$core$IFn$_invoke$arity$1 = G__11401__1;
G__11401.cljs$core$IFn$_invoke$arity$2 = G__11401__2;
G__11401.cljs$core$IFn$_invoke$arity$3 = G__11401__3;
G__11401.cljs$core$IFn$_invoke$arity$variadic = G__11401__4.cljs$core$IFn$_invoke$arity$variadic;
return G__11401;
})()
});
var juxt__4 = (function() { 
var G__11407__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__11408 = null;
var G__11408__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__11295_SHARP_,p2__11296_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__11295_SHARP_,(function (){return (p2__11296_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__11296_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__11296_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__11408__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__11297_SHARP_,p2__11298_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__11297_SHARP_,(function (){var G__11383 = x;
return (p2__11298_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__11298_SHARP_.cljs$core$IFn$_invoke$arity$1(G__11383) : p2__11298_SHARP_.call(null,G__11383));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__11408__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__11299_SHARP_,p2__11300_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__11299_SHARP_,(function (){var G__11384 = x;
var G__11385 = y;
return (p2__11300_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__11300_SHARP_.cljs$core$IFn$_invoke$arity$2(G__11384,G__11385) : p2__11300_SHARP_.call(null,G__11384,G__11385));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__11408__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__11301_SHARP_,p2__11302_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__11301_SHARP_,(function (){var G__11386 = x;
var G__11387 = y;
var G__11388 = z;
return (p2__11302_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__11302_SHARP_.cljs$core$IFn$_invoke$arity$3(G__11386,G__11387,G__11388) : p2__11302_SHARP_.call(null,G__11386,G__11387,G__11388));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__11408__4 = (function() { 
var G__11409__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__11303_SHARP_,p2__11304_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__11303_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__11304_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__11409 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__11410__i = 0, G__11410__a = new Array(arguments.length -  3);
while (G__11410__i < G__11410__a.length) {G__11410__a[G__11410__i] = arguments[G__11410__i + 3]; ++G__11410__i;}
  args = new cljs.core.IndexedSeq(G__11410__a,0);
} 
return G__11409__delegate.call(this,x,y,z,args);};
G__11409.cljs$lang$maxFixedArity = 3;
G__11409.cljs$lang$applyTo = (function (arglist__11411){
var x = cljs.core.first(arglist__11411);
arglist__11411 = cljs.core.next(arglist__11411);
var y = cljs.core.first(arglist__11411);
arglist__11411 = cljs.core.next(arglist__11411);
var z = cljs.core.first(arglist__11411);
var args = cljs.core.rest(arglist__11411);
return G__11409__delegate(x,y,z,args);
});
G__11409.cljs$core$IFn$_invoke$arity$variadic = G__11409__delegate;
return G__11409;
})()
;
G__11408 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__11408__0.call(this);
case 1:
return G__11408__1.call(this,x);
case 2:
return G__11408__2.call(this,x,y);
case 3:
return G__11408__3.call(this,x,y,z);
default:
var G__11412 = null;
if (arguments.length > 3) {
var G__11413__i = 0, G__11413__a = new Array(arguments.length -  3);
while (G__11413__i < G__11413__a.length) {G__11413__a[G__11413__i] = arguments[G__11413__i + 3]; ++G__11413__i;}
G__11412 = new cljs.core.IndexedSeq(G__11413__a,0);
}
return G__11408__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__11412);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11408.cljs$lang$maxFixedArity = 3;
G__11408.cljs$lang$applyTo = G__11408__4.cljs$lang$applyTo;
G__11408.cljs$core$IFn$_invoke$arity$0 = G__11408__0;
G__11408.cljs$core$IFn$_invoke$arity$1 = G__11408__1;
G__11408.cljs$core$IFn$_invoke$arity$2 = G__11408__2;
G__11408.cljs$core$IFn$_invoke$arity$3 = G__11408__3;
G__11408.cljs$core$IFn$_invoke$arity$variadic = G__11408__4.cljs$core$IFn$_invoke$arity$variadic;
return G__11408;
})()
;})(fs__$1))
};
var G__11407 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__11414__i = 0, G__11414__a = new Array(arguments.length -  3);
while (G__11414__i < G__11414__a.length) {G__11414__a[G__11414__i] = arguments[G__11414__i + 3]; ++G__11414__i;}
  fs = new cljs.core.IndexedSeq(G__11414__a,0);
} 
return G__11407__delegate.call(this,f,g,h,fs);};
G__11407.cljs$lang$maxFixedArity = 3;
G__11407.cljs$lang$applyTo = (function (arglist__11415){
var f = cljs.core.first(arglist__11415);
arglist__11415 = cljs.core.next(arglist__11415);
var g = cljs.core.first(arglist__11415);
arglist__11415 = cljs.core.next(arglist__11415);
var h = cljs.core.first(arglist__11415);
var fs = cljs.core.rest(arglist__11415);
return G__11407__delegate(f,g,h,fs);
});
G__11407.cljs$core$IFn$_invoke$arity$variadic = G__11407__delegate;
return G__11407;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__11416 = null;
if (arguments.length > 3) {
var G__11417__i = 0, G__11417__a = new Array(arguments.length -  3);
while (G__11417__i < G__11417__a.length) {G__11417__a[G__11417__i] = arguments[G__11417__i + 3]; ++G__11417__i;}
G__11416 = new cljs.core.IndexedSeq(G__11417__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__11416);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
 * When lazy sequences are produced via functions that have side
 * effects, any effects other than those needed to produce the first
 * element in the seq do not occur until the seq is consumed. dorun can
 * be used to force any effects. Walks through the successive nexts of
 * the seq, does not retain the head and returns nil.
 */
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__11418 = cljs.core.next(coll);
coll = G__11418;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__11419 = (n - (1));
var G__11420 = cljs.core.next(coll);
n = G__11419;
coll = G__11420;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
 * When lazy sequences are produced via functions that have side
 * effects, any effects other than those needed to produce the first
 * element in the seq do not occur until the seq is consumed. doall can
 * be used to force any effects. Walks through the successive nexts of
 * the seq, retains the head and returns it, thus causing the entire
 * seq to reside in memory at one time.
 */
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
 * Returns the result of (re-find re s) if re fully matches s.
 */
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
 * Returns the first regex match, if any, of s to re, using
 * re.exec(s). Returns a vector, containing first the matching
 * substring, then any capturing groups if the regular expression contains
 * capturing groups.
 */
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
 * Returns a lazy sequence of successive matches of re in s.
 */
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
 * Returns an instance of RegExp which has compiled the provided string.
 */
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__11424 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11424,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11424,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11424,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_11432 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if((new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) === (0))){
if(cljs.core.seq(coll)){
cljs.core._write(writer,(function (){var or__3926__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__3926__auto__)){
return or__3926__auto__;
} else {
return "...";
}
})());
} else {
}
} else {
if(cljs.core.seq(coll)){
var G__11433_11439 = cljs.core.first(coll);
var G__11434_11440 = writer;
var G__11435_11441 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__11433_11439,G__11434_11440,G__11435_11441) : print_one.call(null,G__11433_11439,G__11434_11440,G__11435_11441));
} else {
}

var coll_11442__$1 = cljs.core.next(coll);
var n_11443 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_11442__$1) && (((n_11443 == null)) || (!((n_11443 === (0)))))){
cljs.core._write(writer,sep);

var G__11436_11444 = cljs.core.first(coll_11442__$1);
var G__11437_11445 = writer;
var G__11438_11446 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__11436_11444,G__11437_11445,G__11438_11446) : print_one.call(null,G__11436_11444,G__11437_11445,G__11438_11446));

var G__11447 = cljs.core.next(coll_11442__$1);
var G__11448 = (n_11443 - (1));
coll_11442__$1 = G__11447;
n_11443 = G__11448;
continue;
} else {
if((cljs.core.seq(coll_11442__$1)) && ((n_11443 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,(function (){var or__3926__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__3926__auto__)){
return or__3926__auto__;
} else {
return "...";
}
})());
} else {
}
}
break;
}
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_11432;
}});
/**
 * @param {...*} var_args
 */
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__11453 = cljs.core.seq(ss);
var chunk__11454 = null;
var count__11455 = (0);
var i__11456 = (0);
while(true){
if((i__11456 < count__11455)){
var s = chunk__11454.cljs$core$IIndexed$_nth$arity$2(null,i__11456);
cljs.core._write(writer,s);

var G__11457 = seq__11453;
var G__11458 = chunk__11454;
var G__11459 = count__11455;
var G__11460 = (i__11456 + (1));
seq__11453 = G__11457;
chunk__11454 = G__11458;
count__11455 = G__11459;
i__11456 = G__11460;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__11453);
if(temp__4406__auto__){
var seq__11453__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__11453__$1)){
var c__4713__auto__ = cljs.core.chunk_first(seq__11453__$1);
var G__11461 = cljs.core.chunk_rest(seq__11453__$1);
var G__11462 = c__4713__auto__;
var G__11463 = cljs.core.count(c__4713__auto__);
var G__11464 = (0);
seq__11453 = G__11461;
chunk__11454 = G__11462;
count__11455 = G__11463;
i__11456 = G__11464;
continue;
} else {
var s = cljs.core.first(seq__11453__$1);
cljs.core._write(writer,s);

var G__11465 = cljs.core.next(seq__11453__$1);
var G__11466 = null;
var G__11467 = (0);
var G__11468 = (0);
seq__11453 = G__11465;
chunk__11454 = G__11466;
count__11455 = G__11467;
i__11456 = G__11468;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__11469__i = 0, G__11469__a = new Array(arguments.length -  1);
while (G__11469__i < G__11469__a.length) {G__11469__a[G__11469__i] = arguments[G__11469__i + 1]; ++G__11469__i;}
  ss = new cljs.core.IndexedSeq(G__11469__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__11470){
var writer = cljs.core.first(arglist__11470);
var ss = cljs.core.rest(arglist__11470);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj11472 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj11472;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__11475 = "[\\\\\"\b\f\n\r\t]";
var G__11476 = "g";
return RegExp(G__11475,G__11476);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
cljs.core.pr_writer_impl = (function pr_writer_impl(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__3914__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__3914__auto__)){
var and__3914__auto____$1 = (function (){var G__11490 = obj;
if(G__11490){
var bit__4607__auto__ = (G__11490.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4607__auto__) || (G__11490.cljs$core$IMeta$)){
return true;
} else {
if((!G__11490.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__11490);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__11490);
}
})();
if(and__3914__auto____$1){
return cljs.core.meta(obj);
} else {
return and__3914__auto____$1;
}
} else {
return and__3914__auto__;
}
})())){
cljs.core._write(writer,"^");

var G__11491_11501 = cljs.core.meta(obj);
var G__11492_11502 = writer;
var G__11493_11503 = opts;
(cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__11491_11501,G__11492_11502,G__11493_11503) : cljs.core.pr_writer.call(null,G__11491_11501,G__11492_11502,G__11493_11503));

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__11494 = obj;
if(G__11494){
var bit__4600__auto__ = (G__11494.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4600__auto__) || (G__11494.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__11495 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__11496 = cljs.core.pr_writer;
var G__11497 = writer;
var G__11498 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__11495,G__11496,G__11497,G__11498) : cljs.core.print_map.call(null,G__11495,G__11496,G__11497,G__11498));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__11499 = obj;
return goog.isString(G__11499);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__11504 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__11504;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__11500 = obj;
if(G__11500){
var bit__4607__auto__ = (G__11500.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4607__auto__) || (G__11500.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__11500.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__11500);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__11500);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
/**
 * Prefer this to pr-seq, because it makes the printing function
 * configurable, allowing efficient implementations such as appending
 * to a StringBuffer.
 */
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
var temp__4404__auto__ = new cljs.core.Keyword(null,"alt-impl","alt-impl",670969595).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(temp__4404__auto__)){
var alt_impl = temp__4404__auto__;
var G__11508 = obj;
var G__11509 = writer;
var G__11510 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,new cljs.core.Keyword(null,"fallback-impl","fallback-impl",-1501286995),cljs.core.pr_writer_impl);
return (alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__11508,G__11509,G__11510) : alt_impl.call(null,G__11508,G__11509,G__11510));
} else {
return cljs.core.pr_writer_impl(obj,writer,opts);
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__11515 = cljs.core.seq(cljs.core.next(objs));
var chunk__11516 = null;
var count__11517 = (0);
var i__11518 = (0);
while(true){
if((i__11518 < count__11517)){
var obj = chunk__11516.cljs$core$IIndexed$_nth$arity$2(null,i__11518);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__11519 = seq__11515;
var G__11520 = chunk__11516;
var G__11521 = count__11517;
var G__11522 = (i__11518 + (1));
seq__11515 = G__11519;
chunk__11516 = G__11520;
count__11517 = G__11521;
i__11518 = G__11522;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__11515);
if(temp__4406__auto__){
var seq__11515__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__11515__$1)){
var c__4713__auto__ = cljs.core.chunk_first(seq__11515__$1);
var G__11523 = cljs.core.chunk_rest(seq__11515__$1);
var G__11524 = c__4713__auto__;
var G__11525 = cljs.core.count(c__4713__auto__);
var G__11526 = (0);
seq__11515 = G__11523;
chunk__11516 = G__11524;
count__11517 = G__11525;
i__11518 = G__11526;
continue;
} else {
var obj = cljs.core.first(seq__11515__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__11527 = cljs.core.next(seq__11515__$1);
var G__11528 = null;
var G__11529 = (0);
var G__11530 = (0);
seq__11515 = G__11527;
chunk__11516 = G__11528;
count__11517 = G__11529;
i__11518 = G__11530;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
 * Prints a sequence of objects to a string, observing all the
 * options given in opts
 */
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
 * Same as pr-str-with-opts followed by (newline)
 */
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
 * Prints a sequence of objects using string-print, observing all
 * the options given in opts
 */
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
 * pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
 * @param {...*} var_args
 */
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__11531__i = 0, G__11531__a = new Array(arguments.length -  0);
while (G__11531__i < G__11531__a.length) {G__11531__a[G__11531__i] = arguments[G__11531__i + 0]; ++G__11531__i;}
  objs = new cljs.core.IndexedSeq(G__11531__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__11532){
var objs = cljs.core.seq(arglist__11532);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
 * Same as pr-str followed by (newline)
 * @param {...*} var_args
 */
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__11533__i = 0, G__11533__a = new Array(arguments.length -  0);
while (G__11533__i < G__11533__a.length) {G__11533__a[G__11533__i] = arguments[G__11533__i + 0]; ++G__11533__i;}
  objs = new cljs.core.IndexedSeq(G__11533__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__11534){
var objs = cljs.core.seq(arglist__11534);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
 * Prints the object(s) using string-print.  Prints the
 * object(s), separated by spaces if there is more than one.
 * By default, pr and prn print in a way that objects can be
 * read by the reader
 * @param {...*} var_args
 */
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__11535__i = 0, G__11535__a = new Array(arguments.length -  0);
while (G__11535__i < G__11535__a.length) {G__11535__a[G__11535__i] = arguments[G__11535__i + 0]; ++G__11535__i;}
  objs = new cljs.core.IndexedSeq(G__11535__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__11536){
var objs = cljs.core.seq(arglist__11536);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
 * Prints the object(s) using string-print.
 * print and println produce output for human consumption.
 * @param {...*} var_args
 */
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__11537__i = 0, G__11537__a = new Array(arguments.length -  0);
while (G__11537__i < G__11537__a.length) {G__11537__a[G__11537__i] = arguments[G__11537__i + 0]; ++G__11537__i;}
  objs = new cljs.core.IndexedSeq(G__11537__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__11538){
var objs = cljs.core.seq(arglist__11538);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
 * print to a string, returning it
 * @param {...*} var_args
 */
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__11539__i = 0, G__11539__a = new Array(arguments.length -  0);
while (G__11539__i < G__11539__a.length) {G__11539__a[G__11539__i] = arguments[G__11539__i + 0]; ++G__11539__i;}
  objs = new cljs.core.IndexedSeq(G__11539__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__11540){
var objs = cljs.core.seq(arglist__11540);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
 * Same as print followed by (newline)
 * @param {...*} var_args
 */
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__11541__i = 0, G__11541__a = new Array(arguments.length -  0);
while (G__11541__i < G__11541__a.length) {G__11541__a[G__11541__i] = arguments[G__11541__i + 0]; ++G__11541__i;}
  objs = new cljs.core.IndexedSeq(G__11541__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__11542){
var objs = cljs.core.seq(arglist__11542);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
 * println to a string, returning it
 * @param {...*} var_args
 */
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__11543__i = 0, G__11543__a = new Array(arguments.length -  0);
while (G__11543__i < G__11543__a.length) {G__11543__a[G__11543__i] = arguments[G__11543__i + 0]; ++G__11543__i;}
  objs = new cljs.core.IndexedSeq(G__11543__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__11544){
var objs = cljs.core.seq(arglist__11544);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
 * Same as pr followed by (newline).
 * @param {...*} var_args
 */
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__11545__i = 0, G__11545__a = new Array(arguments.length -  0);
while (G__11545__i < G__11545__a.length) {G__11545__a[G__11545__i] = arguments[G__11545__i + 0]; ++G__11545__i;}
  objs = new cljs.core.IndexedSeq(G__11545__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__11546){
var objs = cljs.core.seq(arglist__11546);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__11553_11559 = cljs.core.key(e);
var G__11554_11560 = w;
var G__11555_11561 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__11553_11559,G__11554_11560,G__11555_11561) : print_one.call(null,G__11553_11559,G__11554_11560,G__11555_11561));

cljs.core._write(w," ");

var G__11556 = cljs.core.val(e);
var G__11557 = w;
var G__11558 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__11556,G__11557,G__11558) : print_one.call(null,G__11556,G__11557,G__11558));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
 * Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
 * 
 * (apply f its-current-meta args)
 * 
 * f must be free of side-effects
 * @param {...*} var_args
 */
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__11562__i = 0, G__11562__a = new Array(arguments.length -  2);
while (G__11562__i < G__11562__a.length) {G__11562__a[G__11562__i] = arguments[G__11562__i + 2]; ++G__11562__i;}
  args = new cljs.core.IndexedSeq(G__11562__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__11563){
var iref = cljs.core.first(arglist__11563);
arglist__11563 = cljs.core.next(arglist__11563);
var f = cljs.core.first(arglist__11563);
var args = cljs.core.rest(arglist__11563);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
 * Atomically resets the metadata for an atom
 */
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
 * Alpha - subject to change.
 * 
 * Adds a watch function to an atom reference. The watch fn must be a
 * fn of 4 args: a key, the reference, its old-state, its
 * new-state. Whenever the reference's state might have been changed,
 * any registered watches will have their functions called. The watch
 * fn will be called synchronously. Note that an atom's state
 * may have changed again prior to the fn call, so use old/new-state
 * rather than derefing the reference. Keys must be unique per
 * reference, and can be used to remove the watch with remove-watch,
 * but are otherwise considered opaque by the watch mechanism.  Bear in
 * mind that regardless of the result or action of the watch fns the
 * atom's value will change.  Example:
 * 
 * (def a (atom 0))
 * (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
 * (swap! a inc)
 * ;; Assertion Error
 * (deref a)
 * ;=> 1
 */
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
 * Alpha - subject to change.
 * 
 * Removes a watch (set by add-watch) from a reference
 */
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
 * Returns a new symbol with a unique name. If a prefix string is
 * supplied, the name is prefix# where # is some unique number. If
 * prefix is not supplied, the prefix is 'G__'.
 */
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__11566 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__11566) : cljs.core.atom.call(null,G__11566));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__4513__auto__,writer__4514__auto__,opt__4515__auto__){
return cljs.core._write(writer__4514__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
 * returns true if x is a Delay created with delay
 */
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
 * If x is a Delay, returns the (possibly cached) value of its expression, else returns x
 */
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__11568 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11568) : cljs.core.deref.call(null,G__11568));
} else {
return x;
}
});
/**
 * Returns true if a value has been produced for a promise, delay, future or lazy sequence.
 */
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__11569_SHARP_,p2__11570_SHARP_){
var ret = (function (){var G__11573 = p1__11569_SHARP_;
var G__11574 = p2__11570_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11573,G__11574) : rf.call(null,G__11573,G__11574));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
 * A transducer which concatenates the contents of each input, which must be a
 * collection, into the reduction.
 */
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__11577 = null;
var G__11577__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__11577__1 = (function (result){
var G__11576 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11576) : rf.call(null,G__11576));
});
var G__11577__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__11577 = function(result,input){
switch(arguments.length){
case 0:
return G__11577__0.call(this);
case 1:
return G__11577__1.call(this,result);
case 2:
return G__11577__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11577.cljs$core$IFn$_invoke$arity$0 = G__11577__0;
G__11577.cljs$core$IFn$_invoke$arity$1 = G__11577__1;
G__11577.cljs$core$IFn$_invoke$arity$2 = G__11577__2;
return G__11577;
})()
;})(rf1))
});
/**
 * Returns a lazy sequence removing consecutive duplicates in coll.
 * Returns a transducer when no collection is provided.
 */
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__11586 = null;
var G__11586__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__11586__1 = (function (result){
var G__11582 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11582) : rf.call(null,G__11582));
});
var G__11586__2 = (function (result,input){
var prior = (function (){var G__11583 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11583) : cljs.core.deref.call(null,G__11583));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__11584 = result;
var G__11585 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11584,G__11585) : rf.call(null,G__11584,G__11585));
}
});
G__11586 = function(result,input){
switch(arguments.length){
case 0:
return G__11586__0.call(this);
case 1:
return G__11586__1.call(this,result);
case 2:
return G__11586__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11586.cljs$core$IFn$_invoke$arity$0 = G__11586__0;
G__11586.cljs$core$IFn$_invoke$arity$1 = G__11586__1;
G__11586.cljs$core$IFn$_invoke$arity$2 = G__11586__2;
return G__11586;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
 * Returns items from coll with random probability of prob (0.0 -
 * 1.0).  Returns a transducer when no collection is provided.
 */
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__4513__auto__,writer__4514__auto__,opt__4515__auto__){
return cljs.core._write(writer__4514__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4904__auto__ = this;
return cljs.core.es6_iterator(this__4904__auto__);
}));
/**
 * Returns a reducible/iterable/seqable application of
 * the transducer to the items in coll. Note that these applications
 * will be performed every time iterator/seq/reduce is called.
 */
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
 * Runs the supplied procedure (via reduce), for purposes of side
 * effects, on successive items in the collection. Returns nil
 */
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__11588_SHARP_,p2__11587_SHARP_){
var G__11590 = p2__11587_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__11590) : proc.call(null,G__11590));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj11592 = {};
return obj11592;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__3914__auto__ = x;
if(and__3914__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__3914__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__4570__auto__ = (((x == null))?null:x);
return (function (){var or__3926__auto__ = (cljs.core._clj__GT_js[(function (){var G__11596 = x__4570__auto__;
return goog.typeOf(G__11596);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__3914__auto__ = x;
if(and__3914__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__3914__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__4570__auto__ = (((x == null))?null:x);
return (function (){var or__3926__auto__ = (cljs.core._key__GT_js[(function (){var G__11600 = x__4570__auto__;
return goog.typeOf(G__11600);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__11603 = k;
if(G__11603){
var bit__4607__auto__ = null;
if(cljs.core.truth_((function (){var or__3926__auto__ = bit__4607__auto__;
if(cljs.core.truth_(or__3926__auto__)){
return or__3926__auto__;
} else {
return G__11603.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__11603.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__11603);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__11603);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__11604 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__11604) : cljs.core.clj__GT_js.call(null,G__11604));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
 * Recursively transforms ClojureScript values to JavaScript.
 * sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
 * Maps become Objects. Arbitrary keys are encoded to by key->js.
 */
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__11620 = x;
if(G__11620){
var bit__4607__auto__ = null;
if(cljs.core.truth_((function (){var or__3926__auto__ = bit__4607__auto__;
if(cljs.core.truth_(or__3926__auto__)){
return or__3926__auto__;
} else {
return G__11620.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__11620.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__11620);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__11620);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj11622 = {};
return obj11622;
})();
var seq__11623_11633 = cljs.core.seq(x);
var chunk__11624_11634 = null;
var count__11625_11635 = (0);
var i__11626_11636 = (0);
while(true){
if((i__11626_11636 < count__11625_11635)){
var vec__11627_11637 = chunk__11624_11634.cljs$core$IIndexed$_nth$arity$2(null,i__11626_11636);
var k_11638 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11627_11637,(0),null);
var v_11639 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11627_11637,(1),null);
(m[cljs.core.key__GT_js(k_11638)] = clj__GT_js(v_11639));

var G__11640 = seq__11623_11633;
var G__11641 = chunk__11624_11634;
var G__11642 = count__11625_11635;
var G__11643 = (i__11626_11636 + (1));
seq__11623_11633 = G__11640;
chunk__11624_11634 = G__11641;
count__11625_11635 = G__11642;
i__11626_11636 = G__11643;
continue;
} else {
var temp__4406__auto___11644 = cljs.core.seq(seq__11623_11633);
if(temp__4406__auto___11644){
var seq__11623_11645__$1 = temp__4406__auto___11644;
if(cljs.core.chunked_seq_QMARK_(seq__11623_11645__$1)){
var c__4713__auto___11646 = cljs.core.chunk_first(seq__11623_11645__$1);
var G__11647 = cljs.core.chunk_rest(seq__11623_11645__$1);
var G__11648 = c__4713__auto___11646;
var G__11649 = cljs.core.count(c__4713__auto___11646);
var G__11650 = (0);
seq__11623_11633 = G__11647;
chunk__11624_11634 = G__11648;
count__11625_11635 = G__11649;
i__11626_11636 = G__11650;
continue;
} else {
var vec__11628_11651 = cljs.core.first(seq__11623_11645__$1);
var k_11652 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11628_11651,(0),null);
var v_11653 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11628_11651,(1),null);
(m[cljs.core.key__GT_js(k_11652)] = clj__GT_js(v_11653));

var G__11654 = cljs.core.next(seq__11623_11645__$1);
var G__11655 = null;
var G__11656 = (0);
var G__11657 = (0);
seq__11623_11633 = G__11654;
chunk__11624_11634 = G__11655;
count__11625_11635 = G__11656;
i__11626_11636 = G__11657;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__11629_11658 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__11630_11659 = null;
var count__11631_11660 = (0);
var i__11632_11661 = (0);
while(true){
if((i__11632_11661 < count__11631_11660)){
var x_11662__$1 = chunk__11630_11659.cljs$core$IIndexed$_nth$arity$2(null,i__11632_11661);
arr.push(x_11662__$1);

var G__11663 = seq__11629_11658;
var G__11664 = chunk__11630_11659;
var G__11665 = count__11631_11660;
var G__11666 = (i__11632_11661 + (1));
seq__11629_11658 = G__11663;
chunk__11630_11659 = G__11664;
count__11631_11660 = G__11665;
i__11632_11661 = G__11666;
continue;
} else {
var temp__4406__auto___11667 = cljs.core.seq(seq__11629_11658);
if(temp__4406__auto___11667){
var seq__11629_11668__$1 = temp__4406__auto___11667;
if(cljs.core.chunked_seq_QMARK_(seq__11629_11668__$1)){
var c__4713__auto___11669 = cljs.core.chunk_first(seq__11629_11668__$1);
var G__11670 = cljs.core.chunk_rest(seq__11629_11668__$1);
var G__11671 = c__4713__auto___11669;
var G__11672 = cljs.core.count(c__4713__auto___11669);
var G__11673 = (0);
seq__11629_11658 = G__11670;
chunk__11630_11659 = G__11671;
count__11631_11660 = G__11672;
i__11632_11661 = G__11673;
continue;
} else {
var x_11674__$1 = cljs.core.first(seq__11629_11668__$1);
arr.push(x_11674__$1);

var G__11675 = cljs.core.next(seq__11629_11668__$1);
var G__11676 = null;
var G__11677 = (0);
var G__11678 = (0);
seq__11629_11658 = G__11675;
chunk__11630_11659 = G__11676;
count__11631_11660 = G__11677;
i__11632_11661 = G__11678;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj11680 = {};
return obj11680;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__3914__auto__ = x;
if(and__3914__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__3914__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__4570__auto__ = (((x == null))?null:x);
return (function (){var or__3926__auto__ = (cljs.core._js__GT_clj[(function (){var G__11684 = x__4570__auto__;
return goog.typeOf(G__11684);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
 * Recursively transforms JavaScript arrays into ClojureScript
 * vectors, and JavaScript objects into ClojureScript maps.  With
 * option ':keywordize-keys true' will convert object fields from
 * strings to keywords.
 * @param {...*} var_args
 */
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__11741__delegate = function (x,opts){
var map__11714 = opts;
var map__11714__$1 = ((cljs.core.seq_QMARK_(map__11714))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__11714):map__11714);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__11714__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__11714,map__11714__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__11730 = x__$1;
if(G__11730){
var bit__4607__auto__ = null;
if(cljs.core.truth_((function (){var or__3926__auto__ = bit__4607__auto__;
if(cljs.core.truth_(or__3926__auto__)){
return or__3926__auto__;
} else {
return G__11730.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__11730.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__11730);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__11730);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__4682__auto__ = ((function (map__11714,map__11714__$1,keywordize_keys,keyfn){
return (function iter__11731(s__11732){
return (new cljs.core.LazySeq(null,((function (map__11714,map__11714__$1,keywordize_keys,keyfn){
return (function (){
var s__11732__$1 = s__11732;
while(true){
var temp__4406__auto__ = cljs.core.seq(s__11732__$1);
if(temp__4406__auto__){
var s__11732__$2 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(s__11732__$2)){
var c__4680__auto__ = cljs.core.chunk_first(s__11732__$2);
var size__4681__auto__ = cljs.core.count(c__4680__auto__);
var b__11734 = cljs.core.chunk_buffer(size__4681__auto__);
if((function (){var i__11733 = (0);
while(true){
if((i__11733 < size__4681__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4680__auto__,i__11733);
cljs.core.chunk_append(b__11734,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__11739 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__11739) : keyfn.call(null,G__11739));
})(),thisfn((x__$1[k]))], null));

var G__11742 = (i__11733 + (1));
i__11733 = G__11742;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__11734),iter__11731(cljs.core.chunk_rest(s__11732__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__11734),null);
}
} else {
var k = cljs.core.first(s__11732__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__11740 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__11740) : keyfn.call(null,G__11740));
})(),thisfn((x__$1[k]))], null),iter__11731(cljs.core.rest(s__11732__$2)));
}
} else {
return null;
}
break;
}
});})(map__11714,map__11714__$1,keywordize_keys,keyfn))
,null,null));
});})(map__11714,map__11714__$1,keywordize_keys,keyfn))
;
return iter__4682__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__11714,map__11714__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__11741 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__11743__i = 0, G__11743__a = new Array(arguments.length -  1);
while (G__11743__i < G__11743__a.length) {G__11743__a[G__11743__i] = arguments[G__11743__i + 1]; ++G__11743__i;}
  opts = new cljs.core.IndexedSeq(G__11743__a,0);
} 
return G__11741__delegate.call(this,x,opts);};
G__11741.cljs$lang$maxFixedArity = 1;
G__11741.cljs$lang$applyTo = (function (arglist__11744){
var x = cljs.core.first(arglist__11744);
var opts = cljs.core.rest(arglist__11744);
return G__11741__delegate(x,opts);
});
G__11741.cljs$core$IFn$_invoke$arity$variadic = G__11741__delegate;
return G__11741;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__11745 = null;
if (arguments.length > 1) {
var G__11746__i = 0, G__11746__a = new Array(arguments.length -  1);
while (G__11746__i < G__11746__a.length) {G__11746__a[G__11746__i] = arguments[G__11746__i + 1]; ++G__11746__i;}
G__11745 = new cljs.core.IndexedSeq(G__11746__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__11745);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
 * Returns a memoized version of a referentially transparent function. The
 * memoized version of the function keeps a cache of the mapping from arguments
 * to results and, when calls with the same arguments are repeated often, has
 * higher performance at the expense of higher memory use.
 */
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__11749 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__11749) : cljs.core.atom.call(null,G__11749));
})();
return ((function (mem){
return (function() { 
var G__11751__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__11750 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11750) : cljs.core.deref.call(null,G__11750));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__11751 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__11752__i = 0, G__11752__a = new Array(arguments.length -  0);
while (G__11752__i < G__11752__a.length) {G__11752__a[G__11752__i] = arguments[G__11752__i + 0]; ++G__11752__i;}
  args = new cljs.core.IndexedSeq(G__11752__a,0);
} 
return G__11751__delegate.call(this,args);};
G__11751.cljs$lang$maxFixedArity = 0;
G__11751.cljs$lang$applyTo = (function (arglist__11753){
var args = cljs.core.seq(arglist__11753);
return G__11751__delegate(args);
});
G__11751.cljs$core$IFn$_invoke$arity$variadic = G__11751__delegate;
return G__11751;
})()
;
;})(mem))
});
/**
 * trampoline can be used to convert algorithms requiring mutual
 * recursion without stack consumption. Calls f with supplied args, if
 * any. If f returns a fn, calls that fn with no arguments, and
 * continues to repeat, until the return value is not a fn, then
 * returns that non-fn value. Note that if you want to return a fn as a
 * final value, you must wrap it in some data structure and unpack it
 * after trampoline returns.
 * @param {...*} var_args
 */
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__11755 = ret;
f = G__11755;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__11756__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__11756 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__11757__i = 0, G__11757__a = new Array(arguments.length -  1);
while (G__11757__i < G__11757__a.length) {G__11757__a[G__11757__i] = arguments[G__11757__i + 1]; ++G__11757__i;}
  args = new cljs.core.IndexedSeq(G__11757__a,0);
} 
return G__11756__delegate.call(this,f,args);};
G__11756.cljs$lang$maxFixedArity = 1;
G__11756.cljs$lang$applyTo = (function (arglist__11758){
var f = cljs.core.first(arglist__11758);
var args = cljs.core.rest(arglist__11758);
return G__11756__delegate(f,args);
});
G__11756.cljs$core$IFn$_invoke$arity$variadic = G__11756__delegate;
return G__11756;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__11759 = null;
if (arguments.length > 1) {
var G__11760__i = 0, G__11760__a = new Array(arguments.length -  1);
while (G__11760__i < G__11760__a.length) {G__11760__a[G__11760__i] = arguments[G__11760__i + 1]; ++G__11760__i;}
G__11759 = new cljs.core.IndexedSeq(G__11760__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__11759);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
 * Returns a random floating point number between 0 (inclusive) and
 * n (default 1) (exclusive).
 */
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
 * Returns a random integer between 0 (inclusive) and n (exclusive).
 */
cljs.core.rand_int = (function rand_int(n){
var G__11763 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__11763) : Math.floor.call(null,G__11763));
});
/**
 * Return a random element of the (sequential) collection. Will have
 * the same performance characteristics as nth for the given
 * collection.
 */
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
 * Returns a map of the elements of coll keyed by the result of
 * f on each element. The value at each key will be a vector of the
 * corresponding elements, in the order they appeared in coll.
 */
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__11765 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11765) : f.call(null,G__11765));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
 * Creates a hierarchy object for use with derive, isa? etc.
 */
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__11767 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__11767) : cljs.core.atom.call(null,G__11767));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
 * @param {...*} var_args
 */
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__11768__i = 0, G__11768__a = new Array(arguments.length -  1);
while (G__11768__i < G__11768__a.length) {G__11768__a[G__11768__i] = arguments[G__11768__i + 1]; ++G__11768__i;}
  args = new cljs.core.IndexedSeq(G__11768__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__11769){
var f = cljs.core.first(arglist__11769);
var args = cljs.core.rest(arglist__11769);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
 * Returns true if (= child parent), or child is directly or indirectly derived from
 * parent, either via a JavaScript type inheritance relationship or a
 * relationship established via derive. h must be a hierarchy obtained
 * from make-hierarchy, if not supplied defaults to the global
 * hierarchy
 */
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__11834 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11834) : cljs.core.deref.call(null,G__11834));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__3926__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
var and__3914__auto__ = cljs.core.vector_QMARK_(parent);
if(and__3914__auto__){
var and__3914__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__3914__auto____$1){
var and__3914__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__3914__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__11859 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__11857 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__11857) : child.call(null,G__11857));
})(),(function (){var G__11858 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__11858) : parent.call(null,G__11858));
})());
var G__11860 = (i + (1));
ret = G__11859;
i = G__11860;
continue;
}
break;
}
} else {
return and__3914__auto____$2;
}
} else {
return and__3914__auto____$1;
}
} else {
return and__3914__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
 * Returns the immediate parents of tag, either via a JavaScript type
 * inheritance relationship or a relationship established via derive. h
 * must be a hierarchy obtained from make-hierarchy, if not supplied
 * defaults to the global hierarchy
 */
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__11864 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11864) : cljs.core.deref.call(null,G__11864));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
 * Returns the immediate and indirect parents of tag, either via a JavaScript type
 * inheritance relationship or a relationship established via derive. h
 * must be a hierarchy obtained from make-hierarchy, if not supplied
 * defaults to the global hierarchy
 */
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__11868 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11868) : cljs.core.deref.call(null,G__11868));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
 * Returns the immediate and indirect children of tag, through a
 * relationship established via derive. h must be a hierarchy obtained
 * from make-hierarchy, if not supplied defaults to the global
 * hierarchy. Note: does not work on JavaScript type inheritance
 * relationships.
 */
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__11872 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11872) : cljs.core.deref.call(null,G__11872));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
 * Establishes a parent/child relationship between parent and
 * tag. Parent must be a namespace-qualified symbol or keyword and
 * child can be either a namespace-qualified symbol or keyword or a
 * class. h must be a hierarchy obtained from make-hierarchy, if not
 * supplied defaults to, and modifies, the global hierarchy.
 */
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__11881 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__11881) : targets.call(null,G__11881));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__11882 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__11882) : sources.call(null,G__11882));
})()));
});})(tp,td,ta))
;
var or__3926__auto__ = ((cljs.core.contains_QMARK_((function (){var G__11886 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__11886) : tp.call(null,G__11886));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__11887 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__11887) : ta.call(null,G__11887));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__11888 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__11888) : ta.call(null,G__11888));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__3926__auto__)){
return or__3926__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
 * Removes a parent/child relationship between parent and
 * tag. h must be a hierarchy obtained from make-hierarchy, if not
 * supplied defaults to, and modifies, the global hierarchy.
 */
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__11895 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__11895) : parentMap.call(null,G__11895));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__11896 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__11896) : parentMap.call(null,G__11896));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__11889_SHARP_){
return cljs.core.cons(cljs.core.first(p1__11889_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__11889_SHARP_),cljs.core.second(p1__11889_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__11897 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__11897) : parentMap.call(null,G__11897));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__11890_SHARP_,p2__11891_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__11890_SHARP_,p2__11891_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__11900 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11900) : cljs.core.deref.call(null,G__11900));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__11901 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11901) : cljs.core.deref.call(null,G__11901));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__11917 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11917) : cljs.core.deref.call(null,G__11917));
})().call(null,x);
var or__3926__auto__ = (cljs.core.truth_((function (){var and__3914__auto__ = xprefs;
if(cljs.core.truth_(and__3914__auto__)){
var G__11919 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__11919) : xprefs.call(null,G__11919));
} else {
return and__3914__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__3926__auto__)){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__11920 = cljs.core.rest(ps);
ps = G__11920;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3926__auto____$1)){
return or__3926__auto____$1;
} else {
var or__3926__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__11921 = cljs.core.rest(ps);
ps = G__11921;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3926__auto____$2)){
return or__3926__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__3926__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__3926__auto__)){
return or__3926__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__11935){
var vec__11936 = p__11935;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11936,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11936,(1),null);
var e = vec__11936;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__11937 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11937) : cljs.core.deref.call(null,G__11937));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__3926__auto__ = (be == null);
if(or__3926__auto__){
return or__3926__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__11938 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11938) : cljs.core.deref.call(null,G__11938));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__11939 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11939) : cljs.core.deref.call(null,G__11939));
})(),(function (){var G__11940 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11940) : cljs.core.deref.call(null,G__11940));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj11942 = {};
return obj11942;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__3914__auto__ = mf;
if(and__3914__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__3914__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__4570__auto__ = (((mf == null))?null:mf);
return (function (){var or__3926__auto__ = (cljs.core._reset[(function (){var G__11946 = x__4570__auto__;
return goog.typeOf(G__11946);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._reset["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__3914__auto__ = mf;
if(and__3914__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__3914__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__4570__auto__ = (((mf == null))?null:mf);
return (function (){var or__3926__auto__ = (cljs.core._add_method[(function (){var G__11950 = x__4570__auto__;
return goog.typeOf(G__11950);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._add_method["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__3914__auto__ = mf;
if(and__3914__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__3914__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__4570__auto__ = (((mf == null))?null:mf);
return (function (){var or__3926__auto__ = (cljs.core._remove_method[(function (){var G__11954 = x__4570__auto__;
return goog.typeOf(G__11954);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._remove_method["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__3914__auto__ = mf;
if(and__3914__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__3914__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__4570__auto__ = (((mf == null))?null:mf);
return (function (){var or__3926__auto__ = (cljs.core._prefer_method[(function (){var G__11958 = x__4570__auto__;
return goog.typeOf(G__11958);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__3914__auto__ = mf;
if(and__3914__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__3914__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__4570__auto__ = (((mf == null))?null:mf);
return (function (){var or__3926__auto__ = (cljs.core._get_method[(function (){var G__11962 = x__4570__auto__;
return goog.typeOf(G__11962);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._get_method["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__3914__auto__ = mf;
if(and__3914__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__3914__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__4570__auto__ = (((mf == null))?null:mf);
return (function (){var or__3926__auto__ = (cljs.core._methods[(function (){var G__11966 = x__4570__auto__;
return goog.typeOf(G__11966);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._methods["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__3914__auto__ = mf;
if(and__3914__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__3914__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__4570__auto__ = (((mf == null))?null:mf);
return (function (){var or__3926__auto__ = (cljs.core._prefers[(function (){var G__11970 = x__4570__auto__;
return goog.typeOf(G__11970);
})()]);
if(or__3926__auto__){
return or__3926__auto__;
} else {
var or__3926__auto____$1 = (cljs.core._prefers["_"]);
if(or__3926__auto____$1){
return or__3926__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__11972 = this$__$1;
return goog.getUid(G__11972);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__11973 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11973) : cljs.core.deref.call(null,G__11973));
})(),(function (){var G__11974 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11974) : cljs.core.deref.call(null,G__11974));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4404__auto__ = (function (){var G__11975 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11975) : cljs.core.deref.call(null,G__11975));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4404__auto__)){
var target_fn = temp__4404__auto__;
return target_fn;
} else {
var temp__4404__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4404__auto____$1)){
var target_fn = temp__4404__auto____$1;
return target_fn;
} else {
return (function (){var G__11976 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11976) : cljs.core.deref.call(null,G__11976));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__11977 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11977) : cljs.core.deref.call(null,G__11977));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__11978 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11978) : cljs.core.deref.call(null,G__11978));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__12819 = null;
var G__12819__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__12819__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11979 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__11979) : self__.dispatch_fn.call(null,G__11979));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11980 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__11980) : target_fn.call(null,G__11980));
});
var G__12819__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11981 = a;
var G__11982 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__11981,G__11982) : self__.dispatch_fn.call(null,G__11981,G__11982));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11983 = a;
var G__11984 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__11983,G__11984) : target_fn.call(null,G__11983,G__11984));
});
var G__12819__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11985 = a;
var G__11986 = b;
var G__11987 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__11985,G__11986,G__11987) : self__.dispatch_fn.call(null,G__11985,G__11986,G__11987));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11988 = a;
var G__11989 = b;
var G__11990 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__11988,G__11989,G__11990) : target_fn.call(null,G__11988,G__11989,G__11990));
});
var G__12819__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11991 = a;
var G__11992 = b;
var G__11993 = c;
var G__11994 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__11991,G__11992,G__11993,G__11994) : self__.dispatch_fn.call(null,G__11991,G__11992,G__11993,G__11994));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11995 = a;
var G__11996 = b;
var G__11997 = c;
var G__11998 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__11995,G__11996,G__11997,G__11998) : target_fn.call(null,G__11995,G__11996,G__11997,G__11998));
});
var G__12819__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11999 = a;
var G__12000 = b;
var G__12001 = c;
var G__12002 = d;
var G__12003 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__11999,G__12000,G__12001,G__12002,G__12003) : self__.dispatch_fn.call(null,G__11999,G__12000,G__12001,G__12002,G__12003));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12004 = a;
var G__12005 = b;
var G__12006 = c;
var G__12007 = d;
var G__12008 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__12004,G__12005,G__12006,G__12007,G__12008) : target_fn.call(null,G__12004,G__12005,G__12006,G__12007,G__12008));
});
var G__12819__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12009 = a;
var G__12010 = b;
var G__12011 = c;
var G__12012 = d;
var G__12013 = e;
var G__12014 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__12009,G__12010,G__12011,G__12012,G__12013,G__12014) : self__.dispatch_fn.call(null,G__12009,G__12010,G__12011,G__12012,G__12013,G__12014));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12015 = a;
var G__12016 = b;
var G__12017 = c;
var G__12018 = d;
var G__12019 = e;
var G__12020 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__12015,G__12016,G__12017,G__12018,G__12019,G__12020) : target_fn.call(null,G__12015,G__12016,G__12017,G__12018,G__12019,G__12020));
});
var G__12819__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12021 = a;
var G__12022 = b;
var G__12023 = c;
var G__12024 = d;
var G__12025 = e;
var G__12026 = f;
var G__12027 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__12021,G__12022,G__12023,G__12024,G__12025,G__12026,G__12027) : self__.dispatch_fn.call(null,G__12021,G__12022,G__12023,G__12024,G__12025,G__12026,G__12027));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12028 = a;
var G__12029 = b;
var G__12030 = c;
var G__12031 = d;
var G__12032 = e;
var G__12033 = f;
var G__12034 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__12028,G__12029,G__12030,G__12031,G__12032,G__12033,G__12034) : target_fn.call(null,G__12028,G__12029,G__12030,G__12031,G__12032,G__12033,G__12034));
});
var G__12819__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12035 = a;
var G__12036 = b;
var G__12037 = c;
var G__12038 = d;
var G__12039 = e;
var G__12040 = f;
var G__12041 = g;
var G__12042 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__12035,G__12036,G__12037,G__12038,G__12039,G__12040,G__12041,G__12042) : self__.dispatch_fn.call(null,G__12035,G__12036,G__12037,G__12038,G__12039,G__12040,G__12041,G__12042));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12043 = a;
var G__12044 = b;
var G__12045 = c;
var G__12046 = d;
var G__12047 = e;
var G__12048 = f;
var G__12049 = g;
var G__12050 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__12043,G__12044,G__12045,G__12046,G__12047,G__12048,G__12049,G__12050) : target_fn.call(null,G__12043,G__12044,G__12045,G__12046,G__12047,G__12048,G__12049,G__12050));
});
var G__12819__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12051 = a;
var G__12052 = b;
var G__12053 = c;
var G__12054 = d;
var G__12055 = e;
var G__12056 = f;
var G__12057 = g;
var G__12058 = h;
var G__12059 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__12051,G__12052,G__12053,G__12054,G__12055,G__12056,G__12057,G__12058,G__12059) : self__.dispatch_fn.call(null,G__12051,G__12052,G__12053,G__12054,G__12055,G__12056,G__12057,G__12058,G__12059));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12060 = a;
var G__12061 = b;
var G__12062 = c;
var G__12063 = d;
var G__12064 = e;
var G__12065 = f;
var G__12066 = g;
var G__12067 = h;
var G__12068 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__12060,G__12061,G__12062,G__12063,G__12064,G__12065,G__12066,G__12067,G__12068) : target_fn.call(null,G__12060,G__12061,G__12062,G__12063,G__12064,G__12065,G__12066,G__12067,G__12068));
});
var G__12819__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12069 = a;
var G__12070 = b;
var G__12071 = c;
var G__12072 = d;
var G__12073 = e;
var G__12074 = f;
var G__12075 = g;
var G__12076 = h;
var G__12077 = i;
var G__12078 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__12069,G__12070,G__12071,G__12072,G__12073,G__12074,G__12075,G__12076,G__12077,G__12078) : self__.dispatch_fn.call(null,G__12069,G__12070,G__12071,G__12072,G__12073,G__12074,G__12075,G__12076,G__12077,G__12078));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12079 = a;
var G__12080 = b;
var G__12081 = c;
var G__12082 = d;
var G__12083 = e;
var G__12084 = f;
var G__12085 = g;
var G__12086 = h;
var G__12087 = i;
var G__12088 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__12079,G__12080,G__12081,G__12082,G__12083,G__12084,G__12085,G__12086,G__12087,G__12088) : target_fn.call(null,G__12079,G__12080,G__12081,G__12082,G__12083,G__12084,G__12085,G__12086,G__12087,G__12088));
});
var G__12819__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12089 = a;
var G__12090 = b;
var G__12091 = c;
var G__12092 = d;
var G__12093 = e;
var G__12094 = f;
var G__12095 = g;
var G__12096 = h;
var G__12097 = i;
var G__12098 = j;
var G__12099 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__12089,G__12090,G__12091,G__12092,G__12093,G__12094,G__12095,G__12096,G__12097,G__12098,G__12099) : self__.dispatch_fn.call(null,G__12089,G__12090,G__12091,G__12092,G__12093,G__12094,G__12095,G__12096,G__12097,G__12098,G__12099));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12100 = a;
var G__12101 = b;
var G__12102 = c;
var G__12103 = d;
var G__12104 = e;
var G__12105 = f;
var G__12106 = g;
var G__12107 = h;
var G__12108 = i;
var G__12109 = j;
var G__12110 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__12100,G__12101,G__12102,G__12103,G__12104,G__12105,G__12106,G__12107,G__12108,G__12109,G__12110) : target_fn.call(null,G__12100,G__12101,G__12102,G__12103,G__12104,G__12105,G__12106,G__12107,G__12108,G__12109,G__12110));
});
var G__12819__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12111 = a;
var G__12112 = b;
var G__12113 = c;
var G__12114 = d;
var G__12115 = e;
var G__12116 = f;
var G__12117 = g;
var G__12118 = h;
var G__12119 = i;
var G__12120 = j;
var G__12121 = k;
var G__12122 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__12111,G__12112,G__12113,G__12114,G__12115,G__12116,G__12117,G__12118,G__12119,G__12120,G__12121,G__12122) : self__.dispatch_fn.call(null,G__12111,G__12112,G__12113,G__12114,G__12115,G__12116,G__12117,G__12118,G__12119,G__12120,G__12121,G__12122));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12123 = a;
var G__12124 = b;
var G__12125 = c;
var G__12126 = d;
var G__12127 = e;
var G__12128 = f;
var G__12129 = g;
var G__12130 = h;
var G__12131 = i;
var G__12132 = j;
var G__12133 = k;
var G__12134 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__12123,G__12124,G__12125,G__12126,G__12127,G__12128,G__12129,G__12130,G__12131,G__12132,G__12133,G__12134) : target_fn.call(null,G__12123,G__12124,G__12125,G__12126,G__12127,G__12128,G__12129,G__12130,G__12131,G__12132,G__12133,G__12134));
});
var G__12819__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12135 = a;
var G__12136 = b;
var G__12137 = c;
var G__12138 = d;
var G__12139 = e;
var G__12140 = f;
var G__12141 = g;
var G__12142 = h;
var G__12143 = i;
var G__12144 = j;
var G__12145 = k;
var G__12146 = l;
var G__12147 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__12135,G__12136,G__12137,G__12138,G__12139,G__12140,G__12141,G__12142,G__12143,G__12144,G__12145,G__12146,G__12147) : self__.dispatch_fn.call(null,G__12135,G__12136,G__12137,G__12138,G__12139,G__12140,G__12141,G__12142,G__12143,G__12144,G__12145,G__12146,G__12147));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12148 = a;
var G__12149 = b;
var G__12150 = c;
var G__12151 = d;
var G__12152 = e;
var G__12153 = f;
var G__12154 = g;
var G__12155 = h;
var G__12156 = i;
var G__12157 = j;
var G__12158 = k;
var G__12159 = l;
var G__12160 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__12148,G__12149,G__12150,G__12151,G__12152,G__12153,G__12154,G__12155,G__12156,G__12157,G__12158,G__12159,G__12160) : target_fn.call(null,G__12148,G__12149,G__12150,G__12151,G__12152,G__12153,G__12154,G__12155,G__12156,G__12157,G__12158,G__12159,G__12160));
});
var G__12819__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12161 = a;
var G__12162 = b;
var G__12163 = c;
var G__12164 = d;
var G__12165 = e;
var G__12166 = f;
var G__12167 = g;
var G__12168 = h;
var G__12169 = i;
var G__12170 = j;
var G__12171 = k;
var G__12172 = l;
var G__12173 = m;
var G__12174 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__12161,G__12162,G__12163,G__12164,G__12165,G__12166,G__12167,G__12168,G__12169,G__12170,G__12171,G__12172,G__12173,G__12174) : self__.dispatch_fn.call(null,G__12161,G__12162,G__12163,G__12164,G__12165,G__12166,G__12167,G__12168,G__12169,G__12170,G__12171,G__12172,G__12173,G__12174));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12175 = a;
var G__12176 = b;
var G__12177 = c;
var G__12178 = d;
var G__12179 = e;
var G__12180 = f;
var G__12181 = g;
var G__12182 = h;
var G__12183 = i;
var G__12184 = j;
var G__12185 = k;
var G__12186 = l;
var G__12187 = m;
var G__12188 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__12175,G__12176,G__12177,G__12178,G__12179,G__12180,G__12181,G__12182,G__12183,G__12184,G__12185,G__12186,G__12187,G__12188) : target_fn.call(null,G__12175,G__12176,G__12177,G__12178,G__12179,G__12180,G__12181,G__12182,G__12183,G__12184,G__12185,G__12186,G__12187,G__12188));
});
var G__12819__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12189 = a;
var G__12190 = b;
var G__12191 = c;
var G__12192 = d;
var G__12193 = e;
var G__12194 = f;
var G__12195 = g;
var G__12196 = h;
var G__12197 = i;
var G__12198 = j;
var G__12199 = k;
var G__12200 = l;
var G__12201 = m;
var G__12202 = n;
var G__12203 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__12189,G__12190,G__12191,G__12192,G__12193,G__12194,G__12195,G__12196,G__12197,G__12198,G__12199,G__12200,G__12201,G__12202,G__12203) : self__.dispatch_fn.call(null,G__12189,G__12190,G__12191,G__12192,G__12193,G__12194,G__12195,G__12196,G__12197,G__12198,G__12199,G__12200,G__12201,G__12202,G__12203));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12204 = a;
var G__12205 = b;
var G__12206 = c;
var G__12207 = d;
var G__12208 = e;
var G__12209 = f;
var G__12210 = g;
var G__12211 = h;
var G__12212 = i;
var G__12213 = j;
var G__12214 = k;
var G__12215 = l;
var G__12216 = m;
var G__12217 = n;
var G__12218 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__12204,G__12205,G__12206,G__12207,G__12208,G__12209,G__12210,G__12211,G__12212,G__12213,G__12214,G__12215,G__12216,G__12217,G__12218) : target_fn.call(null,G__12204,G__12205,G__12206,G__12207,G__12208,G__12209,G__12210,G__12211,G__12212,G__12213,G__12214,G__12215,G__12216,G__12217,G__12218));
});
var G__12819__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12219 = a;
var G__12220 = b;
var G__12221 = c;
var G__12222 = d;
var G__12223 = e;
var G__12224 = f;
var G__12225 = g;
var G__12226 = h;
var G__12227 = i;
var G__12228 = j;
var G__12229 = k;
var G__12230 = l;
var G__12231 = m;
var G__12232 = n;
var G__12233 = o;
var G__12234 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__12219,G__12220,G__12221,G__12222,G__12223,G__12224,G__12225,G__12226,G__12227,G__12228,G__12229,G__12230,G__12231,G__12232,G__12233,G__12234) : self__.dispatch_fn.call(null,G__12219,G__12220,G__12221,G__12222,G__12223,G__12224,G__12225,G__12226,G__12227,G__12228,G__12229,G__12230,G__12231,G__12232,G__12233,G__12234));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12235 = a;
var G__12236 = b;
var G__12237 = c;
var G__12238 = d;
var G__12239 = e;
var G__12240 = f;
var G__12241 = g;
var G__12242 = h;
var G__12243 = i;
var G__12244 = j;
var G__12245 = k;
var G__12246 = l;
var G__12247 = m;
var G__12248 = n;
var G__12249 = o;
var G__12250 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__12235,G__12236,G__12237,G__12238,G__12239,G__12240,G__12241,G__12242,G__12243,G__12244,G__12245,G__12246,G__12247,G__12248,G__12249,G__12250) : target_fn.call(null,G__12235,G__12236,G__12237,G__12238,G__12239,G__12240,G__12241,G__12242,G__12243,G__12244,G__12245,G__12246,G__12247,G__12248,G__12249,G__12250));
});
var G__12819__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12251 = a;
var G__12252 = b;
var G__12253 = c;
var G__12254 = d;
var G__12255 = e;
var G__12256 = f;
var G__12257 = g;
var G__12258 = h;
var G__12259 = i;
var G__12260 = j;
var G__12261 = k;
var G__12262 = l;
var G__12263 = m;
var G__12264 = n;
var G__12265 = o;
var G__12266 = p;
var G__12267 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__12251,G__12252,G__12253,G__12254,G__12255,G__12256,G__12257,G__12258,G__12259,G__12260,G__12261,G__12262,G__12263,G__12264,G__12265,G__12266,G__12267) : self__.dispatch_fn.call(null,G__12251,G__12252,G__12253,G__12254,G__12255,G__12256,G__12257,G__12258,G__12259,G__12260,G__12261,G__12262,G__12263,G__12264,G__12265,G__12266,G__12267));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12268 = a;
var G__12269 = b;
var G__12270 = c;
var G__12271 = d;
var G__12272 = e;
var G__12273 = f;
var G__12274 = g;
var G__12275 = h;
var G__12276 = i;
var G__12277 = j;
var G__12278 = k;
var G__12279 = l;
var G__12280 = m;
var G__12281 = n;
var G__12282 = o;
var G__12283 = p;
var G__12284 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__12268,G__12269,G__12270,G__12271,G__12272,G__12273,G__12274,G__12275,G__12276,G__12277,G__12278,G__12279,G__12280,G__12281,G__12282,G__12283,G__12284) : target_fn.call(null,G__12268,G__12269,G__12270,G__12271,G__12272,G__12273,G__12274,G__12275,G__12276,G__12277,G__12278,G__12279,G__12280,G__12281,G__12282,G__12283,G__12284));
});
var G__12819__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12285 = a;
var G__12286 = b;
var G__12287 = c;
var G__12288 = d;
var G__12289 = e;
var G__12290 = f;
var G__12291 = g;
var G__12292 = h;
var G__12293 = i;
var G__12294 = j;
var G__12295 = k;
var G__12296 = l;
var G__12297 = m;
var G__12298 = n;
var G__12299 = o;
var G__12300 = p;
var G__12301 = q;
var G__12302 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__12285,G__12286,G__12287,G__12288,G__12289,G__12290,G__12291,G__12292,G__12293,G__12294,G__12295,G__12296,G__12297,G__12298,G__12299,G__12300,G__12301,G__12302) : self__.dispatch_fn.call(null,G__12285,G__12286,G__12287,G__12288,G__12289,G__12290,G__12291,G__12292,G__12293,G__12294,G__12295,G__12296,G__12297,G__12298,G__12299,G__12300,G__12301,G__12302));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12303 = a;
var G__12304 = b;
var G__12305 = c;
var G__12306 = d;
var G__12307 = e;
var G__12308 = f;
var G__12309 = g;
var G__12310 = h;
var G__12311 = i;
var G__12312 = j;
var G__12313 = k;
var G__12314 = l;
var G__12315 = m;
var G__12316 = n;
var G__12317 = o;
var G__12318 = p;
var G__12319 = q;
var G__12320 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__12303,G__12304,G__12305,G__12306,G__12307,G__12308,G__12309,G__12310,G__12311,G__12312,G__12313,G__12314,G__12315,G__12316,G__12317,G__12318,G__12319,G__12320) : target_fn.call(null,G__12303,G__12304,G__12305,G__12306,G__12307,G__12308,G__12309,G__12310,G__12311,G__12312,G__12313,G__12314,G__12315,G__12316,G__12317,G__12318,G__12319,G__12320));
});
var G__12819__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12321 = a;
var G__12322 = b;
var G__12323 = c;
var G__12324 = d;
var G__12325 = e;
var G__12326 = f;
var G__12327 = g;
var G__12328 = h;
var G__12329 = i;
var G__12330 = j;
var G__12331 = k;
var G__12332 = l;
var G__12333 = m;
var G__12334 = n;
var G__12335 = o;
var G__12336 = p;
var G__12337 = q;
var G__12338 = r;
var G__12339 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__12321,G__12322,G__12323,G__12324,G__12325,G__12326,G__12327,G__12328,G__12329,G__12330,G__12331,G__12332,G__12333,G__12334,G__12335,G__12336,G__12337,G__12338,G__12339) : self__.dispatch_fn.call(null,G__12321,G__12322,G__12323,G__12324,G__12325,G__12326,G__12327,G__12328,G__12329,G__12330,G__12331,G__12332,G__12333,G__12334,G__12335,G__12336,G__12337,G__12338,G__12339));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12340 = a;
var G__12341 = b;
var G__12342 = c;
var G__12343 = d;
var G__12344 = e;
var G__12345 = f;
var G__12346 = g;
var G__12347 = h;
var G__12348 = i;
var G__12349 = j;
var G__12350 = k;
var G__12351 = l;
var G__12352 = m;
var G__12353 = n;
var G__12354 = o;
var G__12355 = p;
var G__12356 = q;
var G__12357 = r;
var G__12358 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__12340,G__12341,G__12342,G__12343,G__12344,G__12345,G__12346,G__12347,G__12348,G__12349,G__12350,G__12351,G__12352,G__12353,G__12354,G__12355,G__12356,G__12357,G__12358) : target_fn.call(null,G__12340,G__12341,G__12342,G__12343,G__12344,G__12345,G__12346,G__12347,G__12348,G__12349,G__12350,G__12351,G__12352,G__12353,G__12354,G__12355,G__12356,G__12357,G__12358));
});
var G__12819__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12359 = a;
var G__12360 = b;
var G__12361 = c;
var G__12362 = d;
var G__12363 = e;
var G__12364 = f;
var G__12365 = g;
var G__12366 = h;
var G__12367 = i;
var G__12368 = j;
var G__12369 = k;
var G__12370 = l;
var G__12371 = m;
var G__12372 = n;
var G__12373 = o;
var G__12374 = p;
var G__12375 = q;
var G__12376 = r;
var G__12377 = s;
var G__12378 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__12359,G__12360,G__12361,G__12362,G__12363,G__12364,G__12365,G__12366,G__12367,G__12368,G__12369,G__12370,G__12371,G__12372,G__12373,G__12374,G__12375,G__12376,G__12377,G__12378) : self__.dispatch_fn.call(null,G__12359,G__12360,G__12361,G__12362,G__12363,G__12364,G__12365,G__12366,G__12367,G__12368,G__12369,G__12370,G__12371,G__12372,G__12373,G__12374,G__12375,G__12376,G__12377,G__12378));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12379 = a;
var G__12380 = b;
var G__12381 = c;
var G__12382 = d;
var G__12383 = e;
var G__12384 = f;
var G__12385 = g;
var G__12386 = h;
var G__12387 = i;
var G__12388 = j;
var G__12389 = k;
var G__12390 = l;
var G__12391 = m;
var G__12392 = n;
var G__12393 = o;
var G__12394 = p;
var G__12395 = q;
var G__12396 = r;
var G__12397 = s;
var G__12398 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__12379,G__12380,G__12381,G__12382,G__12383,G__12384,G__12385,G__12386,G__12387,G__12388,G__12389,G__12390,G__12391,G__12392,G__12393,G__12394,G__12395,G__12396,G__12397,G__12398) : target_fn.call(null,G__12379,G__12380,G__12381,G__12382,G__12383,G__12384,G__12385,G__12386,G__12387,G__12388,G__12389,G__12390,G__12391,G__12392,G__12393,G__12394,G__12395,G__12396,G__12397,G__12398));
});
var G__12819__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__12819 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__12819__1.call(this,self__);
case 2:
return G__12819__2.call(this,self__,a);
case 3:
return G__12819__3.call(this,self__,a,b);
case 4:
return G__12819__4.call(this,self__,a,b,c);
case 5:
return G__12819__5.call(this,self__,a,b,c,d);
case 6:
return G__12819__6.call(this,self__,a,b,c,d,e);
case 7:
return G__12819__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__12819__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__12819__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__12819__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__12819__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__12819__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__12819__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__12819__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__12819__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__12819__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__12819__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__12819__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__12819__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__12819__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__12819__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__12819__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12819.cljs$core$IFn$_invoke$arity$1 = G__12819__1;
G__12819.cljs$core$IFn$_invoke$arity$2 = G__12819__2;
G__12819.cljs$core$IFn$_invoke$arity$3 = G__12819__3;
G__12819.cljs$core$IFn$_invoke$arity$4 = G__12819__4;
G__12819.cljs$core$IFn$_invoke$arity$5 = G__12819__5;
G__12819.cljs$core$IFn$_invoke$arity$6 = G__12819__6;
G__12819.cljs$core$IFn$_invoke$arity$7 = G__12819__7;
G__12819.cljs$core$IFn$_invoke$arity$8 = G__12819__8;
G__12819.cljs$core$IFn$_invoke$arity$9 = G__12819__9;
G__12819.cljs$core$IFn$_invoke$arity$10 = G__12819__10;
G__12819.cljs$core$IFn$_invoke$arity$11 = G__12819__11;
G__12819.cljs$core$IFn$_invoke$arity$12 = G__12819__12;
G__12819.cljs$core$IFn$_invoke$arity$13 = G__12819__13;
G__12819.cljs$core$IFn$_invoke$arity$14 = G__12819__14;
G__12819.cljs$core$IFn$_invoke$arity$15 = G__12819__15;
G__12819.cljs$core$IFn$_invoke$arity$16 = G__12819__16;
G__12819.cljs$core$IFn$_invoke$arity$17 = G__12819__17;
G__12819.cljs$core$IFn$_invoke$arity$18 = G__12819__18;
G__12819.cljs$core$IFn$_invoke$arity$19 = G__12819__19;
G__12819.cljs$core$IFn$_invoke$arity$20 = G__12819__20;
G__12819.cljs$core$IFn$_invoke$arity$21 = G__12819__21;
G__12819.cljs$core$IFn$_invoke$arity$22 = G__12819__22;
return G__12819;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args11971){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11971)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12399 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__12399) : self__.dispatch_fn.call(null,G__12399));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12400 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__12400) : target_fn.call(null,G__12400));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12401 = a;
var G__12402 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__12401,G__12402) : self__.dispatch_fn.call(null,G__12401,G__12402));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12403 = a;
var G__12404 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__12403,G__12404) : target_fn.call(null,G__12403,G__12404));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12405 = a;
var G__12406 = b;
var G__12407 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__12405,G__12406,G__12407) : self__.dispatch_fn.call(null,G__12405,G__12406,G__12407));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12408 = a;
var G__12409 = b;
var G__12410 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__12408,G__12409,G__12410) : target_fn.call(null,G__12408,G__12409,G__12410));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12411 = a;
var G__12412 = b;
var G__12413 = c;
var G__12414 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__12411,G__12412,G__12413,G__12414) : self__.dispatch_fn.call(null,G__12411,G__12412,G__12413,G__12414));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12415 = a;
var G__12416 = b;
var G__12417 = c;
var G__12418 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__12415,G__12416,G__12417,G__12418) : target_fn.call(null,G__12415,G__12416,G__12417,G__12418));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12419 = a;
var G__12420 = b;
var G__12421 = c;
var G__12422 = d;
var G__12423 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__12419,G__12420,G__12421,G__12422,G__12423) : self__.dispatch_fn.call(null,G__12419,G__12420,G__12421,G__12422,G__12423));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12424 = a;
var G__12425 = b;
var G__12426 = c;
var G__12427 = d;
var G__12428 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__12424,G__12425,G__12426,G__12427,G__12428) : target_fn.call(null,G__12424,G__12425,G__12426,G__12427,G__12428));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12429 = a;
var G__12430 = b;
var G__12431 = c;
var G__12432 = d;
var G__12433 = e;
var G__12434 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__12429,G__12430,G__12431,G__12432,G__12433,G__12434) : self__.dispatch_fn.call(null,G__12429,G__12430,G__12431,G__12432,G__12433,G__12434));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12435 = a;
var G__12436 = b;
var G__12437 = c;
var G__12438 = d;
var G__12439 = e;
var G__12440 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__12435,G__12436,G__12437,G__12438,G__12439,G__12440) : target_fn.call(null,G__12435,G__12436,G__12437,G__12438,G__12439,G__12440));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12441 = a;
var G__12442 = b;
var G__12443 = c;
var G__12444 = d;
var G__12445 = e;
var G__12446 = f;
var G__12447 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__12441,G__12442,G__12443,G__12444,G__12445,G__12446,G__12447) : self__.dispatch_fn.call(null,G__12441,G__12442,G__12443,G__12444,G__12445,G__12446,G__12447));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12448 = a;
var G__12449 = b;
var G__12450 = c;
var G__12451 = d;
var G__12452 = e;
var G__12453 = f;
var G__12454 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__12448,G__12449,G__12450,G__12451,G__12452,G__12453,G__12454) : target_fn.call(null,G__12448,G__12449,G__12450,G__12451,G__12452,G__12453,G__12454));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12455 = a;
var G__12456 = b;
var G__12457 = c;
var G__12458 = d;
var G__12459 = e;
var G__12460 = f;
var G__12461 = g;
var G__12462 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__12455,G__12456,G__12457,G__12458,G__12459,G__12460,G__12461,G__12462) : self__.dispatch_fn.call(null,G__12455,G__12456,G__12457,G__12458,G__12459,G__12460,G__12461,G__12462));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12463 = a;
var G__12464 = b;
var G__12465 = c;
var G__12466 = d;
var G__12467 = e;
var G__12468 = f;
var G__12469 = g;
var G__12470 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__12463,G__12464,G__12465,G__12466,G__12467,G__12468,G__12469,G__12470) : target_fn.call(null,G__12463,G__12464,G__12465,G__12466,G__12467,G__12468,G__12469,G__12470));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12471 = a;
var G__12472 = b;
var G__12473 = c;
var G__12474 = d;
var G__12475 = e;
var G__12476 = f;
var G__12477 = g;
var G__12478 = h;
var G__12479 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__12471,G__12472,G__12473,G__12474,G__12475,G__12476,G__12477,G__12478,G__12479) : self__.dispatch_fn.call(null,G__12471,G__12472,G__12473,G__12474,G__12475,G__12476,G__12477,G__12478,G__12479));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12480 = a;
var G__12481 = b;
var G__12482 = c;
var G__12483 = d;
var G__12484 = e;
var G__12485 = f;
var G__12486 = g;
var G__12487 = h;
var G__12488 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__12480,G__12481,G__12482,G__12483,G__12484,G__12485,G__12486,G__12487,G__12488) : target_fn.call(null,G__12480,G__12481,G__12482,G__12483,G__12484,G__12485,G__12486,G__12487,G__12488));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12489 = a;
var G__12490 = b;
var G__12491 = c;
var G__12492 = d;
var G__12493 = e;
var G__12494 = f;
var G__12495 = g;
var G__12496 = h;
var G__12497 = i;
var G__12498 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__12489,G__12490,G__12491,G__12492,G__12493,G__12494,G__12495,G__12496,G__12497,G__12498) : self__.dispatch_fn.call(null,G__12489,G__12490,G__12491,G__12492,G__12493,G__12494,G__12495,G__12496,G__12497,G__12498));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12499 = a;
var G__12500 = b;
var G__12501 = c;
var G__12502 = d;
var G__12503 = e;
var G__12504 = f;
var G__12505 = g;
var G__12506 = h;
var G__12507 = i;
var G__12508 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__12499,G__12500,G__12501,G__12502,G__12503,G__12504,G__12505,G__12506,G__12507,G__12508) : target_fn.call(null,G__12499,G__12500,G__12501,G__12502,G__12503,G__12504,G__12505,G__12506,G__12507,G__12508));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12509 = a;
var G__12510 = b;
var G__12511 = c;
var G__12512 = d;
var G__12513 = e;
var G__12514 = f;
var G__12515 = g;
var G__12516 = h;
var G__12517 = i;
var G__12518 = j;
var G__12519 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__12509,G__12510,G__12511,G__12512,G__12513,G__12514,G__12515,G__12516,G__12517,G__12518,G__12519) : self__.dispatch_fn.call(null,G__12509,G__12510,G__12511,G__12512,G__12513,G__12514,G__12515,G__12516,G__12517,G__12518,G__12519));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12520 = a;
var G__12521 = b;
var G__12522 = c;
var G__12523 = d;
var G__12524 = e;
var G__12525 = f;
var G__12526 = g;
var G__12527 = h;
var G__12528 = i;
var G__12529 = j;
var G__12530 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__12520,G__12521,G__12522,G__12523,G__12524,G__12525,G__12526,G__12527,G__12528,G__12529,G__12530) : target_fn.call(null,G__12520,G__12521,G__12522,G__12523,G__12524,G__12525,G__12526,G__12527,G__12528,G__12529,G__12530));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12531 = a;
var G__12532 = b;
var G__12533 = c;
var G__12534 = d;
var G__12535 = e;
var G__12536 = f;
var G__12537 = g;
var G__12538 = h;
var G__12539 = i;
var G__12540 = j;
var G__12541 = k;
var G__12542 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__12531,G__12532,G__12533,G__12534,G__12535,G__12536,G__12537,G__12538,G__12539,G__12540,G__12541,G__12542) : self__.dispatch_fn.call(null,G__12531,G__12532,G__12533,G__12534,G__12535,G__12536,G__12537,G__12538,G__12539,G__12540,G__12541,G__12542));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12543 = a;
var G__12544 = b;
var G__12545 = c;
var G__12546 = d;
var G__12547 = e;
var G__12548 = f;
var G__12549 = g;
var G__12550 = h;
var G__12551 = i;
var G__12552 = j;
var G__12553 = k;
var G__12554 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__12543,G__12544,G__12545,G__12546,G__12547,G__12548,G__12549,G__12550,G__12551,G__12552,G__12553,G__12554) : target_fn.call(null,G__12543,G__12544,G__12545,G__12546,G__12547,G__12548,G__12549,G__12550,G__12551,G__12552,G__12553,G__12554));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12555 = a;
var G__12556 = b;
var G__12557 = c;
var G__12558 = d;
var G__12559 = e;
var G__12560 = f;
var G__12561 = g;
var G__12562 = h;
var G__12563 = i;
var G__12564 = j;
var G__12565 = k;
var G__12566 = l;
var G__12567 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__12555,G__12556,G__12557,G__12558,G__12559,G__12560,G__12561,G__12562,G__12563,G__12564,G__12565,G__12566,G__12567) : self__.dispatch_fn.call(null,G__12555,G__12556,G__12557,G__12558,G__12559,G__12560,G__12561,G__12562,G__12563,G__12564,G__12565,G__12566,G__12567));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12568 = a;
var G__12569 = b;
var G__12570 = c;
var G__12571 = d;
var G__12572 = e;
var G__12573 = f;
var G__12574 = g;
var G__12575 = h;
var G__12576 = i;
var G__12577 = j;
var G__12578 = k;
var G__12579 = l;
var G__12580 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__12568,G__12569,G__12570,G__12571,G__12572,G__12573,G__12574,G__12575,G__12576,G__12577,G__12578,G__12579,G__12580) : target_fn.call(null,G__12568,G__12569,G__12570,G__12571,G__12572,G__12573,G__12574,G__12575,G__12576,G__12577,G__12578,G__12579,G__12580));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12581 = a;
var G__12582 = b;
var G__12583 = c;
var G__12584 = d;
var G__12585 = e;
var G__12586 = f;
var G__12587 = g;
var G__12588 = h;
var G__12589 = i;
var G__12590 = j;
var G__12591 = k;
var G__12592 = l;
var G__12593 = m;
var G__12594 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__12581,G__12582,G__12583,G__12584,G__12585,G__12586,G__12587,G__12588,G__12589,G__12590,G__12591,G__12592,G__12593,G__12594) : self__.dispatch_fn.call(null,G__12581,G__12582,G__12583,G__12584,G__12585,G__12586,G__12587,G__12588,G__12589,G__12590,G__12591,G__12592,G__12593,G__12594));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12595 = a;
var G__12596 = b;
var G__12597 = c;
var G__12598 = d;
var G__12599 = e;
var G__12600 = f;
var G__12601 = g;
var G__12602 = h;
var G__12603 = i;
var G__12604 = j;
var G__12605 = k;
var G__12606 = l;
var G__12607 = m;
var G__12608 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__12595,G__12596,G__12597,G__12598,G__12599,G__12600,G__12601,G__12602,G__12603,G__12604,G__12605,G__12606,G__12607,G__12608) : target_fn.call(null,G__12595,G__12596,G__12597,G__12598,G__12599,G__12600,G__12601,G__12602,G__12603,G__12604,G__12605,G__12606,G__12607,G__12608));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12609 = a;
var G__12610 = b;
var G__12611 = c;
var G__12612 = d;
var G__12613 = e;
var G__12614 = f;
var G__12615 = g;
var G__12616 = h;
var G__12617 = i;
var G__12618 = j;
var G__12619 = k;
var G__12620 = l;
var G__12621 = m;
var G__12622 = n;
var G__12623 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__12609,G__12610,G__12611,G__12612,G__12613,G__12614,G__12615,G__12616,G__12617,G__12618,G__12619,G__12620,G__12621,G__12622,G__12623) : self__.dispatch_fn.call(null,G__12609,G__12610,G__12611,G__12612,G__12613,G__12614,G__12615,G__12616,G__12617,G__12618,G__12619,G__12620,G__12621,G__12622,G__12623));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12624 = a;
var G__12625 = b;
var G__12626 = c;
var G__12627 = d;
var G__12628 = e;
var G__12629 = f;
var G__12630 = g;
var G__12631 = h;
var G__12632 = i;
var G__12633 = j;
var G__12634 = k;
var G__12635 = l;
var G__12636 = m;
var G__12637 = n;
var G__12638 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__12624,G__12625,G__12626,G__12627,G__12628,G__12629,G__12630,G__12631,G__12632,G__12633,G__12634,G__12635,G__12636,G__12637,G__12638) : target_fn.call(null,G__12624,G__12625,G__12626,G__12627,G__12628,G__12629,G__12630,G__12631,G__12632,G__12633,G__12634,G__12635,G__12636,G__12637,G__12638));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12639 = a;
var G__12640 = b;
var G__12641 = c;
var G__12642 = d;
var G__12643 = e;
var G__12644 = f;
var G__12645 = g;
var G__12646 = h;
var G__12647 = i;
var G__12648 = j;
var G__12649 = k;
var G__12650 = l;
var G__12651 = m;
var G__12652 = n;
var G__12653 = o;
var G__12654 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__12639,G__12640,G__12641,G__12642,G__12643,G__12644,G__12645,G__12646,G__12647,G__12648,G__12649,G__12650,G__12651,G__12652,G__12653,G__12654) : self__.dispatch_fn.call(null,G__12639,G__12640,G__12641,G__12642,G__12643,G__12644,G__12645,G__12646,G__12647,G__12648,G__12649,G__12650,G__12651,G__12652,G__12653,G__12654));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12655 = a;
var G__12656 = b;
var G__12657 = c;
var G__12658 = d;
var G__12659 = e;
var G__12660 = f;
var G__12661 = g;
var G__12662 = h;
var G__12663 = i;
var G__12664 = j;
var G__12665 = k;
var G__12666 = l;
var G__12667 = m;
var G__12668 = n;
var G__12669 = o;
var G__12670 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__12655,G__12656,G__12657,G__12658,G__12659,G__12660,G__12661,G__12662,G__12663,G__12664,G__12665,G__12666,G__12667,G__12668,G__12669,G__12670) : target_fn.call(null,G__12655,G__12656,G__12657,G__12658,G__12659,G__12660,G__12661,G__12662,G__12663,G__12664,G__12665,G__12666,G__12667,G__12668,G__12669,G__12670));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12671 = a;
var G__12672 = b;
var G__12673 = c;
var G__12674 = d;
var G__12675 = e;
var G__12676 = f;
var G__12677 = g;
var G__12678 = h;
var G__12679 = i;
var G__12680 = j;
var G__12681 = k;
var G__12682 = l;
var G__12683 = m;
var G__12684 = n;
var G__12685 = o;
var G__12686 = p;
var G__12687 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__12671,G__12672,G__12673,G__12674,G__12675,G__12676,G__12677,G__12678,G__12679,G__12680,G__12681,G__12682,G__12683,G__12684,G__12685,G__12686,G__12687) : self__.dispatch_fn.call(null,G__12671,G__12672,G__12673,G__12674,G__12675,G__12676,G__12677,G__12678,G__12679,G__12680,G__12681,G__12682,G__12683,G__12684,G__12685,G__12686,G__12687));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12688 = a;
var G__12689 = b;
var G__12690 = c;
var G__12691 = d;
var G__12692 = e;
var G__12693 = f;
var G__12694 = g;
var G__12695 = h;
var G__12696 = i;
var G__12697 = j;
var G__12698 = k;
var G__12699 = l;
var G__12700 = m;
var G__12701 = n;
var G__12702 = o;
var G__12703 = p;
var G__12704 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__12688,G__12689,G__12690,G__12691,G__12692,G__12693,G__12694,G__12695,G__12696,G__12697,G__12698,G__12699,G__12700,G__12701,G__12702,G__12703,G__12704) : target_fn.call(null,G__12688,G__12689,G__12690,G__12691,G__12692,G__12693,G__12694,G__12695,G__12696,G__12697,G__12698,G__12699,G__12700,G__12701,G__12702,G__12703,G__12704));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12705 = a;
var G__12706 = b;
var G__12707 = c;
var G__12708 = d;
var G__12709 = e;
var G__12710 = f;
var G__12711 = g;
var G__12712 = h;
var G__12713 = i;
var G__12714 = j;
var G__12715 = k;
var G__12716 = l;
var G__12717 = m;
var G__12718 = n;
var G__12719 = o;
var G__12720 = p;
var G__12721 = q;
var G__12722 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__12705,G__12706,G__12707,G__12708,G__12709,G__12710,G__12711,G__12712,G__12713,G__12714,G__12715,G__12716,G__12717,G__12718,G__12719,G__12720,G__12721,G__12722) : self__.dispatch_fn.call(null,G__12705,G__12706,G__12707,G__12708,G__12709,G__12710,G__12711,G__12712,G__12713,G__12714,G__12715,G__12716,G__12717,G__12718,G__12719,G__12720,G__12721,G__12722));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12723 = a;
var G__12724 = b;
var G__12725 = c;
var G__12726 = d;
var G__12727 = e;
var G__12728 = f;
var G__12729 = g;
var G__12730 = h;
var G__12731 = i;
var G__12732 = j;
var G__12733 = k;
var G__12734 = l;
var G__12735 = m;
var G__12736 = n;
var G__12737 = o;
var G__12738 = p;
var G__12739 = q;
var G__12740 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__12723,G__12724,G__12725,G__12726,G__12727,G__12728,G__12729,G__12730,G__12731,G__12732,G__12733,G__12734,G__12735,G__12736,G__12737,G__12738,G__12739,G__12740) : target_fn.call(null,G__12723,G__12724,G__12725,G__12726,G__12727,G__12728,G__12729,G__12730,G__12731,G__12732,G__12733,G__12734,G__12735,G__12736,G__12737,G__12738,G__12739,G__12740));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12741 = a;
var G__12742 = b;
var G__12743 = c;
var G__12744 = d;
var G__12745 = e;
var G__12746 = f;
var G__12747 = g;
var G__12748 = h;
var G__12749 = i;
var G__12750 = j;
var G__12751 = k;
var G__12752 = l;
var G__12753 = m;
var G__12754 = n;
var G__12755 = o;
var G__12756 = p;
var G__12757 = q;
var G__12758 = r;
var G__12759 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__12741,G__12742,G__12743,G__12744,G__12745,G__12746,G__12747,G__12748,G__12749,G__12750,G__12751,G__12752,G__12753,G__12754,G__12755,G__12756,G__12757,G__12758,G__12759) : self__.dispatch_fn.call(null,G__12741,G__12742,G__12743,G__12744,G__12745,G__12746,G__12747,G__12748,G__12749,G__12750,G__12751,G__12752,G__12753,G__12754,G__12755,G__12756,G__12757,G__12758,G__12759));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12760 = a;
var G__12761 = b;
var G__12762 = c;
var G__12763 = d;
var G__12764 = e;
var G__12765 = f;
var G__12766 = g;
var G__12767 = h;
var G__12768 = i;
var G__12769 = j;
var G__12770 = k;
var G__12771 = l;
var G__12772 = m;
var G__12773 = n;
var G__12774 = o;
var G__12775 = p;
var G__12776 = q;
var G__12777 = r;
var G__12778 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__12760,G__12761,G__12762,G__12763,G__12764,G__12765,G__12766,G__12767,G__12768,G__12769,G__12770,G__12771,G__12772,G__12773,G__12774,G__12775,G__12776,G__12777,G__12778) : target_fn.call(null,G__12760,G__12761,G__12762,G__12763,G__12764,G__12765,G__12766,G__12767,G__12768,G__12769,G__12770,G__12771,G__12772,G__12773,G__12774,G__12775,G__12776,G__12777,G__12778));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12779 = a;
var G__12780 = b;
var G__12781 = c;
var G__12782 = d;
var G__12783 = e;
var G__12784 = f;
var G__12785 = g;
var G__12786 = h;
var G__12787 = i;
var G__12788 = j;
var G__12789 = k;
var G__12790 = l;
var G__12791 = m;
var G__12792 = n;
var G__12793 = o;
var G__12794 = p;
var G__12795 = q;
var G__12796 = r;
var G__12797 = s;
var G__12798 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__12779,G__12780,G__12781,G__12782,G__12783,G__12784,G__12785,G__12786,G__12787,G__12788,G__12789,G__12790,G__12791,G__12792,G__12793,G__12794,G__12795,G__12796,G__12797,G__12798) : self__.dispatch_fn.call(null,G__12779,G__12780,G__12781,G__12782,G__12783,G__12784,G__12785,G__12786,G__12787,G__12788,G__12789,G__12790,G__12791,G__12792,G__12793,G__12794,G__12795,G__12796,G__12797,G__12798));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12799 = a;
var G__12800 = b;
var G__12801 = c;
var G__12802 = d;
var G__12803 = e;
var G__12804 = f;
var G__12805 = g;
var G__12806 = h;
var G__12807 = i;
var G__12808 = j;
var G__12809 = k;
var G__12810 = l;
var G__12811 = m;
var G__12812 = n;
var G__12813 = o;
var G__12814 = p;
var G__12815 = q;
var G__12816 = r;
var G__12817 = s;
var G__12818 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__12799,G__12800,G__12801,G__12802,G__12803,G__12804,G__12805,G__12806,G__12807,G__12808,G__12809,G__12810,G__12811,G__12812,G__12813,G__12814,G__12815,G__12816,G__12817,G__12818) : target_fn.call(null,G__12799,G__12800,G__12801,G__12802,G__12803,G__12804,G__12805,G__12806,G__12807,G__12808,G__12809,G__12810,G__12811,G__12812,G__12813,G__12814,G__12815,G__12816,G__12817,G__12818));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__4513__auto__,writer__4514__auto__,opt__4515__auto__){
return cljs.core._write(writer__4514__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
 * Removes all of the methods of multimethod.
 */
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
 * Removes the method of multimethod associated with dispatch-value.
 */
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
 * Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
 * when there is a conflict
 */
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
 * Given a multimethod, returns a map of dispatch values -> dispatch fns
 */
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
 * Given a multimethod and a dispatch value, returns the dispatch fn
 * that would apply to that value, or nil if none apply and no default
 */
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
 * Given a multimethod, returns a map of preferred value -> set of other values
 */
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__12820 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__12820);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__4513__auto__,writer__4514__auto__,opt__4515__auto__){
return cljs.core._write(writer__4514__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
 * @constructor
 */
cljs.core.ExceptionInfo = (function ExceptionInfo(message,data,cause){
var e = (new Error());
var this$ = this;
this$.message = message;

this$.data = data;

this$.cause = cause;

this$.name = e.name;

this$.description = e.description;

this$.number = e.number;

this$.fileName = e.fileName;

this$.lineNumber = e.lineNumber;

this$.columnNumber = e.columnNumber;

this$.stack = e.stack;

return this$;
});
cljs.core.ExceptionInfo.prototype.__proto__ = Error.prototype;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});
cljs.core.ExceptionInfo.prototype.toString = (function (){
var this$ = this;
return cljs.core.pr_str_STAR_(this$);
});
/**
 * Alpha - subject to change.
 * Create an instance of ExceptionInfo, an Error type that carries a
 * map of additional data.
 */
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
 * Alpha - subject to change.
 * Returns exception data (a map) if ex is an ExceptionInfo.
 * Otherwise returns nil.
 */
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
 * Alpha - subject to change.
 * Returns the message attached to the given Error / ExceptionInfo object.
 * For non-Errors returns nil.
 */
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
 * Alpha - subject to change.
 * Returns exception cause (an Error / ExceptionInfo) if ex is an
 * ExceptionInfo.
 * Otherwise returns nil.
 */
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
 * Returns an JavaScript compatible comparator based upon pred.
 */
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__12828 = x;
var G__12829 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__12828,G__12829) : pred.call(null,G__12828,G__12829));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__12830 = y;
var G__12831 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__12830,G__12831) : pred.call(null,G__12830,G__12831));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
 * test [v] finds fn at key :test in var metadata and calls it,
 * presuming failure will throw exception
 */
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});

//# sourceMappingURL=core.js.map